
cmos_test.elf:     file format elf32-littlenios2
cmos_test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10100244

Program Header:
    LOAD off    0x00001000 vaddr 0x10100000 paddr 0x10100000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10100020 paddr 0x10100020 align 2**12
         filesz 0x0000fb48 memsz 0x0000fb48 flags r-x
    LOAD off    0x00010b68 vaddr 0x1010fb68 paddr 0x1011165c align 2**12
         filesz 0x00001af4 memsz 0x00001af4 flags rw-
    LOAD off    0x00013150 vaddr 0x10113150 paddr 0x10113150 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10100000  10100000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  10100020  10100020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f59c  10100244  10100244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000388  1010f7e0  1010f7e0  000107e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af4  1010fb68  1011165c  00010b68  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10113150  10113150  00013150  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  101132b0  101132b0  0001265c  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001265c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000fc0  00000000  00000000  00012680  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00025c31  00000000  00000000  00013640  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000098b7  00000000  00000000  00039271  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000be98  00000000  00000000  00042b28  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002294  00000000  00000000  0004e9c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003a09  00000000  00000000  00050c54  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017ed5  00000000  00000000  0005465d  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  0006c534  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001978  00000000  00000000  0006c568  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007118e  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  00071191  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0007119d  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0007119e  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0007119f  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  000711aa  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  000711b5  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  000711c0  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000058  00000000  00000000  000711ca  2**0
                  CONTENTS, READONLY
 26 .jdi          0000596f  00000000  00000000  00071222  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00284b86  00000000  00000000  00076b91  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10100000 l    d  .entry	00000000 .entry
10100020 l    d  .exceptions	00000000 .exceptions
10100244 l    d  .text	00000000 .text
1010f7e0 l    d  .rodata	00000000 .rodata
1010fb68 l    d  .rwdata	00000000 .rwdata
10113150 l    d  .bss	00000000 .bss
101132b0 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/Users/craio/Documents/git/Embedded_Systems_Camera/lab_4_compiled_top_level/sw/nios/cmos_test_bsp//obj/HAL/src/crt0.o
1010028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 demo_256_MB_memory_access.c
10111614 l     O .rwdata	00000005 __func__.3034
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 impure.c
1010fb68 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 vfprintf.c
1010f8b2 l     O .rodata	00000010 zeroes.4404
101026cc l     F .text	000000bc __sbprintf
1010f8c2 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 dtoa.c
101028f4 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
10104424 l     F .text	00000008 __fp_unlock
10104438 l     F .text	0000019c __sinit.part.1
101045d4 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
1010ffac l     O .rwdata	00000020 lc_ctype_charset
1010ff8c l     O .rwdata	00000020 lc_message_charset
1010ffcc l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
1010f8f0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
101071f0 l     F .text	000000fc __sprint_r.part.0
1010fa24 l     O .rodata	00000010 blanks.4348
1010fa14 l     O .rodata	00000010 zeroes.4349
1010877c l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
1010cfb4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1010d0c0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1010d120 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
1010d22c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
1010d30c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1010d478 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1010d564 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
1010d738 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
1011164c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
1010d984 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1010dab8 l     F .text	00000034 alt_dev_reg
101105b4 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1010dd90 l     F .text	0000020c altera_avalon_jtag_uart_irq
1010df9c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1010e748 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1010ebbc l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1010ecfc l     F .text	0000003c alt_get_errno
1010ed38 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
10113184 g     O .bss	00000004 alt_instruction_exception_handler
101069fc g     F .text	00000074 _mprec_log10
10106ae8 g     F .text	0000008c __any_on
101091d4 g     F .text	00000054 _isatty_r
1010f8fc g     O .rodata	00000028 __mprec_tinytens
1010d674 g     F .text	0000007c alt_main
101131b0 g     O .bss	00000100 alt_irq
10109228 g     F .text	00000060 _lseek_r
1011165c g       *ABS*	00000000 __flash_rwdata_start
1010bae0 g     F .text	00000088 .hidden __eqdf2
101132b0 g       *ABS*	00000000 __alt_heap_start
10106ee0 g     F .text	0000005c _kill_r
10100464 g     F .text	0000003c printf
10109b00 g     F .text	0000009c _wcrtomb_r
10106ca8 g     F .text	00000084 _signal_r
10107018 g     F .text	0000005c __sseek
10104774 g     F .text	00000010 __sinit
101099a8 g     F .text	00000140 __swbuf_r
10104d80 g     F .text	0000007c _setlocale_r
101045dc g     F .text	00000068 __sfmoreglue
1010d714 g     F .text	00000024 __malloc_unlock
10109288 g     F .text	0000015c memmove
1010475c g     F .text	00000018 _cleanup
10105b78 g     F .text	000000a8 _Balloc
1010bb68 g     F .text	000000dc .hidden __gtdf2
1010f0f4 g     F .text	00000024 altera_nios2_gen2_irq_init
10100000 g     F .entry	0000001c __reset
10100020 g       *ABS*	00000000 __flash_exceptions_start
10108cbc g     F .text	0000005c _fstat_r
10113168 g     O .bss	00000004 errno
10106f94 g     F .text	00000008 __seofread
10113170 g     O .bss	00000004 alt_argv
10119614 g       *ABS*	00000000 _gp
1010d20c g     F .text	00000020 getpid
10110434 g     O .rwdata	00000180 alt_fd_list
1010f118 g     F .text	00000090 alt_find_dev
10105908 g     F .text	00000148 memcpy
1010442c g     F .text	0000000c _cleanup_r
1010cdcc g     F .text	000000dc .hidden __floatsidf
1010ec80 g     F .text	0000007c alt_io_redirect
1010bc44 g     F .text	000000f4 .hidden __ltdf2
1010f7e0 g       *ABS*	00000000 __DTOR_END__
1010f3e4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
10106b74 g     F .text	00000074 __fpclassifyd
10106958 g     F .text	000000a4 __ratio
10108760 g     F .text	0000001c __vfiprintf_internal
1010e194 g     F .text	0000021c altera_avalon_jtag_uart_read
10100434 g     F .text	00000030 _printf_r
10100000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
1010a890 g     F .text	00000064 .hidden __udivsi3
1010d268 g     F .text	000000a4 isatty
10106d2c g     F .text	000000bc _raise_r
1010035c g     F .text	00000068 __assert_func
1010f94c g     O .rodata	000000c8 __mprec_tens
10104dfc g     F .text	0000000c __locale_charset
1010f354 g     F .text	00000090 alt_icache_flush
10113164 g     O .bss	00000004 __malloc_top_pad
10106f3c g     F .text	00000004 _getpid_r
10111624 g     O .rwdata	00000004 __mb_cur_max
10104e2c g     F .text	0000000c _localeconv_r
10108d18 g     F .text	000004bc __sfvwrite_r
10105f84 g     F .text	0000003c __i2b
10106de8 g     F .text	000000a8 __sigtramp_r
10106be8 g     F .text	00000054 _sbrk_r
101093e4 g     F .text	00000060 _read_r
10111644 g     O .rwdata	00000004 alt_max_fd
101089b0 g     F .text	000000f0 _fclose_r
101043f4 g     F .text	00000030 fflush
10113160 g     O .bss	00000004 __malloc_max_sbrked_mem
1010a94c g     F .text	000008ac .hidden __adddf3
10106700 g     F .text	0000010c __b2d
1010a260 g     F .text	00000538 .hidden __umoddi3
1010d5a0 g     F .text	000000d4 lseek
1011161c g     O .rwdata	00000004 _global_impure_ptr
10109444 g     F .text	00000564 _realloc_r
101132b0 g       *ABS*	00000000 __bss_end
1010eacc g     F .text	000000f0 alt_iic_isr_register
1010efec g     F .text	00000108 alt_tick
10109ce8 g     F .text	00000578 .hidden __udivdi3
10108c18 g     F .text	00000024 _fputwc_r
1010f924 g     O .rodata	00000028 __mprec_bigtens
10105d68 g     F .text	00000104 __s2b
101028dc g     F .text	00000018 abort
1010cea8 g     F .text	000000a8 .hidden __floatunsidf
10106440 g     F .text	00000060 __mcmp
10104794 g     F .text	00000018 __fp_lock_all
1010ea80 g     F .text	0000004c alt_ic_irq_enabled
1010ef50 g     F .text	0000009c alt_alarm_stop
10113178 g     O .bss	00000004 alt_irq_active
101000fc g     F .exceptions	000000d4 alt_irq_handler
1011040c g     O .rwdata	00000028 alt_dev_null
1010e700 g     F .text	00000048 alt_dcache_flush_all
10105e6c g     F .text	00000068 __hi0bits
1010cd4c g     F .text	00000080 .hidden __fixdfsi
1011165c g       *ABS*	00000000 __ram_rwdata_end
1011163c g     O .rwdata	00000008 alt_dev_list
1010d9c0 g     F .text	000000f8 write
1010fb68 g       *ABS*	00000000 __ram_rodata_end
1010d15c g     F .text	000000b0 fstat
1010d348 g     F .text	00000130 kill
1010bc44 g     F .text	000000f4 .hidden __ledf2
101061b8 g     F .text	00000140 __pow5mult
10113158 g     O .bss	00000004 __nlocale_changed
10107304 g     F .text	0000145c ___vfiprintf_internal_r
1010a8f4 g     F .text	00000058 .hidden __umodsi3
101132b0 g       *ABS*	00000000 end
1010dcd0 g     F .text	000000c0 altera_avalon_jtag_uart_init
101001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
1010f7e0 g       *ABS*	00000000 __CTOR_LIST__
10120000 g       *ABS*	00000000 __alt_stack_pointer
1010cf50 g     F .text	00000064 .hidden __clzsi2
1010e3b0 g     F .text	00000224 altera_avalon_jtag_uart_write
10104784 g     F .text	00000004 __sfp_lock_acquire
10105824 g     F .text	000000e4 memchr
101004b8 g     F .text	000021f8 ___vfprintf_internal_r
101048e8 g     F .text	00000310 _free_r
10104e08 g     F .text	00000010 __locale_mb_cur_max
1010f660 g     F .text	00000180 __call_exitprocs
10113154 g     O .bss	00000004 __mlocale_changed
10111628 g     O .rwdata	00000004 __malloc_sbrk_base
10100244 g     F .text	0000004c _start
1011317c g     O .bss	00000004 _alt_tick_rate
101062f8 g     F .text	00000148 __lshift
10113180 g     O .bss	00000004 _alt_nticks
10106ea4 g     F .text	00000018 signal
1010d774 g     F .text	000000fc read
1010db24 g     F .text	00000048 alt_sys_init
1010f548 g     F .text	00000118 __register_exitproc
10105fc0 g     F .text	000001f8 __multiply
1010e03c g     F .text	00000068 altera_avalon_jtag_uart_close
1010fb68 g       *ABS*	00000000 __ram_rwdata_start
1010f7e0 g       *ABS*	00000000 __ram_rodata_start
10113188 g     O .bss	00000028 __malloc_current_mallinfo
1010680c g     F .text	0000014c __d2b
1010db6c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1010f2b0 g     F .text	000000a4 alt_get_fd
10108898 g     F .text	00000054 _close_r
1010f4cc g     F .text	0000007c memcmp
1010dc2c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
101132b0 g       *ABS*	00000000 __alt_stack_base
1010dc7c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10102788 g     F .text	00000154 __swsetup_r
1010b1f8 g     F .text	000008e8 .hidden __divdf3
10104644 g     F .text	00000118 __sfp
10106a70 g     F .text	00000078 __copybits
10110004 g     O .rwdata	00000408 __malloc_av_
10104790 g     F .text	00000004 __sinit_lock_release
1010bd38 g     F .text	00000718 .hidden __muldf3
10106f40 g     F .text	00000054 __sread
1010f1a8 g     F .text	00000108 alt_find_file
1010e784 g     F .text	000000a4 alt_dev_llist_insert
1010d6f0 g     F .text	00000024 __malloc_lock
1010d8d4 g     F .text	000000b0 sbrk
10104398 g     F .text	0000005c _fflush_r
101088ec g     F .text	000000c4 _calloc_r
10113150 g       *ABS*	00000000 __bss_start
10105a50 g     F .text	00000128 memset
10100290 g     F .text	000000cc main
10113174 g     O .bss	00000004 alt_envp
1011315c g     O .bss	00000004 __malloc_max_total_mem
1010dbcc g     F .text	00000060 altera_avalon_jtag_uart_write_fd
10109ae8 g     F .text	00000018 __swbuf
10107074 g     F .text	00000008 __sclose
10120000 g       *ABS*	00000000 __alt_heap_limit
10108aa0 g     F .text	00000014 fclose
10102af4 g     F .text	00001688 _dtoa_r
10105018 g     F .text	0000080c _malloc_r
10109c5c g     F .text	00000030 __ascii_wctomb
10111648 g     O .rwdata	00000004 alt_errno
101003d8 g     F .text	00000020 _fiprintf_r
10106ebc g     F .text	00000010 _init_signal
10104bf8 g     F .text	000000c4 _fwalk
1010a798 g     F .text	00000084 .hidden __divsi3
101047c4 g     F .text	00000124 _malloc_trim_r
1010f7e0 g       *ABS*	00000000 __CTOR_END__
1010707c g     F .text	000000dc strcmp
1010f7e0 g       *ABS*	00000000 __flash_rodata_start
1010f7e0 g       *ABS*	00000000 __DTOR_LIST__
1010bae0 g     F .text	00000088 .hidden __nedf2
1010daec g     F .text	00000038 alt_irq_init
1010d870 g     F .text	00000064 alt_release_fd
1010fa34 g     O .rodata	00000100 .hidden __clz_tab
10113150 g     O .bss	00000004 _PathLocale
1010f480 g     F .text	00000014 atexit
10108838 g     F .text	00000060 _write_r
10104e38 g     F .text	00000018 setlocale
10111620 g     O .rwdata	00000004 _impure_ptr
1011316c g     O .bss	00000004 alt_argc
1010417c g     F .text	0000021c __sflush_r
1010e888 g     F .text	00000060 _do_dtors
10104e24 g     F .text	00000008 __locale_cjk_lang
10100020 g       .exceptions	00000000 alt_irq_entry
1010669c g     F .text	00000064 __ulp
101047ac g     F .text	00000018 __fp_unlock_all
10111634 g     O .rwdata	00000008 alt_fs_list
10100020 g       *ABS*	00000000 __ram_exceptions_start
10104e50 g     F .text	0000000c localeconv
1010e91c g     F .text	00000050 alt_ic_isr_register
1011165c g       *ABS*	00000000 _edata
101132b0 g       *ABS*	00000000 _end
10108ab4 g     F .text	00000164 __fputwc
10100244 g       *ABS*	00000000 __ram_exceptions_end
1010e0a4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
1010e9f4 g     F .text	0000008c alt_ic_irq_disable
10106f9c g     F .text	0000007c __swrite
1011162c g     O .rwdata	00000004 __malloc_trim_threshold
10104e18 g     F .text	0000000c __locale_msgcharset
1010f494 g     F .text	00000038 exit
101003f8 g     F .text	0000003c fiprintf
101004a0 g     F .text	00000018 _vfiprintf_r
10104cbc g     F .text	000000c4 _fwalk_reent
101064a0 g     F .text	000001fc __mdiff
1010a81c g     F .text	00000074 .hidden __modsi3
10120000 g       *ABS*	00000000 __alt_data_end
10100020 g     F .exceptions	00000000 alt_exception
10104788 g     F .text	00000004 __sfp_lock_release
1010d0ec g     F .text	00000034 _exit
1010e5d4 g     F .text	0000012c alt_alarm_start
10104e5c g     F .text	000001bc __smakebuf_r
10107158 g     F .text	00000098 strlen
10106c3c g     F .text	0000006c _init_signal_r
1010edfc g     F .text	00000154 open
1010bb68 g     F .text	000000dc .hidden __gedf2
101003c4 g     F .text	00000014 __assert
10111630 g     O .rwdata	00000004 __wctomb
101072ec g     F .text	00000018 __sprint_r
1010e8e8 g     F .text	00000034 alt_icache_flush_all
10111650 g     O .rwdata	00000004 alt_priority_mask
1010e96c g     F .text	00000088 alt_ic_irq_enable
101026b0 g     F .text	0000001c __vfprintf_internal
10109c8c g     F .text	0000005c _wctomb_r
1010c450 g     F .text	000008fc .hidden __subdf3
10105ed4 g     F .text	000000b0 __lo0bits
10111654 g     O .rwdata	00000008 alt_alarm_list
1010e828 g     F .text	00000060 _do_ctors
10106ecc g     F .text	00000014 __sigtramp
10109b9c g     F .text	000000c0 wcrtomb
1010cff0 g     F .text	000000d0 close
1010d4e0 g     F .text	00000084 alt_load
10108c3c g     F .text	00000080 fputwc
10106e90 g     F .text	00000014 raise
1010478c g     F .text	00000004 __sinit_lock_acquire
10105c48 g     F .text	00000120 __multadd
10105c20 g     F .text	00000028 _Bfree



Disassembly of section .entry:

10100000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
10100000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
10100004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
10100008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
1010000c:	00bffd16 	blt	zero,r2,10100004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10100010:	00440434 	movhi	at,4112
    ori r1, r1, %lo(_start)
10100014:	08409114 	ori	at,at,580
    jmp r1
10100018:	0800683a 	jmp	at
1010001c:	00000000 	call	10000000 <__reset-0x100000>

Disassembly of section .exceptions:

10100020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10100020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10100024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10100028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1010002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10100030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10100034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10100038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1010003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10100040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10100044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10100048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1010004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10100050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10100054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10100058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1010005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10100060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10100064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10100068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1010006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10100070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10100074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10100078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1010007c:	10000326 	beq	r2,zero,1010008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10100080:	20000226 	beq	r4,zero,1010008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10100084:	01000fc0 	call	101000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10100088:	00000706 	br	101000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1010008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10100090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10100094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10100098:	01001d00 	call	101001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1010009c:	1000021e 	bne	r2,zero,101000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
101000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
101000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
101000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
101000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
101000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
101000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
101000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
101000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
101000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
101000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
101000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
101000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
101000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
101000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
101000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
101000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
101000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
101000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
101000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
101000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
101000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
101000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
101000f8:	ef80083a 	eret

101000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
101000fc:	defff904 	addi	sp,sp,-28
10100100:	dfc00615 	stw	ra,24(sp)
10100104:	df000515 	stw	fp,20(sp)
10100108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1010010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10100110:	0005313a 	rdctl	r2,ipending
10100114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10100118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1010011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10100120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10100124:	00800044 	movi	r2,1
10100128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1010012c:	e0fffb17 	ldw	r3,-20(fp)
10100130:	e0bffc17 	ldw	r2,-16(fp)
10100134:	1884703a 	and	r2,r3,r2
10100138:	10001426 	beq	r2,zero,1010018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1010013c:	00840474 	movhi	r2,4113
10100140:	108c6c04 	addi	r2,r2,12720
10100144:	e0fffd17 	ldw	r3,-12(fp)
10100148:	180690fa 	slli	r3,r3,3
1010014c:	10c5883a 	add	r2,r2,r3
10100150:	10c00017 	ldw	r3,0(r2)
10100154:	00840474 	movhi	r2,4113
10100158:	108c6c04 	addi	r2,r2,12720
1010015c:	e13ffd17 	ldw	r4,-12(fp)
10100160:	200890fa 	slli	r4,r4,3
10100164:	1105883a 	add	r2,r2,r4
10100168:	10800104 	addi	r2,r2,4
1010016c:	10800017 	ldw	r2,0(r2)
10100170:	1009883a 	mov	r4,r2
10100174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10100178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1010017c:	0005313a 	rdctl	r2,ipending
10100180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10100184:	e0bfff17 	ldw	r2,-4(fp)
10100188:	00000706 	br	101001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1010018c:	e0bffc17 	ldw	r2,-16(fp)
10100190:	1085883a 	add	r2,r2,r2
10100194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10100198:	e0bffd17 	ldw	r2,-12(fp)
1010019c:	10800044 	addi	r2,r2,1
101001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
101001a4:	003fe106 	br	1010012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
101001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
101001ac:	e0bffb17 	ldw	r2,-20(fp)
101001b0:	103fdb1e 	bne	r2,zero,10100120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
101001b4:	0001883a 	nop
}
101001b8:	0001883a 	nop
101001bc:	e037883a 	mov	sp,fp
101001c0:	dfc00117 	ldw	ra,4(sp)
101001c4:	df000017 	ldw	fp,0(sp)
101001c8:	dec00204 	addi	sp,sp,8
101001cc:	f800283a 	ret

101001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
101001d0:	defffb04 	addi	sp,sp,-20
101001d4:	dfc00415 	stw	ra,16(sp)
101001d8:	df000315 	stw	fp,12(sp)
101001dc:	df000304 	addi	fp,sp,12
101001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
101001e4:	000531fa 	rdctl	r2,exception
101001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
101001ec:	e0bffd17 	ldw	r2,-12(fp)
101001f0:	10801f0c 	andi	r2,r2,124
101001f4:	1004d0ba 	srli	r2,r2,2
101001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
101001fc:	0005333a 	rdctl	r2,badaddr
10100200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
10100204:	d0a6dc17 	ldw	r2,-25744(gp)
10100208:	10000726 	beq	r2,zero,10100228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
1010020c:	d0a6dc17 	ldw	r2,-25744(gp)
10100210:	e0fffd17 	ldw	r3,-12(fp)
10100214:	e1bffe17 	ldw	r6,-8(fp)
10100218:	e17fff17 	ldw	r5,-4(fp)
1010021c:	1809883a 	mov	r4,r3
10100220:	103ee83a 	callr	r2
10100224:	00000206 	br	10100230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10100228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
1010022c:	0005883a 	mov	r2,zero
}
10100230:	e037883a 	mov	sp,fp
10100234:	dfc00117 	ldw	ra,4(sp)
10100238:	df000017 	ldw	fp,0(sp)
1010023c:	dec00204 	addi	sp,sp,8
10100240:	f800283a 	ret

Disassembly of section .text:

10100244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
10100244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
10100248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
1010024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
10100250:	00bffd16 	blt	zero,r2,10100248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10100254:	06c404b4 	movhi	sp,4114
    ori sp, sp, %lo(__alt_stack_pointer)
10100258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
1010025c:	06840474 	movhi	gp,4113
    ori gp, gp, %lo(_gp)
10100260:	d6a58514 	ori	gp,gp,38420
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10100264:	00840474 	movhi	r2,4113
    ori r2, r2, %lo(__bss_start)
10100268:	108c5414 	ori	r2,r2,12624

    movhi r3, %hi(__bss_end)
1010026c:	00c40474 	movhi	r3,4113
    ori r3, r3, %lo(__bss_end)
10100270:	18ccac14 	ori	r3,r3,12976

    beq r2, r3, 1f
10100274:	10c00326 	beq	r2,r3,10100284 <_start+0x40>

0:
    stw zero, (r2)
10100278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
1010027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
10100280:	10fffd36 	bltu	r2,r3,10100278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10100284:	010d4e00 	call	1010d4e0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10100288:	010d6740 	call	1010d674 <alt_main>

1010028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
1010028c:	003fff06 	br	1010028c <__alt_data_end+0xfffe028c>

10100290 <main>:
#define HPS_0_BRIDGES_BASE (0x0000)            /* address_span_expander base address from system.h (ADAPT TO YOUR DESIGN) */
#define HPS_0_BRIDGES_SPAN (256 * 1024 * 1024) /* address_span_expander span from system.h (ADAPT TO YOUR DESIGN) */

#define ONE_MB (1024 * 1024)

int main(void) {
10100290:	defff904 	addi	sp,sp,-28
10100294:	dfc00615 	stw	ra,24(sp)
10100298:	df000515 	stw	fp,20(sp)
1010029c:	df000504 	addi	fp,sp,20
    uint32_t megabyte_count = 0;
101002a0:	e03ffb15 	stw	zero,-20(fp)

    for (uint32_t i = 0; i < HPS_0_BRIDGES_SPAN; i += sizeof(uint32_t)) {
101002a4:	e03ffc15 	stw	zero,-16(fp)
101002a8:	00002306 	br	10100338 <main+0xa8>

        // Print progress through 256 MB memory available through address span expander
        if ((i % ONE_MB) == 0) {
101002ac:	e0fffc17 	ldw	r3,-16(fp)
101002b0:	00800434 	movhi	r2,16
101002b4:	10bfffc4 	addi	r2,r2,-1
101002b8:	1884703a 	and	r2,r3,r2
101002bc:	1000071e 	bne	r2,zero,101002dc <main+0x4c>
            printf("megabyte_count = %" PRIu32 "\n", megabyte_count);
101002c0:	e17ffb17 	ldw	r5,-20(fp)
101002c4:	01040474 	movhi	r4,4113
101002c8:	213df804 	addi	r4,r4,-2080
101002cc:	01004640 	call	10100464 <printf>
            megabyte_count++;
101002d0:	e0bffb17 	ldw	r2,-20(fp)
101002d4:	10800044 	addi	r2,r2,1
101002d8:	e0bffb15 	stw	r2,-20(fp)
        }

        uint32_t addr = HPS_0_BRIDGES_BASE + i;
101002dc:	e0bffc17 	ldw	r2,-16(fp)
101002e0:	e0bffd15 	stw	r2,-12(fp)

        // Write through address span expander
        uint32_t writedata = i;
101002e4:	e0bffc17 	ldw	r2,-16(fp)
101002e8:	e0bffe15 	stw	r2,-8(fp)
        IOWR_32DIRECT(addr, 0, writedata);
101002ec:	e0bffd17 	ldw	r2,-12(fp)
101002f0:	e0fffe17 	ldw	r3,-8(fp)
101002f4:	10c00035 	stwio	r3,0(r2)

        // Read through address span expander
        uint32_t readdata = IORD_32DIRECT(addr, 0);
101002f8:	e0bffd17 	ldw	r2,-12(fp)
101002fc:	10800037 	ldwio	r2,0(r2)
10100300:	e0bfff15 	stw	r2,-4(fp)

        // Check if read data is equal to written data
        assert(writedata == readdata);
10100304:	e0fffe17 	ldw	r3,-8(fp)
10100308:	e0bfff17 	ldw	r2,-4(fp)
1010030c:	18800726 	beq	r3,r2,1010032c <main+0x9c>
10100310:	01c40474 	movhi	r7,4113
10100314:	39fdfe04 	addi	r7,r7,-2056
10100318:	d1a00004 	addi	r6,gp,-32768
1010031c:	014008c4 	movi	r5,35
10100320:	01040474 	movhi	r4,4113
10100324:	213e0404 	addi	r4,r4,-2032
10100328:	010035c0 	call	1010035c <__assert_func>
#define ONE_MB (1024 * 1024)

int main(void) {
    uint32_t megabyte_count = 0;

    for (uint32_t i = 0; i < HPS_0_BRIDGES_SPAN; i += sizeof(uint32_t)) {
1010032c:	e0bffc17 	ldw	r2,-16(fp)
10100330:	10800104 	addi	r2,r2,4
10100334:	e0bffc15 	stw	r2,-16(fp)
10100338:	e0fffc17 	ldw	r3,-16(fp)
1010033c:	00840034 	movhi	r2,4096
10100340:	18bfda36 	bltu	r3,r2,101002ac <__alt_data_end+0xfffe02ac>

        // Check if read data is equal to written data
        assert(writedata == readdata);
    }

    return EXIT_SUCCESS;
10100344:	0005883a 	mov	r2,zero
}
10100348:	e037883a 	mov	sp,fp
1010034c:	dfc00117 	ldw	ra,4(sp)
10100350:	df000017 	ldw	fp,0(sp)
10100354:	dec00204 	addi	sp,sp,8
10100358:	f800283a 	ret

1010035c <__assert_func>:
1010035c:	00840474 	movhi	r2,4113
10100360:	10858804 	addi	r2,r2,5664
10100364:	10800017 	ldw	r2,0(r2)
10100368:	defffc04 	addi	sp,sp,-16
1010036c:	dfc00315 	stw	ra,12(sp)
10100370:	2015883a 	mov	r10,r4
10100374:	2811883a 	mov	r8,r5
10100378:	3813883a 	mov	r9,r7
1010037c:	11000317 	ldw	r4,12(r2)
10100380:	30000c26 	beq	r6,zero,101003b4 <__assert_func+0x58>
10100384:	00c40474 	movhi	r3,4113
10100388:	18fe0b04 	addi	r3,r3,-2004
1010038c:	3005883a 	mov	r2,r6
10100390:	01440474 	movhi	r5,4113
10100394:	297e0f04 	addi	r5,r5,-1988
10100398:	500f883a 	mov	r7,r10
1010039c:	480d883a 	mov	r6,r9
101003a0:	d8c00115 	stw	r3,4(sp)
101003a4:	da000015 	stw	r8,0(sp)
101003a8:	d8800215 	stw	r2,8(sp)
101003ac:	01003f80 	call	101003f8 <fiprintf>
101003b0:	01028dc0 	call	101028dc <abort>
101003b4:	00c40474 	movhi	r3,4113
101003b8:	18fe0e04 	addi	r3,r3,-1992
101003bc:	1805883a 	mov	r2,r3
101003c0:	003ff306 	br	10100390 <__alt_data_end+0xfffe0390>

101003c4 <__assert>:
101003c4:	deffff04 	addi	sp,sp,-4
101003c8:	300f883a 	mov	r7,r6
101003cc:	000d883a 	mov	r6,zero
101003d0:	dfc00015 	stw	ra,0(sp)
101003d4:	010035c0 	call	1010035c <__assert_func>

101003d8 <_fiprintf_r>:
101003d8:	defffe04 	addi	sp,sp,-8
101003dc:	dfc00015 	stw	ra,0(sp)
101003e0:	d9c00115 	stw	r7,4(sp)
101003e4:	d9c00104 	addi	r7,sp,4
101003e8:	01004a00 	call	101004a0 <_vfiprintf_r>
101003ec:	dfc00017 	ldw	ra,0(sp)
101003f0:	dec00204 	addi	sp,sp,8
101003f4:	f800283a 	ret

101003f8 <fiprintf>:
101003f8:	defffd04 	addi	sp,sp,-12
101003fc:	2005883a 	mov	r2,r4
10100400:	dfc00015 	stw	ra,0(sp)
10100404:	d9800115 	stw	r6,4(sp)
10100408:	d9c00215 	stw	r7,8(sp)
1010040c:	00c40474 	movhi	r3,4113
10100410:	18c58804 	addi	r3,r3,5664
10100414:	19000017 	ldw	r4,0(r3)
10100418:	280d883a 	mov	r6,r5
1010041c:	d9c00104 	addi	r7,sp,4
10100420:	100b883a 	mov	r5,r2
10100424:	01004a00 	call	101004a0 <_vfiprintf_r>
10100428:	dfc00017 	ldw	ra,0(sp)
1010042c:	dec00304 	addi	sp,sp,12
10100430:	f800283a 	ret

10100434 <_printf_r>:
10100434:	defffd04 	addi	sp,sp,-12
10100438:	2805883a 	mov	r2,r5
1010043c:	dfc00015 	stw	ra,0(sp)
10100440:	d9800115 	stw	r6,4(sp)
10100444:	d9c00215 	stw	r7,8(sp)
10100448:	21400217 	ldw	r5,8(r4)
1010044c:	d9c00104 	addi	r7,sp,4
10100450:	100d883a 	mov	r6,r2
10100454:	01004b80 	call	101004b8 <___vfprintf_internal_r>
10100458:	dfc00017 	ldw	ra,0(sp)
1010045c:	dec00304 	addi	sp,sp,12
10100460:	f800283a 	ret

10100464 <printf>:
10100464:	defffc04 	addi	sp,sp,-16
10100468:	dfc00015 	stw	ra,0(sp)
1010046c:	d9400115 	stw	r5,4(sp)
10100470:	d9800215 	stw	r6,8(sp)
10100474:	d9c00315 	stw	r7,12(sp)
10100478:	00840474 	movhi	r2,4113
1010047c:	10858804 	addi	r2,r2,5664
10100480:	10800017 	ldw	r2,0(r2)
10100484:	200b883a 	mov	r5,r4
10100488:	d9800104 	addi	r6,sp,4
1010048c:	11000217 	ldw	r4,8(r2)
10100490:	01026b00 	call	101026b0 <__vfprintf_internal>
10100494:	dfc00017 	ldw	ra,0(sp)
10100498:	dec00404 	addi	sp,sp,16
1010049c:	f800283a 	ret

101004a0 <_vfiprintf_r>:
101004a0:	deffff04 	addi	sp,sp,-4
101004a4:	dfc00015 	stw	ra,0(sp)
101004a8:	01073040 	call	10107304 <___vfiprintf_internal_r>
101004ac:	dfc00017 	ldw	ra,0(sp)
101004b0:	dec00104 	addi	sp,sp,4
101004b4:	f800283a 	ret

101004b8 <___vfprintf_internal_r>:
101004b8:	deffb804 	addi	sp,sp,-288
101004bc:	dfc04715 	stw	ra,284(sp)
101004c0:	ddc04515 	stw	r23,276(sp)
101004c4:	dd404315 	stw	r21,268(sp)
101004c8:	d9002c15 	stw	r4,176(sp)
101004cc:	282f883a 	mov	r23,r5
101004d0:	302b883a 	mov	r21,r6
101004d4:	d9c02d15 	stw	r7,180(sp)
101004d8:	df004615 	stw	fp,280(sp)
101004dc:	dd804415 	stw	r22,272(sp)
101004e0:	dd004215 	stw	r20,264(sp)
101004e4:	dcc04115 	stw	r19,260(sp)
101004e8:	dc804015 	stw	r18,256(sp)
101004ec:	dc403f15 	stw	r17,252(sp)
101004f0:	dc003e15 	stw	r16,248(sp)
101004f4:	0104e2c0 	call	10104e2c <_localeconv_r>
101004f8:	10800017 	ldw	r2,0(r2)
101004fc:	1009883a 	mov	r4,r2
10100500:	d8803415 	stw	r2,208(sp)
10100504:	01071580 	call	10107158 <strlen>
10100508:	d8803715 	stw	r2,220(sp)
1010050c:	d8802c17 	ldw	r2,176(sp)
10100510:	10000226 	beq	r2,zero,1010051c <___vfprintf_internal_r+0x64>
10100514:	10800e17 	ldw	r2,56(r2)
10100518:	1000f926 	beq	r2,zero,10100900 <___vfprintf_internal_r+0x448>
1010051c:	b880030b 	ldhu	r2,12(r23)
10100520:	10c8000c 	andi	r3,r2,8192
10100524:	1800061e 	bne	r3,zero,10100540 <___vfprintf_internal_r+0x88>
10100528:	b9001917 	ldw	r4,100(r23)
1010052c:	00f7ffc4 	movi	r3,-8193
10100530:	10880014 	ori	r2,r2,8192
10100534:	20c6703a 	and	r3,r4,r3
10100538:	b880030d 	sth	r2,12(r23)
1010053c:	b8c01915 	stw	r3,100(r23)
10100540:	10c0020c 	andi	r3,r2,8
10100544:	1800c126 	beq	r3,zero,1010084c <___vfprintf_internal_r+0x394>
10100548:	b8c00417 	ldw	r3,16(r23)
1010054c:	1800bf26 	beq	r3,zero,1010084c <___vfprintf_internal_r+0x394>
10100550:	1080068c 	andi	r2,r2,26
10100554:	00c00284 	movi	r3,10
10100558:	10c0c426 	beq	r2,r3,1010086c <___vfprintf_internal_r+0x3b4>
1010055c:	d8c00404 	addi	r3,sp,16
10100560:	05040474 	movhi	r20,4113
10100564:	d9001e04 	addi	r4,sp,120
10100568:	a53e2c84 	addi	r20,r20,-1870
1010056c:	d8c01e15 	stw	r3,120(sp)
10100570:	d8002015 	stw	zero,128(sp)
10100574:	d8001f15 	stw	zero,124(sp)
10100578:	d8003315 	stw	zero,204(sp)
1010057c:	d8003615 	stw	zero,216(sp)
10100580:	d8003815 	stw	zero,224(sp)
10100584:	1811883a 	mov	r8,r3
10100588:	d8003915 	stw	zero,228(sp)
1010058c:	d8003a15 	stw	zero,232(sp)
10100590:	d8002f15 	stw	zero,188(sp)
10100594:	d9002815 	stw	r4,160(sp)
10100598:	a8800007 	ldb	r2,0(r21)
1010059c:	10027b26 	beq	r2,zero,10100f8c <___vfprintf_internal_r+0xad4>
101005a0:	00c00944 	movi	r3,37
101005a4:	a821883a 	mov	r16,r21
101005a8:	10c0021e 	bne	r2,r3,101005b4 <___vfprintf_internal_r+0xfc>
101005ac:	00001406 	br	10100600 <___vfprintf_internal_r+0x148>
101005b0:	10c00326 	beq	r2,r3,101005c0 <___vfprintf_internal_r+0x108>
101005b4:	84000044 	addi	r16,r16,1
101005b8:	80800007 	ldb	r2,0(r16)
101005bc:	103ffc1e 	bne	r2,zero,101005b0 <__alt_data_end+0xfffe05b0>
101005c0:	8563c83a 	sub	r17,r16,r21
101005c4:	88000e26 	beq	r17,zero,10100600 <___vfprintf_internal_r+0x148>
101005c8:	d8c02017 	ldw	r3,128(sp)
101005cc:	d8801f17 	ldw	r2,124(sp)
101005d0:	45400015 	stw	r21,0(r8)
101005d4:	1c47883a 	add	r3,r3,r17
101005d8:	10800044 	addi	r2,r2,1
101005dc:	d8c02015 	stw	r3,128(sp)
101005e0:	44400115 	stw	r17,4(r8)
101005e4:	d8801f15 	stw	r2,124(sp)
101005e8:	00c001c4 	movi	r3,7
101005ec:	1880a716 	blt	r3,r2,1010088c <___vfprintf_internal_r+0x3d4>
101005f0:	42000204 	addi	r8,r8,8
101005f4:	d9402f17 	ldw	r5,188(sp)
101005f8:	2c4b883a 	add	r5,r5,r17
101005fc:	d9402f15 	stw	r5,188(sp)
10100600:	80800007 	ldb	r2,0(r16)
10100604:	1000a826 	beq	r2,zero,101008a8 <___vfprintf_internal_r+0x3f0>
10100608:	84400047 	ldb	r17,1(r16)
1010060c:	00bfffc4 	movi	r2,-1
10100610:	85400044 	addi	r21,r16,1
10100614:	d8002785 	stb	zero,158(sp)
10100618:	0007883a 	mov	r3,zero
1010061c:	000f883a 	mov	r7,zero
10100620:	d8802915 	stw	r2,164(sp)
10100624:	d8003115 	stw	zero,196(sp)
10100628:	0025883a 	mov	r18,zero
1010062c:	01401604 	movi	r5,88
10100630:	01800244 	movi	r6,9
10100634:	02800a84 	movi	r10,42
10100638:	02401b04 	movi	r9,108
1010063c:	ad400044 	addi	r21,r21,1
10100640:	88bff804 	addi	r2,r17,-32
10100644:	28830436 	bltu	r5,r2,10101258 <___vfprintf_internal_r+0xda0>
10100648:	100490ba 	slli	r2,r2,2
1010064c:	01040434 	movhi	r4,4112
10100650:	21019804 	addi	r4,r4,1632
10100654:	1105883a 	add	r2,r2,r4
10100658:	10800017 	ldw	r2,0(r2)
1010065c:	1000683a 	jmp	r2
10100660:	10101178 	rdprs	zero,r2,16453
10100664:	10101258 	cmpnei	zero,r2,16457
10100668:	10101258 	cmpnei	zero,r2,16457
1010066c:	10101198 	cmpnei	zero,r2,16454
10100670:	10101258 	cmpnei	zero,r2,16457
10100674:	10101258 	cmpnei	zero,r2,16457
10100678:	10101258 	cmpnei	zero,r2,16457
1010067c:	10101258 	cmpnei	zero,r2,16457
10100680:	10101258 	cmpnei	zero,r2,16457
10100684:	10101258 	cmpnei	zero,r2,16457
10100688:	1010090c 	andi	zero,r2,16420
1010068c:	101010b4 	orhi	zero,r2,16450
10100690:	10101258 	cmpnei	zero,r2,16457
10100694:	101007d4 	ori	zero,r2,16415
10100698:	10100934 	orhi	zero,r2,16420
1010069c:	10101258 	cmpnei	zero,r2,16457
101006a0:	10100974 	orhi	zero,r2,16421
101006a4:	10100980 	call	11010098 <__alt_data_end+0xef0098>
101006a8:	10100980 	call	11010098 <__alt_data_end+0xef0098>
101006ac:	10100980 	call	11010098 <__alt_data_end+0xef0098>
101006b0:	10100980 	call	11010098 <__alt_data_end+0xef0098>
101006b4:	10100980 	call	11010098 <__alt_data_end+0xef0098>
101006b8:	10100980 	call	11010098 <__alt_data_end+0xef0098>
101006bc:	10100980 	call	11010098 <__alt_data_end+0xef0098>
101006c0:	10100980 	call	11010098 <__alt_data_end+0xef0098>
101006c4:	10100980 	call	11010098 <__alt_data_end+0xef0098>
101006c8:	10101258 	cmpnei	zero,r2,16457
101006cc:	10101258 	cmpnei	zero,r2,16457
101006d0:	10101258 	cmpnei	zero,r2,16457
101006d4:	10101258 	cmpnei	zero,r2,16457
101006d8:	10101258 	cmpnei	zero,r2,16457
101006dc:	10101258 	cmpnei	zero,r2,16457
101006e0:	10101258 	cmpnei	zero,r2,16457
101006e4:	10101258 	cmpnei	zero,r2,16457
101006e8:	10101258 	cmpnei	zero,r2,16457
101006ec:	10101258 	cmpnei	zero,r2,16457
101006f0:	101009b4 	orhi	zero,r2,16422
101006f4:	10100a70 	cmpltui	zero,r2,16425
101006f8:	10101258 	cmpnei	zero,r2,16457
101006fc:	10100a70 	cmpltui	zero,r2,16425
10100700:	10101258 	cmpnei	zero,r2,16457
10100704:	10101258 	cmpnei	zero,r2,16457
10100708:	10101258 	cmpnei	zero,r2,16457
1010070c:	10101258 	cmpnei	zero,r2,16457
10100710:	10100b10 	cmplti	zero,r2,16428
10100714:	10101258 	cmpnei	zero,r2,16457
10100718:	10101258 	cmpnei	zero,r2,16457
1010071c:	10100b1c 	xori	zero,r2,16428
10100720:	10101258 	cmpnei	zero,r2,16457
10100724:	10101258 	cmpnei	zero,r2,16457
10100728:	10101258 	cmpnei	zero,r2,16457
1010072c:	10101258 	cmpnei	zero,r2,16457
10100730:	10101258 	cmpnei	zero,r2,16457
10100734:	10100f94 	ori	zero,r2,16446
10100738:	10101258 	cmpnei	zero,r2,16457
1010073c:	10101258 	cmpnei	zero,r2,16457
10100740:	10100ff4 	orhi	zero,r2,16447
10100744:	10101258 	cmpnei	zero,r2,16457
10100748:	10101258 	cmpnei	zero,r2,16457
1010074c:	10101258 	cmpnei	zero,r2,16457
10100750:	10101258 	cmpnei	zero,r2,16457
10100754:	10101258 	cmpnei	zero,r2,16457
10100758:	10101258 	cmpnei	zero,r2,16457
1010075c:	10101258 	cmpnei	zero,r2,16457
10100760:	10101258 	cmpnei	zero,r2,16457
10100764:	10101258 	cmpnei	zero,r2,16457
10100768:	10101258 	cmpnei	zero,r2,16457
1010076c:	10101204 	addi	zero,r2,16456
10100770:	101011a4 	muli	zero,r2,16454
10100774:	10100a70 	cmpltui	zero,r2,16425
10100778:	10100a70 	cmpltui	zero,r2,16425
1010077c:	10100a70 	cmpltui	zero,r2,16425
10100780:	101011b4 	orhi	zero,r2,16454
10100784:	101011a4 	muli	zero,r2,16454
10100788:	10101258 	cmpnei	zero,r2,16457
1010078c:	10101258 	cmpnei	zero,r2,16457
10100790:	101011c0 	call	1101011c <__alt_data_end+0xef011c>
10100794:	10101258 	cmpnei	zero,r2,16457
10100798:	101011d0 	cmplti	zero,r2,16455
1010079c:	101010a4 	muli	zero,r2,16450
101007a0:	101007e0 	cmpeqi	zero,r2,16415
101007a4:	101010c4 	addi	zero,r2,16451
101007a8:	10101258 	cmpnei	zero,r2,16457
101007ac:	101010d0 	cmplti	zero,r2,16451
101007b0:	10101258 	cmpnei	zero,r2,16457
101007b4:	1010112c 	andhi	zero,r2,16452
101007b8:	10101258 	cmpnei	zero,r2,16457
101007bc:	10101258 	cmpnei	zero,r2,16457
101007c0:	1010113c 	xorhi	zero,r2,16452
101007c4:	d9003117 	ldw	r4,196(sp)
101007c8:	d8802d15 	stw	r2,180(sp)
101007cc:	0109c83a 	sub	r4,zero,r4
101007d0:	d9003115 	stw	r4,196(sp)
101007d4:	94800114 	ori	r18,r18,4
101007d8:	ac400007 	ldb	r17,0(r21)
101007dc:	003f9706 	br	1010063c <__alt_data_end+0xfffe063c>
101007e0:	00800c04 	movi	r2,48
101007e4:	d9002d17 	ldw	r4,180(sp)
101007e8:	d9402917 	ldw	r5,164(sp)
101007ec:	d8802705 	stb	r2,156(sp)
101007f0:	00801e04 	movi	r2,120
101007f4:	d8802745 	stb	r2,157(sp)
101007f8:	d8002785 	stb	zero,158(sp)
101007fc:	20c00104 	addi	r3,r4,4
10100800:	24c00017 	ldw	r19,0(r4)
10100804:	002d883a 	mov	r22,zero
10100808:	90800094 	ori	r2,r18,2
1010080c:	28029a16 	blt	r5,zero,10101278 <___vfprintf_internal_r+0xdc0>
10100810:	00bfdfc4 	movi	r2,-129
10100814:	90a4703a 	and	r18,r18,r2
10100818:	d8c02d15 	stw	r3,180(sp)
1010081c:	94800094 	ori	r18,r18,2
10100820:	9802871e 	bne	r19,zero,10101240 <___vfprintf_internal_r+0xd88>
10100824:	00840474 	movhi	r2,4113
10100828:	10be2504 	addi	r2,r2,-1900
1010082c:	d8803915 	stw	r2,228(sp)
10100830:	04401e04 	movi	r17,120
10100834:	d8802917 	ldw	r2,164(sp)
10100838:	0039883a 	mov	fp,zero
1010083c:	1001e926 	beq	r2,zero,10100fe4 <___vfprintf_internal_r+0xb2c>
10100840:	0027883a 	mov	r19,zero
10100844:	002d883a 	mov	r22,zero
10100848:	00020506 	br	10101060 <___vfprintf_internal_r+0xba8>
1010084c:	d9002c17 	ldw	r4,176(sp)
10100850:	b80b883a 	mov	r5,r23
10100854:	01027880 	call	10102788 <__swsetup_r>
10100858:	1005ac1e 	bne	r2,zero,10101f0c <___vfprintf_internal_r+0x1a54>
1010085c:	b880030b 	ldhu	r2,12(r23)
10100860:	00c00284 	movi	r3,10
10100864:	1080068c 	andi	r2,r2,26
10100868:	10ff3c1e 	bne	r2,r3,1010055c <__alt_data_end+0xfffe055c>
1010086c:	b880038f 	ldh	r2,14(r23)
10100870:	103f3a16 	blt	r2,zero,1010055c <__alt_data_end+0xfffe055c>
10100874:	d9c02d17 	ldw	r7,180(sp)
10100878:	d9002c17 	ldw	r4,176(sp)
1010087c:	a80d883a 	mov	r6,r21
10100880:	b80b883a 	mov	r5,r23
10100884:	01026cc0 	call	101026cc <__sbprintf>
10100888:	00001106 	br	101008d0 <___vfprintf_internal_r+0x418>
1010088c:	d9002c17 	ldw	r4,176(sp)
10100890:	d9801e04 	addi	r6,sp,120
10100894:	b80b883a 	mov	r5,r23
10100898:	01072ec0 	call	101072ec <__sprint_r>
1010089c:	1000081e 	bne	r2,zero,101008c0 <___vfprintf_internal_r+0x408>
101008a0:	da000404 	addi	r8,sp,16
101008a4:	003f5306 	br	101005f4 <__alt_data_end+0xfffe05f4>
101008a8:	d8802017 	ldw	r2,128(sp)
101008ac:	10000426 	beq	r2,zero,101008c0 <___vfprintf_internal_r+0x408>
101008b0:	d9002c17 	ldw	r4,176(sp)
101008b4:	d9801e04 	addi	r6,sp,120
101008b8:	b80b883a 	mov	r5,r23
101008bc:	01072ec0 	call	101072ec <__sprint_r>
101008c0:	b880030b 	ldhu	r2,12(r23)
101008c4:	1080100c 	andi	r2,r2,64
101008c8:	1005901e 	bne	r2,zero,10101f0c <___vfprintf_internal_r+0x1a54>
101008cc:	d8802f17 	ldw	r2,188(sp)
101008d0:	dfc04717 	ldw	ra,284(sp)
101008d4:	df004617 	ldw	fp,280(sp)
101008d8:	ddc04517 	ldw	r23,276(sp)
101008dc:	dd804417 	ldw	r22,272(sp)
101008e0:	dd404317 	ldw	r21,268(sp)
101008e4:	dd004217 	ldw	r20,264(sp)
101008e8:	dcc04117 	ldw	r19,260(sp)
101008ec:	dc804017 	ldw	r18,256(sp)
101008f0:	dc403f17 	ldw	r17,252(sp)
101008f4:	dc003e17 	ldw	r16,248(sp)
101008f8:	dec04804 	addi	sp,sp,288
101008fc:	f800283a 	ret
10100900:	d9002c17 	ldw	r4,176(sp)
10100904:	01047740 	call	10104774 <__sinit>
10100908:	003f0406 	br	1010051c <__alt_data_end+0xfffe051c>
1010090c:	d8802d17 	ldw	r2,180(sp)
10100910:	d9002d17 	ldw	r4,180(sp)
10100914:	10800017 	ldw	r2,0(r2)
10100918:	d8803115 	stw	r2,196(sp)
1010091c:	20800104 	addi	r2,r4,4
10100920:	d9003117 	ldw	r4,196(sp)
10100924:	203fa716 	blt	r4,zero,101007c4 <__alt_data_end+0xfffe07c4>
10100928:	d8802d15 	stw	r2,180(sp)
1010092c:	ac400007 	ldb	r17,0(r21)
10100930:	003f4206 	br	1010063c <__alt_data_end+0xfffe063c>
10100934:	ac400007 	ldb	r17,0(r21)
10100938:	aac00044 	addi	r11,r21,1
1010093c:	8a872826 	beq	r17,r10,101025e0 <___vfprintf_internal_r+0x2128>
10100940:	88bff404 	addi	r2,r17,-48
10100944:	0009883a 	mov	r4,zero
10100948:	30867d36 	bltu	r6,r2,10102340 <___vfprintf_internal_r+0x1e88>
1010094c:	5c400007 	ldb	r17,0(r11)
10100950:	210002a4 	muli	r4,r4,10
10100954:	5d400044 	addi	r21,r11,1
10100958:	a817883a 	mov	r11,r21
1010095c:	2089883a 	add	r4,r4,r2
10100960:	88bff404 	addi	r2,r17,-48
10100964:	30bff92e 	bgeu	r6,r2,1010094c <__alt_data_end+0xfffe094c>
10100968:	2005c916 	blt	r4,zero,10102090 <___vfprintf_internal_r+0x1bd8>
1010096c:	d9002915 	stw	r4,164(sp)
10100970:	003f3306 	br	10100640 <__alt_data_end+0xfffe0640>
10100974:	94802014 	ori	r18,r18,128
10100978:	ac400007 	ldb	r17,0(r21)
1010097c:	003f2f06 	br	1010063c <__alt_data_end+0xfffe063c>
10100980:	a809883a 	mov	r4,r21
10100984:	d8003115 	stw	zero,196(sp)
10100988:	88bff404 	addi	r2,r17,-48
1010098c:	0017883a 	mov	r11,zero
10100990:	24400007 	ldb	r17,0(r4)
10100994:	5ac002a4 	muli	r11,r11,10
10100998:	ad400044 	addi	r21,r21,1
1010099c:	a809883a 	mov	r4,r21
101009a0:	12d7883a 	add	r11,r2,r11
101009a4:	88bff404 	addi	r2,r17,-48
101009a8:	30bff92e 	bgeu	r6,r2,10100990 <__alt_data_end+0xfffe0990>
101009ac:	dac03115 	stw	r11,196(sp)
101009b0:	003f2306 	br	10100640 <__alt_data_end+0xfffe0640>
101009b4:	18c03fcc 	andi	r3,r3,255
101009b8:	18072b1e 	bne	r3,zero,10102668 <___vfprintf_internal_r+0x21b0>
101009bc:	94800414 	ori	r18,r18,16
101009c0:	9080080c 	andi	r2,r18,32
101009c4:	10037b26 	beq	r2,zero,101017b4 <___vfprintf_internal_r+0x12fc>
101009c8:	d9402d17 	ldw	r5,180(sp)
101009cc:	28800117 	ldw	r2,4(r5)
101009d0:	2cc00017 	ldw	r19,0(r5)
101009d4:	29400204 	addi	r5,r5,8
101009d8:	d9402d15 	stw	r5,180(sp)
101009dc:	102d883a 	mov	r22,r2
101009e0:	10044b16 	blt	r2,zero,10101b10 <___vfprintf_internal_r+0x1658>
101009e4:	d9402917 	ldw	r5,164(sp)
101009e8:	df002783 	ldbu	fp,158(sp)
101009ec:	2803bc16 	blt	r5,zero,101018e0 <___vfprintf_internal_r+0x1428>
101009f0:	00ffdfc4 	movi	r3,-129
101009f4:	9d84b03a 	or	r2,r19,r22
101009f8:	90e4703a 	and	r18,r18,r3
101009fc:	10017726 	beq	r2,zero,10100fdc <___vfprintf_internal_r+0xb24>
10100a00:	b0038326 	beq	r22,zero,10101810 <___vfprintf_internal_r+0x1358>
10100a04:	dc402a15 	stw	r17,168(sp)
10100a08:	dc001e04 	addi	r16,sp,120
10100a0c:	b023883a 	mov	r17,r22
10100a10:	402d883a 	mov	r22,r8
10100a14:	9809883a 	mov	r4,r19
10100a18:	880b883a 	mov	r5,r17
10100a1c:	01800284 	movi	r6,10
10100a20:	000f883a 	mov	r7,zero
10100a24:	010a2600 	call	1010a260 <__umoddi3>
10100a28:	10800c04 	addi	r2,r2,48
10100a2c:	843fffc4 	addi	r16,r16,-1
10100a30:	9809883a 	mov	r4,r19
10100a34:	880b883a 	mov	r5,r17
10100a38:	80800005 	stb	r2,0(r16)
10100a3c:	01800284 	movi	r6,10
10100a40:	000f883a 	mov	r7,zero
10100a44:	0109ce80 	call	10109ce8 <__udivdi3>
10100a48:	1027883a 	mov	r19,r2
10100a4c:	10c4b03a 	or	r2,r2,r3
10100a50:	1823883a 	mov	r17,r3
10100a54:	103fef1e 	bne	r2,zero,10100a14 <__alt_data_end+0xfffe0a14>
10100a58:	d8c02817 	ldw	r3,160(sp)
10100a5c:	dc402a17 	ldw	r17,168(sp)
10100a60:	b011883a 	mov	r8,r22
10100a64:	1c07c83a 	sub	r3,r3,r16
10100a68:	d8c02e15 	stw	r3,184(sp)
10100a6c:	00005906 	br	10100bd4 <___vfprintf_internal_r+0x71c>
10100a70:	18c03fcc 	andi	r3,r3,255
10100a74:	1806fa1e 	bne	r3,zero,10102660 <___vfprintf_internal_r+0x21a8>
10100a78:	9080020c 	andi	r2,r18,8
10100a7c:	10048a26 	beq	r2,zero,10101ca8 <___vfprintf_internal_r+0x17f0>
10100a80:	d8c02d17 	ldw	r3,180(sp)
10100a84:	d9002d17 	ldw	r4,180(sp)
10100a88:	d9402d17 	ldw	r5,180(sp)
10100a8c:	18c00017 	ldw	r3,0(r3)
10100a90:	21000117 	ldw	r4,4(r4)
10100a94:	29400204 	addi	r5,r5,8
10100a98:	d8c03615 	stw	r3,216(sp)
10100a9c:	d9003815 	stw	r4,224(sp)
10100aa0:	d9402d15 	stw	r5,180(sp)
10100aa4:	d9003617 	ldw	r4,216(sp)
10100aa8:	d9403817 	ldw	r5,224(sp)
10100aac:	da003d15 	stw	r8,244(sp)
10100ab0:	04000044 	movi	r16,1
10100ab4:	0106b740 	call	10106b74 <__fpclassifyd>
10100ab8:	da003d17 	ldw	r8,244(sp)
10100abc:	14041f1e 	bne	r2,r16,10101b3c <___vfprintf_internal_r+0x1684>
10100ac0:	d9003617 	ldw	r4,216(sp)
10100ac4:	d9403817 	ldw	r5,224(sp)
10100ac8:	000d883a 	mov	r6,zero
10100acc:	000f883a 	mov	r7,zero
10100ad0:	010bc440 	call	1010bc44 <__ledf2>
10100ad4:	da003d17 	ldw	r8,244(sp)
10100ad8:	1005be16 	blt	r2,zero,101021d4 <___vfprintf_internal_r+0x1d1c>
10100adc:	df002783 	ldbu	fp,158(sp)
10100ae0:	008011c4 	movi	r2,71
10100ae4:	1445330e 	bge	r2,r17,10101fb4 <___vfprintf_internal_r+0x1afc>
10100ae8:	04040474 	movhi	r16,4113
10100aec:	843e1d04 	addi	r16,r16,-1932
10100af0:	00c000c4 	movi	r3,3
10100af4:	00bfdfc4 	movi	r2,-129
10100af8:	d8c02a15 	stw	r3,168(sp)
10100afc:	90a4703a 	and	r18,r18,r2
10100b00:	d8c02e15 	stw	r3,184(sp)
10100b04:	d8002915 	stw	zero,164(sp)
10100b08:	d8003215 	stw	zero,200(sp)
10100b0c:	00003706 	br	10100bec <___vfprintf_internal_r+0x734>
10100b10:	94800214 	ori	r18,r18,8
10100b14:	ac400007 	ldb	r17,0(r21)
10100b18:	003ec806 	br	1010063c <__alt_data_end+0xfffe063c>
10100b1c:	18c03fcc 	andi	r3,r3,255
10100b20:	1806db1e 	bne	r3,zero,10102690 <___vfprintf_internal_r+0x21d8>
10100b24:	94800414 	ori	r18,r18,16
10100b28:	9080080c 	andi	r2,r18,32
10100b2c:	1002d826 	beq	r2,zero,10101690 <___vfprintf_internal_r+0x11d8>
10100b30:	d9402d17 	ldw	r5,180(sp)
10100b34:	d8c02917 	ldw	r3,164(sp)
10100b38:	d8002785 	stb	zero,158(sp)
10100b3c:	28800204 	addi	r2,r5,8
10100b40:	2cc00017 	ldw	r19,0(r5)
10100b44:	2d800117 	ldw	r22,4(r5)
10100b48:	18048f16 	blt	r3,zero,10101d88 <___vfprintf_internal_r+0x18d0>
10100b4c:	013fdfc4 	movi	r4,-129
10100b50:	9d86b03a 	or	r3,r19,r22
10100b54:	d8802d15 	stw	r2,180(sp)
10100b58:	9124703a 	and	r18,r18,r4
10100b5c:	1802d91e 	bne	r3,zero,101016c4 <___vfprintf_internal_r+0x120c>
10100b60:	d8c02917 	ldw	r3,164(sp)
10100b64:	0039883a 	mov	fp,zero
10100b68:	1805c326 	beq	r3,zero,10102278 <___vfprintf_internal_r+0x1dc0>
10100b6c:	0027883a 	mov	r19,zero
10100b70:	002d883a 	mov	r22,zero
10100b74:	dc001e04 	addi	r16,sp,120
10100b78:	9806d0fa 	srli	r3,r19,3
10100b7c:	b008977a 	slli	r4,r22,29
10100b80:	b02cd0fa 	srli	r22,r22,3
10100b84:	9cc001cc 	andi	r19,r19,7
10100b88:	98800c04 	addi	r2,r19,48
10100b8c:	843fffc4 	addi	r16,r16,-1
10100b90:	20e6b03a 	or	r19,r4,r3
10100b94:	80800005 	stb	r2,0(r16)
10100b98:	9d86b03a 	or	r3,r19,r22
10100b9c:	183ff61e 	bne	r3,zero,10100b78 <__alt_data_end+0xfffe0b78>
10100ba0:	90c0004c 	andi	r3,r18,1
10100ba4:	18013b26 	beq	r3,zero,10101094 <___vfprintf_internal_r+0xbdc>
10100ba8:	10803fcc 	andi	r2,r2,255
10100bac:	1080201c 	xori	r2,r2,128
10100bb0:	10bfe004 	addi	r2,r2,-128
10100bb4:	00c00c04 	movi	r3,48
10100bb8:	10c13626 	beq	r2,r3,10101094 <___vfprintf_internal_r+0xbdc>
10100bbc:	80ffffc5 	stb	r3,-1(r16)
10100bc0:	d8c02817 	ldw	r3,160(sp)
10100bc4:	80bfffc4 	addi	r2,r16,-1
10100bc8:	1021883a 	mov	r16,r2
10100bcc:	1887c83a 	sub	r3,r3,r2
10100bd0:	d8c02e15 	stw	r3,184(sp)
10100bd4:	d8802e17 	ldw	r2,184(sp)
10100bd8:	d9002917 	ldw	r4,164(sp)
10100bdc:	1100010e 	bge	r2,r4,10100be4 <___vfprintf_internal_r+0x72c>
10100be0:	2005883a 	mov	r2,r4
10100be4:	d8802a15 	stw	r2,168(sp)
10100be8:	d8003215 	stw	zero,200(sp)
10100bec:	e7003fcc 	andi	fp,fp,255
10100bf0:	e700201c 	xori	fp,fp,128
10100bf4:	e73fe004 	addi	fp,fp,-128
10100bf8:	e0000326 	beq	fp,zero,10100c08 <___vfprintf_internal_r+0x750>
10100bfc:	d8c02a17 	ldw	r3,168(sp)
10100c00:	18c00044 	addi	r3,r3,1
10100c04:	d8c02a15 	stw	r3,168(sp)
10100c08:	90c0008c 	andi	r3,r18,2
10100c0c:	d8c02b15 	stw	r3,172(sp)
10100c10:	18000326 	beq	r3,zero,10100c20 <___vfprintf_internal_r+0x768>
10100c14:	d8c02a17 	ldw	r3,168(sp)
10100c18:	18c00084 	addi	r3,r3,2
10100c1c:	d8c02a15 	stw	r3,168(sp)
10100c20:	90c0210c 	andi	r3,r18,132
10100c24:	d8c03015 	stw	r3,192(sp)
10100c28:	1801a31e 	bne	r3,zero,101012b8 <___vfprintf_internal_r+0xe00>
10100c2c:	d9003117 	ldw	r4,196(sp)
10100c30:	d8c02a17 	ldw	r3,168(sp)
10100c34:	20e7c83a 	sub	r19,r4,r3
10100c38:	04c19f0e 	bge	zero,r19,101012b8 <___vfprintf_internal_r+0xe00>
10100c3c:	02400404 	movi	r9,16
10100c40:	d8c02017 	ldw	r3,128(sp)
10100c44:	d8801f17 	ldw	r2,124(sp)
10100c48:	4cc50d0e 	bge	r9,r19,10102080 <___vfprintf_internal_r+0x1bc8>
10100c4c:	01440474 	movhi	r5,4113
10100c50:	297e3084 	addi	r5,r5,-1854
10100c54:	dc403b15 	stw	r17,236(sp)
10100c58:	d9403515 	stw	r5,212(sp)
10100c5c:	9823883a 	mov	r17,r19
10100c60:	482d883a 	mov	r22,r9
10100c64:	9027883a 	mov	r19,r18
10100c68:	070001c4 	movi	fp,7
10100c6c:	8025883a 	mov	r18,r16
10100c70:	dc002c17 	ldw	r16,176(sp)
10100c74:	00000306 	br	10100c84 <___vfprintf_internal_r+0x7cc>
10100c78:	8c7ffc04 	addi	r17,r17,-16
10100c7c:	42000204 	addi	r8,r8,8
10100c80:	b440130e 	bge	r22,r17,10100cd0 <___vfprintf_internal_r+0x818>
10100c84:	01040474 	movhi	r4,4113
10100c88:	18c00404 	addi	r3,r3,16
10100c8c:	10800044 	addi	r2,r2,1
10100c90:	213e3084 	addi	r4,r4,-1854
10100c94:	41000015 	stw	r4,0(r8)
10100c98:	45800115 	stw	r22,4(r8)
10100c9c:	d8c02015 	stw	r3,128(sp)
10100ca0:	d8801f15 	stw	r2,124(sp)
10100ca4:	e0bff40e 	bge	fp,r2,10100c78 <__alt_data_end+0xfffe0c78>
10100ca8:	d9801e04 	addi	r6,sp,120
10100cac:	b80b883a 	mov	r5,r23
10100cb0:	8009883a 	mov	r4,r16
10100cb4:	01072ec0 	call	101072ec <__sprint_r>
10100cb8:	103f011e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10100cbc:	8c7ffc04 	addi	r17,r17,-16
10100cc0:	d8c02017 	ldw	r3,128(sp)
10100cc4:	d8801f17 	ldw	r2,124(sp)
10100cc8:	da000404 	addi	r8,sp,16
10100ccc:	b47fed16 	blt	r22,r17,10100c84 <__alt_data_end+0xfffe0c84>
10100cd0:	9021883a 	mov	r16,r18
10100cd4:	9825883a 	mov	r18,r19
10100cd8:	8827883a 	mov	r19,r17
10100cdc:	dc403b17 	ldw	r17,236(sp)
10100ce0:	d9403517 	ldw	r5,212(sp)
10100ce4:	98c7883a 	add	r3,r19,r3
10100ce8:	10800044 	addi	r2,r2,1
10100cec:	41400015 	stw	r5,0(r8)
10100cf0:	44c00115 	stw	r19,4(r8)
10100cf4:	d8c02015 	stw	r3,128(sp)
10100cf8:	d8801f15 	stw	r2,124(sp)
10100cfc:	010001c4 	movi	r4,7
10100d00:	2082a316 	blt	r4,r2,10101790 <___vfprintf_internal_r+0x12d8>
10100d04:	df002787 	ldb	fp,158(sp)
10100d08:	42000204 	addi	r8,r8,8
10100d0c:	e0000c26 	beq	fp,zero,10100d40 <___vfprintf_internal_r+0x888>
10100d10:	d8801f17 	ldw	r2,124(sp)
10100d14:	d9002784 	addi	r4,sp,158
10100d18:	18c00044 	addi	r3,r3,1
10100d1c:	10800044 	addi	r2,r2,1
10100d20:	41000015 	stw	r4,0(r8)
10100d24:	01000044 	movi	r4,1
10100d28:	41000115 	stw	r4,4(r8)
10100d2c:	d8c02015 	stw	r3,128(sp)
10100d30:	d8801f15 	stw	r2,124(sp)
10100d34:	010001c4 	movi	r4,7
10100d38:	20823c16 	blt	r4,r2,1010162c <___vfprintf_internal_r+0x1174>
10100d3c:	42000204 	addi	r8,r8,8
10100d40:	d8802b17 	ldw	r2,172(sp)
10100d44:	10000c26 	beq	r2,zero,10100d78 <___vfprintf_internal_r+0x8c0>
10100d48:	d8801f17 	ldw	r2,124(sp)
10100d4c:	d9002704 	addi	r4,sp,156
10100d50:	18c00084 	addi	r3,r3,2
10100d54:	10800044 	addi	r2,r2,1
10100d58:	41000015 	stw	r4,0(r8)
10100d5c:	01000084 	movi	r4,2
10100d60:	41000115 	stw	r4,4(r8)
10100d64:	d8c02015 	stw	r3,128(sp)
10100d68:	d8801f15 	stw	r2,124(sp)
10100d6c:	010001c4 	movi	r4,7
10100d70:	20823616 	blt	r4,r2,1010164c <___vfprintf_internal_r+0x1194>
10100d74:	42000204 	addi	r8,r8,8
10100d78:	d9003017 	ldw	r4,192(sp)
10100d7c:	00802004 	movi	r2,128
10100d80:	20819926 	beq	r4,r2,101013e8 <___vfprintf_internal_r+0xf30>
10100d84:	d9402917 	ldw	r5,164(sp)
10100d88:	d8802e17 	ldw	r2,184(sp)
10100d8c:	28adc83a 	sub	r22,r5,r2
10100d90:	0580310e 	bge	zero,r22,10100e58 <___vfprintf_internal_r+0x9a0>
10100d94:	07000404 	movi	fp,16
10100d98:	d8801f17 	ldw	r2,124(sp)
10100d9c:	e584140e 	bge	fp,r22,10101df0 <___vfprintf_internal_r+0x1938>
10100da0:	01440474 	movhi	r5,4113
10100da4:	297e2c84 	addi	r5,r5,-1870
10100da8:	dc402915 	stw	r17,164(sp)
10100dac:	d9402b15 	stw	r5,172(sp)
10100db0:	b023883a 	mov	r17,r22
10100db4:	04c001c4 	movi	r19,7
10100db8:	a82d883a 	mov	r22,r21
10100dbc:	902b883a 	mov	r21,r18
10100dc0:	8025883a 	mov	r18,r16
10100dc4:	dc002c17 	ldw	r16,176(sp)
10100dc8:	00000306 	br	10100dd8 <___vfprintf_internal_r+0x920>
10100dcc:	8c7ffc04 	addi	r17,r17,-16
10100dd0:	42000204 	addi	r8,r8,8
10100dd4:	e440110e 	bge	fp,r17,10100e1c <___vfprintf_internal_r+0x964>
10100dd8:	18c00404 	addi	r3,r3,16
10100ddc:	10800044 	addi	r2,r2,1
10100de0:	45000015 	stw	r20,0(r8)
10100de4:	47000115 	stw	fp,4(r8)
10100de8:	d8c02015 	stw	r3,128(sp)
10100dec:	d8801f15 	stw	r2,124(sp)
10100df0:	98bff60e 	bge	r19,r2,10100dcc <__alt_data_end+0xfffe0dcc>
10100df4:	d9801e04 	addi	r6,sp,120
10100df8:	b80b883a 	mov	r5,r23
10100dfc:	8009883a 	mov	r4,r16
10100e00:	01072ec0 	call	101072ec <__sprint_r>
10100e04:	103eae1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10100e08:	8c7ffc04 	addi	r17,r17,-16
10100e0c:	d8c02017 	ldw	r3,128(sp)
10100e10:	d8801f17 	ldw	r2,124(sp)
10100e14:	da000404 	addi	r8,sp,16
10100e18:	e47fef16 	blt	fp,r17,10100dd8 <__alt_data_end+0xfffe0dd8>
10100e1c:	9021883a 	mov	r16,r18
10100e20:	a825883a 	mov	r18,r21
10100e24:	b02b883a 	mov	r21,r22
10100e28:	882d883a 	mov	r22,r17
10100e2c:	dc402917 	ldw	r17,164(sp)
10100e30:	d9002b17 	ldw	r4,172(sp)
10100e34:	1d87883a 	add	r3,r3,r22
10100e38:	10800044 	addi	r2,r2,1
10100e3c:	41000015 	stw	r4,0(r8)
10100e40:	45800115 	stw	r22,4(r8)
10100e44:	d8c02015 	stw	r3,128(sp)
10100e48:	d8801f15 	stw	r2,124(sp)
10100e4c:	010001c4 	movi	r4,7
10100e50:	2081ee16 	blt	r4,r2,1010160c <___vfprintf_internal_r+0x1154>
10100e54:	42000204 	addi	r8,r8,8
10100e58:	9080400c 	andi	r2,r18,256
10100e5c:	1001181e 	bne	r2,zero,101012c0 <___vfprintf_internal_r+0xe08>
10100e60:	d9402e17 	ldw	r5,184(sp)
10100e64:	d8801f17 	ldw	r2,124(sp)
10100e68:	44000015 	stw	r16,0(r8)
10100e6c:	1947883a 	add	r3,r3,r5
10100e70:	10800044 	addi	r2,r2,1
10100e74:	41400115 	stw	r5,4(r8)
10100e78:	d8c02015 	stw	r3,128(sp)
10100e7c:	d8801f15 	stw	r2,124(sp)
10100e80:	010001c4 	movi	r4,7
10100e84:	2081d316 	blt	r4,r2,101015d4 <___vfprintf_internal_r+0x111c>
10100e88:	42000204 	addi	r8,r8,8
10100e8c:	9480010c 	andi	r18,r18,4
10100e90:	90003226 	beq	r18,zero,10100f5c <___vfprintf_internal_r+0xaa4>
10100e94:	d9403117 	ldw	r5,196(sp)
10100e98:	d8802a17 	ldw	r2,168(sp)
10100e9c:	28a1c83a 	sub	r16,r5,r2
10100ea0:	04002e0e 	bge	zero,r16,10100f5c <___vfprintf_internal_r+0xaa4>
10100ea4:	04400404 	movi	r17,16
10100ea8:	d8801f17 	ldw	r2,124(sp)
10100eac:	8c04a20e 	bge	r17,r16,10102138 <___vfprintf_internal_r+0x1c80>
10100eb0:	01440474 	movhi	r5,4113
10100eb4:	297e3084 	addi	r5,r5,-1854
10100eb8:	d9403515 	stw	r5,212(sp)
10100ebc:	048001c4 	movi	r18,7
10100ec0:	dcc02c17 	ldw	r19,176(sp)
10100ec4:	00000306 	br	10100ed4 <___vfprintf_internal_r+0xa1c>
10100ec8:	843ffc04 	addi	r16,r16,-16
10100ecc:	42000204 	addi	r8,r8,8
10100ed0:	8c00130e 	bge	r17,r16,10100f20 <___vfprintf_internal_r+0xa68>
10100ed4:	01040474 	movhi	r4,4113
10100ed8:	18c00404 	addi	r3,r3,16
10100edc:	10800044 	addi	r2,r2,1
10100ee0:	213e3084 	addi	r4,r4,-1854
10100ee4:	41000015 	stw	r4,0(r8)
10100ee8:	44400115 	stw	r17,4(r8)
10100eec:	d8c02015 	stw	r3,128(sp)
10100ef0:	d8801f15 	stw	r2,124(sp)
10100ef4:	90bff40e 	bge	r18,r2,10100ec8 <__alt_data_end+0xfffe0ec8>
10100ef8:	d9801e04 	addi	r6,sp,120
10100efc:	b80b883a 	mov	r5,r23
10100f00:	9809883a 	mov	r4,r19
10100f04:	01072ec0 	call	101072ec <__sprint_r>
10100f08:	103e6d1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10100f0c:	843ffc04 	addi	r16,r16,-16
10100f10:	d8c02017 	ldw	r3,128(sp)
10100f14:	d8801f17 	ldw	r2,124(sp)
10100f18:	da000404 	addi	r8,sp,16
10100f1c:	8c3fed16 	blt	r17,r16,10100ed4 <__alt_data_end+0xfffe0ed4>
10100f20:	d9403517 	ldw	r5,212(sp)
10100f24:	1c07883a 	add	r3,r3,r16
10100f28:	10800044 	addi	r2,r2,1
10100f2c:	41400015 	stw	r5,0(r8)
10100f30:	44000115 	stw	r16,4(r8)
10100f34:	d8c02015 	stw	r3,128(sp)
10100f38:	d8801f15 	stw	r2,124(sp)
10100f3c:	010001c4 	movi	r4,7
10100f40:	2080060e 	bge	r4,r2,10100f5c <___vfprintf_internal_r+0xaa4>
10100f44:	d9002c17 	ldw	r4,176(sp)
10100f48:	d9801e04 	addi	r6,sp,120
10100f4c:	b80b883a 	mov	r5,r23
10100f50:	01072ec0 	call	101072ec <__sprint_r>
10100f54:	103e5a1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10100f58:	d8c02017 	ldw	r3,128(sp)
10100f5c:	d8803117 	ldw	r2,196(sp)
10100f60:	d9002a17 	ldw	r4,168(sp)
10100f64:	1100010e 	bge	r2,r4,10100f6c <___vfprintf_internal_r+0xab4>
10100f68:	2005883a 	mov	r2,r4
10100f6c:	d9402f17 	ldw	r5,188(sp)
10100f70:	288b883a 	add	r5,r5,r2
10100f74:	d9402f15 	stw	r5,188(sp)
10100f78:	18019e1e 	bne	r3,zero,101015f4 <___vfprintf_internal_r+0x113c>
10100f7c:	a8800007 	ldb	r2,0(r21)
10100f80:	d8001f15 	stw	zero,124(sp)
10100f84:	da000404 	addi	r8,sp,16
10100f88:	103d851e 	bne	r2,zero,101005a0 <__alt_data_end+0xfffe05a0>
10100f8c:	a821883a 	mov	r16,r21
10100f90:	003d9b06 	br	10100600 <__alt_data_end+0xfffe0600>
10100f94:	18c03fcc 	andi	r3,r3,255
10100f98:	1805c11e 	bne	r3,zero,101026a0 <___vfprintf_internal_r+0x21e8>
10100f9c:	94800414 	ori	r18,r18,16
10100fa0:	9080080c 	andi	r2,r18,32
10100fa4:	10020c26 	beq	r2,zero,101017d8 <___vfprintf_internal_r+0x1320>
10100fa8:	d8802d17 	ldw	r2,180(sp)
10100fac:	d9002917 	ldw	r4,164(sp)
10100fb0:	d8002785 	stb	zero,158(sp)
10100fb4:	10c00204 	addi	r3,r2,8
10100fb8:	14c00017 	ldw	r19,0(r2)
10100fbc:	15800117 	ldw	r22,4(r2)
10100fc0:	20040f16 	blt	r4,zero,10102000 <___vfprintf_internal_r+0x1b48>
10100fc4:	013fdfc4 	movi	r4,-129
10100fc8:	9d84b03a 	or	r2,r19,r22
10100fcc:	d8c02d15 	stw	r3,180(sp)
10100fd0:	9124703a 	and	r18,r18,r4
10100fd4:	0039883a 	mov	fp,zero
10100fd8:	103e891e 	bne	r2,zero,10100a00 <__alt_data_end+0xfffe0a00>
10100fdc:	d9002917 	ldw	r4,164(sp)
10100fe0:	2002c11e 	bne	r4,zero,10101ae8 <___vfprintf_internal_r+0x1630>
10100fe4:	d8002915 	stw	zero,164(sp)
10100fe8:	d8002e15 	stw	zero,184(sp)
10100fec:	dc001e04 	addi	r16,sp,120
10100ff0:	003ef806 	br	10100bd4 <__alt_data_end+0xfffe0bd4>
10100ff4:	18c03fcc 	andi	r3,r3,255
10100ff8:	18059d1e 	bne	r3,zero,10102670 <___vfprintf_internal_r+0x21b8>
10100ffc:	01440474 	movhi	r5,4113
10101000:	297e2004 	addi	r5,r5,-1920
10101004:	d9403915 	stw	r5,228(sp)
10101008:	9080080c 	andi	r2,r18,32
1010100c:	10005226 	beq	r2,zero,10101158 <___vfprintf_internal_r+0xca0>
10101010:	d8802d17 	ldw	r2,180(sp)
10101014:	14c00017 	ldw	r19,0(r2)
10101018:	15800117 	ldw	r22,4(r2)
1010101c:	10800204 	addi	r2,r2,8
10101020:	d8802d15 	stw	r2,180(sp)
10101024:	9080004c 	andi	r2,r18,1
10101028:	10019026 	beq	r2,zero,1010166c <___vfprintf_internal_r+0x11b4>
1010102c:	9d84b03a 	or	r2,r19,r22
10101030:	10036926 	beq	r2,zero,10101dd8 <___vfprintf_internal_r+0x1920>
10101034:	d8c02917 	ldw	r3,164(sp)
10101038:	00800c04 	movi	r2,48
1010103c:	d8802705 	stb	r2,156(sp)
10101040:	dc402745 	stb	r17,157(sp)
10101044:	d8002785 	stb	zero,158(sp)
10101048:	90800094 	ori	r2,r18,2
1010104c:	18045d16 	blt	r3,zero,101021c4 <___vfprintf_internal_r+0x1d0c>
10101050:	00bfdfc4 	movi	r2,-129
10101054:	90a4703a 	and	r18,r18,r2
10101058:	94800094 	ori	r18,r18,2
1010105c:	0039883a 	mov	fp,zero
10101060:	d9003917 	ldw	r4,228(sp)
10101064:	dc001e04 	addi	r16,sp,120
10101068:	988003cc 	andi	r2,r19,15
1010106c:	b006973a 	slli	r3,r22,28
10101070:	2085883a 	add	r2,r4,r2
10101074:	9826d13a 	srli	r19,r19,4
10101078:	10800003 	ldbu	r2,0(r2)
1010107c:	b02cd13a 	srli	r22,r22,4
10101080:	843fffc4 	addi	r16,r16,-1
10101084:	1ce6b03a 	or	r19,r3,r19
10101088:	80800005 	stb	r2,0(r16)
1010108c:	9d84b03a 	or	r2,r19,r22
10101090:	103ff51e 	bne	r2,zero,10101068 <__alt_data_end+0xfffe1068>
10101094:	d8c02817 	ldw	r3,160(sp)
10101098:	1c07c83a 	sub	r3,r3,r16
1010109c:	d8c02e15 	stw	r3,184(sp)
101010a0:	003ecc06 	br	10100bd4 <__alt_data_end+0xfffe0bd4>
101010a4:	18c03fcc 	andi	r3,r3,255
101010a8:	183e9f26 	beq	r3,zero,10100b28 <__alt_data_end+0xfffe0b28>
101010ac:	d9c02785 	stb	r7,158(sp)
101010b0:	003e9d06 	br	10100b28 <__alt_data_end+0xfffe0b28>
101010b4:	00c00044 	movi	r3,1
101010b8:	01c00ac4 	movi	r7,43
101010bc:	ac400007 	ldb	r17,0(r21)
101010c0:	003d5e06 	br	1010063c <__alt_data_end+0xfffe063c>
101010c4:	94800814 	ori	r18,r18,32
101010c8:	ac400007 	ldb	r17,0(r21)
101010cc:	003d5b06 	br	1010063c <__alt_data_end+0xfffe063c>
101010d0:	d8c02d17 	ldw	r3,180(sp)
101010d4:	d8002785 	stb	zero,158(sp)
101010d8:	1c000017 	ldw	r16,0(r3)
101010dc:	1cc00104 	addi	r19,r3,4
101010e0:	80041926 	beq	r16,zero,10102148 <___vfprintf_internal_r+0x1c90>
101010e4:	d9002917 	ldw	r4,164(sp)
101010e8:	2003d016 	blt	r4,zero,1010202c <___vfprintf_internal_r+0x1b74>
101010ec:	200d883a 	mov	r6,r4
101010f0:	000b883a 	mov	r5,zero
101010f4:	8009883a 	mov	r4,r16
101010f8:	da003d15 	stw	r8,244(sp)
101010fc:	01058240 	call	10105824 <memchr>
10101100:	da003d17 	ldw	r8,244(sp)
10101104:	10045426 	beq	r2,zero,10102258 <___vfprintf_internal_r+0x1da0>
10101108:	1405c83a 	sub	r2,r2,r16
1010110c:	d8802e15 	stw	r2,184(sp)
10101110:	1003cc16 	blt	r2,zero,10102044 <___vfprintf_internal_r+0x1b8c>
10101114:	df002783 	ldbu	fp,158(sp)
10101118:	d8802a15 	stw	r2,168(sp)
1010111c:	dcc02d15 	stw	r19,180(sp)
10101120:	d8002915 	stw	zero,164(sp)
10101124:	d8003215 	stw	zero,200(sp)
10101128:	003eb006 	br	10100bec <__alt_data_end+0xfffe0bec>
1010112c:	18c03fcc 	andi	r3,r3,255
10101130:	183f9b26 	beq	r3,zero,10100fa0 <__alt_data_end+0xfffe0fa0>
10101134:	d9c02785 	stb	r7,158(sp)
10101138:	003f9906 	br	10100fa0 <__alt_data_end+0xfffe0fa0>
1010113c:	18c03fcc 	andi	r3,r3,255
10101140:	1805551e 	bne	r3,zero,10102698 <___vfprintf_internal_r+0x21e0>
10101144:	01440474 	movhi	r5,4113
10101148:	297e2504 	addi	r5,r5,-1900
1010114c:	d9403915 	stw	r5,228(sp)
10101150:	9080080c 	andi	r2,r18,32
10101154:	103fae1e 	bne	r2,zero,10101010 <__alt_data_end+0xfffe1010>
10101158:	9080040c 	andi	r2,r18,16
1010115c:	1002de26 	beq	r2,zero,10101cd8 <___vfprintf_internal_r+0x1820>
10101160:	d8c02d17 	ldw	r3,180(sp)
10101164:	002d883a 	mov	r22,zero
10101168:	1cc00017 	ldw	r19,0(r3)
1010116c:	18c00104 	addi	r3,r3,4
10101170:	d8c02d15 	stw	r3,180(sp)
10101174:	003fab06 	br	10101024 <__alt_data_end+0xfffe1024>
10101178:	38803fcc 	andi	r2,r7,255
1010117c:	1080201c 	xori	r2,r2,128
10101180:	10bfe004 	addi	r2,r2,-128
10101184:	1002d21e 	bne	r2,zero,10101cd0 <___vfprintf_internal_r+0x1818>
10101188:	00c00044 	movi	r3,1
1010118c:	01c00804 	movi	r7,32
10101190:	ac400007 	ldb	r17,0(r21)
10101194:	003d2906 	br	1010063c <__alt_data_end+0xfffe063c>
10101198:	94800054 	ori	r18,r18,1
1010119c:	ac400007 	ldb	r17,0(r21)
101011a0:	003d2606 	br	1010063c <__alt_data_end+0xfffe063c>
101011a4:	18c03fcc 	andi	r3,r3,255
101011a8:	183e0526 	beq	r3,zero,101009c0 <__alt_data_end+0xfffe09c0>
101011ac:	d9c02785 	stb	r7,158(sp)
101011b0:	003e0306 	br	101009c0 <__alt_data_end+0xfffe09c0>
101011b4:	94801014 	ori	r18,r18,64
101011b8:	ac400007 	ldb	r17,0(r21)
101011bc:	003d1f06 	br	1010063c <__alt_data_end+0xfffe063c>
101011c0:	ac400007 	ldb	r17,0(r21)
101011c4:	8a438726 	beq	r17,r9,10101fe4 <___vfprintf_internal_r+0x1b2c>
101011c8:	94800414 	ori	r18,r18,16
101011cc:	003d1b06 	br	1010063c <__alt_data_end+0xfffe063c>
101011d0:	18c03fcc 	andi	r3,r3,255
101011d4:	1805341e 	bne	r3,zero,101026a8 <___vfprintf_internal_r+0x21f0>
101011d8:	9080080c 	andi	r2,r18,32
101011dc:	1002cd26 	beq	r2,zero,10101d14 <___vfprintf_internal_r+0x185c>
101011e0:	d9402d17 	ldw	r5,180(sp)
101011e4:	d9002f17 	ldw	r4,188(sp)
101011e8:	28800017 	ldw	r2,0(r5)
101011ec:	2007d7fa 	srai	r3,r4,31
101011f0:	29400104 	addi	r5,r5,4
101011f4:	d9402d15 	stw	r5,180(sp)
101011f8:	11000015 	stw	r4,0(r2)
101011fc:	10c00115 	stw	r3,4(r2)
10101200:	003ce506 	br	10100598 <__alt_data_end+0xfffe0598>
10101204:	d8c02d17 	ldw	r3,180(sp)
10101208:	d9002d17 	ldw	r4,180(sp)
1010120c:	d8002785 	stb	zero,158(sp)
10101210:	18800017 	ldw	r2,0(r3)
10101214:	21000104 	addi	r4,r4,4
10101218:	00c00044 	movi	r3,1
1010121c:	d8c02a15 	stw	r3,168(sp)
10101220:	d8801405 	stb	r2,80(sp)
10101224:	d9002d15 	stw	r4,180(sp)
10101228:	d8c02e15 	stw	r3,184(sp)
1010122c:	d8002915 	stw	zero,164(sp)
10101230:	d8003215 	stw	zero,200(sp)
10101234:	dc001404 	addi	r16,sp,80
10101238:	0039883a 	mov	fp,zero
1010123c:	003e7206 	br	10100c08 <__alt_data_end+0xfffe0c08>
10101240:	01040474 	movhi	r4,4113
10101244:	213e2504 	addi	r4,r4,-1900
10101248:	0039883a 	mov	fp,zero
1010124c:	d9003915 	stw	r4,228(sp)
10101250:	04401e04 	movi	r17,120
10101254:	003f8206 	br	10101060 <__alt_data_end+0xfffe1060>
10101258:	18c03fcc 	andi	r3,r3,255
1010125c:	1805061e 	bne	r3,zero,10102678 <___vfprintf_internal_r+0x21c0>
10101260:	883d9126 	beq	r17,zero,101008a8 <__alt_data_end+0xfffe08a8>
10101264:	00c00044 	movi	r3,1
10101268:	d8c02a15 	stw	r3,168(sp)
1010126c:	dc401405 	stb	r17,80(sp)
10101270:	d8002785 	stb	zero,158(sp)
10101274:	003fec06 	br	10101228 <__alt_data_end+0xfffe1228>
10101278:	01440474 	movhi	r5,4113
1010127c:	297e2504 	addi	r5,r5,-1900
10101280:	d9403915 	stw	r5,228(sp)
10101284:	d8c02d15 	stw	r3,180(sp)
10101288:	1025883a 	mov	r18,r2
1010128c:	04401e04 	movi	r17,120
10101290:	9d84b03a 	or	r2,r19,r22
10101294:	1000fc1e 	bne	r2,zero,10101688 <___vfprintf_internal_r+0x11d0>
10101298:	0039883a 	mov	fp,zero
1010129c:	00800084 	movi	r2,2
101012a0:	10803fcc 	andi	r2,r2,255
101012a4:	00c00044 	movi	r3,1
101012a8:	10c20f26 	beq	r2,r3,10101ae8 <___vfprintf_internal_r+0x1630>
101012ac:	00c00084 	movi	r3,2
101012b0:	10fd6326 	beq	r2,r3,10100840 <__alt_data_end+0xfffe0840>
101012b4:	003e2d06 	br	10100b6c <__alt_data_end+0xfffe0b6c>
101012b8:	d8c02017 	ldw	r3,128(sp)
101012bc:	003e9306 	br	10100d0c <__alt_data_end+0xfffe0d0c>
101012c0:	00801944 	movi	r2,101
101012c4:	14407e0e 	bge	r2,r17,101014c0 <___vfprintf_internal_r+0x1008>
101012c8:	d9003617 	ldw	r4,216(sp)
101012cc:	d9403817 	ldw	r5,224(sp)
101012d0:	000d883a 	mov	r6,zero
101012d4:	000f883a 	mov	r7,zero
101012d8:	d8c03c15 	stw	r3,240(sp)
101012dc:	da003d15 	stw	r8,244(sp)
101012e0:	010bae00 	call	1010bae0 <__eqdf2>
101012e4:	d8c03c17 	ldw	r3,240(sp)
101012e8:	da003d17 	ldw	r8,244(sp)
101012ec:	1000f71e 	bne	r2,zero,101016cc <___vfprintf_internal_r+0x1214>
101012f0:	d8801f17 	ldw	r2,124(sp)
101012f4:	01040474 	movhi	r4,4113
101012f8:	213e2c04 	addi	r4,r4,-1872
101012fc:	18c00044 	addi	r3,r3,1
10101300:	10800044 	addi	r2,r2,1
10101304:	41000015 	stw	r4,0(r8)
10101308:	01000044 	movi	r4,1
1010130c:	41000115 	stw	r4,4(r8)
10101310:	d8c02015 	stw	r3,128(sp)
10101314:	d8801f15 	stw	r2,124(sp)
10101318:	010001c4 	movi	r4,7
1010131c:	2082b816 	blt	r4,r2,10101e00 <___vfprintf_internal_r+0x1948>
10101320:	42000204 	addi	r8,r8,8
10101324:	d8802617 	ldw	r2,152(sp)
10101328:	d9403317 	ldw	r5,204(sp)
1010132c:	11400216 	blt	r2,r5,10101338 <___vfprintf_internal_r+0xe80>
10101330:	9080004c 	andi	r2,r18,1
10101334:	103ed526 	beq	r2,zero,10100e8c <__alt_data_end+0xfffe0e8c>
10101338:	d8803717 	ldw	r2,220(sp)
1010133c:	d9003417 	ldw	r4,208(sp)
10101340:	d9403717 	ldw	r5,220(sp)
10101344:	1887883a 	add	r3,r3,r2
10101348:	d8801f17 	ldw	r2,124(sp)
1010134c:	41000015 	stw	r4,0(r8)
10101350:	41400115 	stw	r5,4(r8)
10101354:	10800044 	addi	r2,r2,1
10101358:	d8c02015 	stw	r3,128(sp)
1010135c:	d8801f15 	stw	r2,124(sp)
10101360:	010001c4 	movi	r4,7
10101364:	20832916 	blt	r4,r2,1010200c <___vfprintf_internal_r+0x1b54>
10101368:	42000204 	addi	r8,r8,8
1010136c:	d8803317 	ldw	r2,204(sp)
10101370:	143fffc4 	addi	r16,r2,-1
10101374:	043ec50e 	bge	zero,r16,10100e8c <__alt_data_end+0xfffe0e8c>
10101378:	04400404 	movi	r17,16
1010137c:	d8801f17 	ldw	r2,124(sp)
10101380:	8c00880e 	bge	r17,r16,101015a4 <___vfprintf_internal_r+0x10ec>
10101384:	01440474 	movhi	r5,4113
10101388:	297e2c84 	addi	r5,r5,-1870
1010138c:	d9402b15 	stw	r5,172(sp)
10101390:	058001c4 	movi	r22,7
10101394:	dcc02c17 	ldw	r19,176(sp)
10101398:	00000306 	br	101013a8 <___vfprintf_internal_r+0xef0>
1010139c:	42000204 	addi	r8,r8,8
101013a0:	843ffc04 	addi	r16,r16,-16
101013a4:	8c00820e 	bge	r17,r16,101015b0 <___vfprintf_internal_r+0x10f8>
101013a8:	18c00404 	addi	r3,r3,16
101013ac:	10800044 	addi	r2,r2,1
101013b0:	45000015 	stw	r20,0(r8)
101013b4:	44400115 	stw	r17,4(r8)
101013b8:	d8c02015 	stw	r3,128(sp)
101013bc:	d8801f15 	stw	r2,124(sp)
101013c0:	b0bff60e 	bge	r22,r2,1010139c <__alt_data_end+0xfffe139c>
101013c4:	d9801e04 	addi	r6,sp,120
101013c8:	b80b883a 	mov	r5,r23
101013cc:	9809883a 	mov	r4,r19
101013d0:	01072ec0 	call	101072ec <__sprint_r>
101013d4:	103d3a1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
101013d8:	d8c02017 	ldw	r3,128(sp)
101013dc:	d8801f17 	ldw	r2,124(sp)
101013e0:	da000404 	addi	r8,sp,16
101013e4:	003fee06 	br	101013a0 <__alt_data_end+0xfffe13a0>
101013e8:	d9403117 	ldw	r5,196(sp)
101013ec:	d8802a17 	ldw	r2,168(sp)
101013f0:	28adc83a 	sub	r22,r5,r2
101013f4:	05be630e 	bge	zero,r22,10100d84 <__alt_data_end+0xfffe0d84>
101013f8:	07000404 	movi	fp,16
101013fc:	d8801f17 	ldw	r2,124(sp)
10101400:	e5838f0e 	bge	fp,r22,10102240 <___vfprintf_internal_r+0x1d88>
10101404:	01440474 	movhi	r5,4113
10101408:	297e2c84 	addi	r5,r5,-1870
1010140c:	dc403015 	stw	r17,192(sp)
10101410:	d9402b15 	stw	r5,172(sp)
10101414:	b023883a 	mov	r17,r22
10101418:	04c001c4 	movi	r19,7
1010141c:	a82d883a 	mov	r22,r21
10101420:	902b883a 	mov	r21,r18
10101424:	8025883a 	mov	r18,r16
10101428:	dc002c17 	ldw	r16,176(sp)
1010142c:	00000306 	br	1010143c <___vfprintf_internal_r+0xf84>
10101430:	8c7ffc04 	addi	r17,r17,-16
10101434:	42000204 	addi	r8,r8,8
10101438:	e440110e 	bge	fp,r17,10101480 <___vfprintf_internal_r+0xfc8>
1010143c:	18c00404 	addi	r3,r3,16
10101440:	10800044 	addi	r2,r2,1
10101444:	45000015 	stw	r20,0(r8)
10101448:	47000115 	stw	fp,4(r8)
1010144c:	d8c02015 	stw	r3,128(sp)
10101450:	d8801f15 	stw	r2,124(sp)
10101454:	98bff60e 	bge	r19,r2,10101430 <__alt_data_end+0xfffe1430>
10101458:	d9801e04 	addi	r6,sp,120
1010145c:	b80b883a 	mov	r5,r23
10101460:	8009883a 	mov	r4,r16
10101464:	01072ec0 	call	101072ec <__sprint_r>
10101468:	103d151e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
1010146c:	8c7ffc04 	addi	r17,r17,-16
10101470:	d8c02017 	ldw	r3,128(sp)
10101474:	d8801f17 	ldw	r2,124(sp)
10101478:	da000404 	addi	r8,sp,16
1010147c:	e47fef16 	blt	fp,r17,1010143c <__alt_data_end+0xfffe143c>
10101480:	9021883a 	mov	r16,r18
10101484:	a825883a 	mov	r18,r21
10101488:	b02b883a 	mov	r21,r22
1010148c:	882d883a 	mov	r22,r17
10101490:	dc403017 	ldw	r17,192(sp)
10101494:	d9002b17 	ldw	r4,172(sp)
10101498:	1d87883a 	add	r3,r3,r22
1010149c:	10800044 	addi	r2,r2,1
101014a0:	41000015 	stw	r4,0(r8)
101014a4:	45800115 	stw	r22,4(r8)
101014a8:	d8c02015 	stw	r3,128(sp)
101014ac:	d8801f15 	stw	r2,124(sp)
101014b0:	010001c4 	movi	r4,7
101014b4:	20818e16 	blt	r4,r2,10101af0 <___vfprintf_internal_r+0x1638>
101014b8:	42000204 	addi	r8,r8,8
101014bc:	003e3106 	br	10100d84 <__alt_data_end+0xfffe0d84>
101014c0:	d9403317 	ldw	r5,204(sp)
101014c4:	00800044 	movi	r2,1
101014c8:	18c00044 	addi	r3,r3,1
101014cc:	1141530e 	bge	r2,r5,10101a1c <___vfprintf_internal_r+0x1564>
101014d0:	dc401f17 	ldw	r17,124(sp)
101014d4:	00800044 	movi	r2,1
101014d8:	40800115 	stw	r2,4(r8)
101014dc:	8c400044 	addi	r17,r17,1
101014e0:	44000015 	stw	r16,0(r8)
101014e4:	d8c02015 	stw	r3,128(sp)
101014e8:	dc401f15 	stw	r17,124(sp)
101014ec:	008001c4 	movi	r2,7
101014f0:	14416b16 	blt	r2,r17,10101aa0 <___vfprintf_internal_r+0x15e8>
101014f4:	42000204 	addi	r8,r8,8
101014f8:	d8803717 	ldw	r2,220(sp)
101014fc:	d9003417 	ldw	r4,208(sp)
10101500:	8c400044 	addi	r17,r17,1
10101504:	10c7883a 	add	r3,r2,r3
10101508:	40800115 	stw	r2,4(r8)
1010150c:	41000015 	stw	r4,0(r8)
10101510:	d8c02015 	stw	r3,128(sp)
10101514:	dc401f15 	stw	r17,124(sp)
10101518:	008001c4 	movi	r2,7
1010151c:	14416916 	blt	r2,r17,10101ac4 <___vfprintf_internal_r+0x160c>
10101520:	45800204 	addi	r22,r8,8
10101524:	d9003617 	ldw	r4,216(sp)
10101528:	d9403817 	ldw	r5,224(sp)
1010152c:	000d883a 	mov	r6,zero
10101530:	000f883a 	mov	r7,zero
10101534:	d8c03c15 	stw	r3,240(sp)
10101538:	010bae00 	call	1010bae0 <__eqdf2>
1010153c:	d8c03c17 	ldw	r3,240(sp)
10101540:	1000bc26 	beq	r2,zero,10101834 <___vfprintf_internal_r+0x137c>
10101544:	d9403317 	ldw	r5,204(sp)
10101548:	84000044 	addi	r16,r16,1
1010154c:	8c400044 	addi	r17,r17,1
10101550:	28bfffc4 	addi	r2,r5,-1
10101554:	1887883a 	add	r3,r3,r2
10101558:	b0800115 	stw	r2,4(r22)
1010155c:	b4000015 	stw	r16,0(r22)
10101560:	d8c02015 	stw	r3,128(sp)
10101564:	dc401f15 	stw	r17,124(sp)
10101568:	008001c4 	movi	r2,7
1010156c:	14414316 	blt	r2,r17,10101a7c <___vfprintf_internal_r+0x15c4>
10101570:	b5800204 	addi	r22,r22,8
10101574:	d9003a17 	ldw	r4,232(sp)
10101578:	df0022c4 	addi	fp,sp,139
1010157c:	8c400044 	addi	r17,r17,1
10101580:	20c7883a 	add	r3,r4,r3
10101584:	b7000015 	stw	fp,0(r22)
10101588:	b1000115 	stw	r4,4(r22)
1010158c:	d8c02015 	stw	r3,128(sp)
10101590:	dc401f15 	stw	r17,124(sp)
10101594:	008001c4 	movi	r2,7
10101598:	14400e16 	blt	r2,r17,101015d4 <___vfprintf_internal_r+0x111c>
1010159c:	b2000204 	addi	r8,r22,8
101015a0:	003e3a06 	br	10100e8c <__alt_data_end+0xfffe0e8c>
101015a4:	01040474 	movhi	r4,4113
101015a8:	213e2c84 	addi	r4,r4,-1870
101015ac:	d9002b15 	stw	r4,172(sp)
101015b0:	d9002b17 	ldw	r4,172(sp)
101015b4:	1c07883a 	add	r3,r3,r16
101015b8:	44000115 	stw	r16,4(r8)
101015bc:	41000015 	stw	r4,0(r8)
101015c0:	10800044 	addi	r2,r2,1
101015c4:	d8c02015 	stw	r3,128(sp)
101015c8:	d8801f15 	stw	r2,124(sp)
101015cc:	010001c4 	movi	r4,7
101015d0:	20be2d0e 	bge	r4,r2,10100e88 <__alt_data_end+0xfffe0e88>
101015d4:	d9002c17 	ldw	r4,176(sp)
101015d8:	d9801e04 	addi	r6,sp,120
101015dc:	b80b883a 	mov	r5,r23
101015e0:	01072ec0 	call	101072ec <__sprint_r>
101015e4:	103cb61e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
101015e8:	d8c02017 	ldw	r3,128(sp)
101015ec:	da000404 	addi	r8,sp,16
101015f0:	003e2606 	br	10100e8c <__alt_data_end+0xfffe0e8c>
101015f4:	d9002c17 	ldw	r4,176(sp)
101015f8:	d9801e04 	addi	r6,sp,120
101015fc:	b80b883a 	mov	r5,r23
10101600:	01072ec0 	call	101072ec <__sprint_r>
10101604:	103e5d26 	beq	r2,zero,10100f7c <__alt_data_end+0xfffe0f7c>
10101608:	003cad06 	br	101008c0 <__alt_data_end+0xfffe08c0>
1010160c:	d9002c17 	ldw	r4,176(sp)
10101610:	d9801e04 	addi	r6,sp,120
10101614:	b80b883a 	mov	r5,r23
10101618:	01072ec0 	call	101072ec <__sprint_r>
1010161c:	103ca81e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101620:	d8c02017 	ldw	r3,128(sp)
10101624:	da000404 	addi	r8,sp,16
10101628:	003e0b06 	br	10100e58 <__alt_data_end+0xfffe0e58>
1010162c:	d9002c17 	ldw	r4,176(sp)
10101630:	d9801e04 	addi	r6,sp,120
10101634:	b80b883a 	mov	r5,r23
10101638:	01072ec0 	call	101072ec <__sprint_r>
1010163c:	103ca01e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101640:	d8c02017 	ldw	r3,128(sp)
10101644:	da000404 	addi	r8,sp,16
10101648:	003dbd06 	br	10100d40 <__alt_data_end+0xfffe0d40>
1010164c:	d9002c17 	ldw	r4,176(sp)
10101650:	d9801e04 	addi	r6,sp,120
10101654:	b80b883a 	mov	r5,r23
10101658:	01072ec0 	call	101072ec <__sprint_r>
1010165c:	103c981e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101660:	d8c02017 	ldw	r3,128(sp)
10101664:	da000404 	addi	r8,sp,16
10101668:	003dc306 	br	10100d78 <__alt_data_end+0xfffe0d78>
1010166c:	d8802917 	ldw	r2,164(sp)
10101670:	d8002785 	stb	zero,158(sp)
10101674:	103f0616 	blt	r2,zero,10101290 <__alt_data_end+0xfffe1290>
10101678:	00ffdfc4 	movi	r3,-129
1010167c:	9d84b03a 	or	r2,r19,r22
10101680:	90e4703a 	and	r18,r18,r3
10101684:	103c6b26 	beq	r2,zero,10100834 <__alt_data_end+0xfffe0834>
10101688:	0039883a 	mov	fp,zero
1010168c:	003e7406 	br	10101060 <__alt_data_end+0xfffe1060>
10101690:	9080040c 	andi	r2,r18,16
10101694:	1001b326 	beq	r2,zero,10101d64 <___vfprintf_internal_r+0x18ac>
10101698:	d9002d17 	ldw	r4,180(sp)
1010169c:	d9402917 	ldw	r5,164(sp)
101016a0:	d8002785 	stb	zero,158(sp)
101016a4:	20800104 	addi	r2,r4,4
101016a8:	24c00017 	ldw	r19,0(r4)
101016ac:	002d883a 	mov	r22,zero
101016b0:	2801b516 	blt	r5,zero,10101d88 <___vfprintf_internal_r+0x18d0>
101016b4:	00ffdfc4 	movi	r3,-129
101016b8:	d8802d15 	stw	r2,180(sp)
101016bc:	90e4703a 	and	r18,r18,r3
101016c0:	983d2726 	beq	r19,zero,10100b60 <__alt_data_end+0xfffe0b60>
101016c4:	0039883a 	mov	fp,zero
101016c8:	003d2a06 	br	10100b74 <__alt_data_end+0xfffe0b74>
101016cc:	dc402617 	ldw	r17,152(sp)
101016d0:	0441d30e 	bge	zero,r17,10101e20 <___vfprintf_internal_r+0x1968>
101016d4:	dc403217 	ldw	r17,200(sp)
101016d8:	d8803317 	ldw	r2,204(sp)
101016dc:	1440010e 	bge	r2,r17,101016e4 <___vfprintf_internal_r+0x122c>
101016e0:	1023883a 	mov	r17,r2
101016e4:	04400a0e 	bge	zero,r17,10101710 <___vfprintf_internal_r+0x1258>
101016e8:	d8801f17 	ldw	r2,124(sp)
101016ec:	1c47883a 	add	r3,r3,r17
101016f0:	44000015 	stw	r16,0(r8)
101016f4:	10800044 	addi	r2,r2,1
101016f8:	44400115 	stw	r17,4(r8)
101016fc:	d8c02015 	stw	r3,128(sp)
10101700:	d8801f15 	stw	r2,124(sp)
10101704:	010001c4 	movi	r4,7
10101708:	20826516 	blt	r4,r2,101020a0 <___vfprintf_internal_r+0x1be8>
1010170c:	42000204 	addi	r8,r8,8
10101710:	88026116 	blt	r17,zero,10102098 <___vfprintf_internal_r+0x1be0>
10101714:	d9003217 	ldw	r4,200(sp)
10101718:	2463c83a 	sub	r17,r4,r17
1010171c:	04407b0e 	bge	zero,r17,1010190c <___vfprintf_internal_r+0x1454>
10101720:	05800404 	movi	r22,16
10101724:	d8801f17 	ldw	r2,124(sp)
10101728:	b4419d0e 	bge	r22,r17,10101da0 <___vfprintf_internal_r+0x18e8>
1010172c:	01040474 	movhi	r4,4113
10101730:	213e2c84 	addi	r4,r4,-1870
10101734:	d9002b15 	stw	r4,172(sp)
10101738:	070001c4 	movi	fp,7
1010173c:	dcc02c17 	ldw	r19,176(sp)
10101740:	00000306 	br	10101750 <___vfprintf_internal_r+0x1298>
10101744:	42000204 	addi	r8,r8,8
10101748:	8c7ffc04 	addi	r17,r17,-16
1010174c:	b441970e 	bge	r22,r17,10101dac <___vfprintf_internal_r+0x18f4>
10101750:	18c00404 	addi	r3,r3,16
10101754:	10800044 	addi	r2,r2,1
10101758:	45000015 	stw	r20,0(r8)
1010175c:	45800115 	stw	r22,4(r8)
10101760:	d8c02015 	stw	r3,128(sp)
10101764:	d8801f15 	stw	r2,124(sp)
10101768:	e0bff60e 	bge	fp,r2,10101744 <__alt_data_end+0xfffe1744>
1010176c:	d9801e04 	addi	r6,sp,120
10101770:	b80b883a 	mov	r5,r23
10101774:	9809883a 	mov	r4,r19
10101778:	01072ec0 	call	101072ec <__sprint_r>
1010177c:	103c501e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101780:	d8c02017 	ldw	r3,128(sp)
10101784:	d8801f17 	ldw	r2,124(sp)
10101788:	da000404 	addi	r8,sp,16
1010178c:	003fee06 	br	10101748 <__alt_data_end+0xfffe1748>
10101790:	d9002c17 	ldw	r4,176(sp)
10101794:	d9801e04 	addi	r6,sp,120
10101798:	b80b883a 	mov	r5,r23
1010179c:	01072ec0 	call	101072ec <__sprint_r>
101017a0:	103c471e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
101017a4:	d8c02017 	ldw	r3,128(sp)
101017a8:	df002787 	ldb	fp,158(sp)
101017ac:	da000404 	addi	r8,sp,16
101017b0:	003d5606 	br	10100d0c <__alt_data_end+0xfffe0d0c>
101017b4:	9080040c 	andi	r2,r18,16
101017b8:	10016126 	beq	r2,zero,10101d40 <___vfprintf_internal_r+0x1888>
101017bc:	d8802d17 	ldw	r2,180(sp)
101017c0:	14c00017 	ldw	r19,0(r2)
101017c4:	10800104 	addi	r2,r2,4
101017c8:	d8802d15 	stw	r2,180(sp)
101017cc:	982dd7fa 	srai	r22,r19,31
101017d0:	b005883a 	mov	r2,r22
101017d4:	003c8206 	br	101009e0 <__alt_data_end+0xfffe09e0>
101017d8:	9080040c 	andi	r2,r18,16
101017dc:	10003526 	beq	r2,zero,101018b4 <___vfprintf_internal_r+0x13fc>
101017e0:	d9402d17 	ldw	r5,180(sp)
101017e4:	d8c02917 	ldw	r3,164(sp)
101017e8:	d8002785 	stb	zero,158(sp)
101017ec:	28800104 	addi	r2,r5,4
101017f0:	2cc00017 	ldw	r19,0(r5)
101017f4:	002d883a 	mov	r22,zero
101017f8:	18003716 	blt	r3,zero,101018d8 <___vfprintf_internal_r+0x1420>
101017fc:	00ffdfc4 	movi	r3,-129
10101800:	d8802d15 	stw	r2,180(sp)
10101804:	90e4703a 	and	r18,r18,r3
10101808:	0039883a 	mov	fp,zero
1010180c:	983df326 	beq	r19,zero,10100fdc <__alt_data_end+0xfffe0fdc>
10101810:	00800244 	movi	r2,9
10101814:	14fc7b36 	bltu	r2,r19,10100a04 <__alt_data_end+0xfffe0a04>
10101818:	d8c02817 	ldw	r3,160(sp)
1010181c:	dc001dc4 	addi	r16,sp,119
10101820:	9cc00c04 	addi	r19,r19,48
10101824:	1c07c83a 	sub	r3,r3,r16
10101828:	dcc01dc5 	stb	r19,119(sp)
1010182c:	d8c02e15 	stw	r3,184(sp)
10101830:	003ce806 	br	10100bd4 <__alt_data_end+0xfffe0bd4>
10101834:	d8803317 	ldw	r2,204(sp)
10101838:	143fffc4 	addi	r16,r2,-1
1010183c:	043f4d0e 	bge	zero,r16,10101574 <__alt_data_end+0xfffe1574>
10101840:	07000404 	movi	fp,16
10101844:	e400810e 	bge	fp,r16,10101a4c <___vfprintf_internal_r+0x1594>
10101848:	01440474 	movhi	r5,4113
1010184c:	297e2c84 	addi	r5,r5,-1870
10101850:	d9402b15 	stw	r5,172(sp)
10101854:	01c001c4 	movi	r7,7
10101858:	dcc02c17 	ldw	r19,176(sp)
1010185c:	00000306 	br	1010186c <___vfprintf_internal_r+0x13b4>
10101860:	b5800204 	addi	r22,r22,8
10101864:	843ffc04 	addi	r16,r16,-16
10101868:	e4007b0e 	bge	fp,r16,10101a58 <___vfprintf_internal_r+0x15a0>
1010186c:	18c00404 	addi	r3,r3,16
10101870:	8c400044 	addi	r17,r17,1
10101874:	b5000015 	stw	r20,0(r22)
10101878:	b7000115 	stw	fp,4(r22)
1010187c:	d8c02015 	stw	r3,128(sp)
10101880:	dc401f15 	stw	r17,124(sp)
10101884:	3c7ff60e 	bge	r7,r17,10101860 <__alt_data_end+0xfffe1860>
10101888:	d9801e04 	addi	r6,sp,120
1010188c:	b80b883a 	mov	r5,r23
10101890:	9809883a 	mov	r4,r19
10101894:	d9c03c15 	stw	r7,240(sp)
10101898:	01072ec0 	call	101072ec <__sprint_r>
1010189c:	d9c03c17 	ldw	r7,240(sp)
101018a0:	103c071e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
101018a4:	d8c02017 	ldw	r3,128(sp)
101018a8:	dc401f17 	ldw	r17,124(sp)
101018ac:	dd800404 	addi	r22,sp,16
101018b0:	003fec06 	br	10101864 <__alt_data_end+0xfffe1864>
101018b4:	9080100c 	andi	r2,r18,64
101018b8:	d8002785 	stb	zero,158(sp)
101018bc:	10010e26 	beq	r2,zero,10101cf8 <___vfprintf_internal_r+0x1840>
101018c0:	d9002d17 	ldw	r4,180(sp)
101018c4:	d9402917 	ldw	r5,164(sp)
101018c8:	002d883a 	mov	r22,zero
101018cc:	20800104 	addi	r2,r4,4
101018d0:	24c0000b 	ldhu	r19,0(r4)
101018d4:	283fc90e 	bge	r5,zero,101017fc <__alt_data_end+0xfffe17fc>
101018d8:	d8802d15 	stw	r2,180(sp)
101018dc:	0039883a 	mov	fp,zero
101018e0:	9d84b03a 	or	r2,r19,r22
101018e4:	103c461e 	bne	r2,zero,10100a00 <__alt_data_end+0xfffe0a00>
101018e8:	00800044 	movi	r2,1
101018ec:	003e6c06 	br	101012a0 <__alt_data_end+0xfffe12a0>
101018f0:	d9002c17 	ldw	r4,176(sp)
101018f4:	d9801e04 	addi	r6,sp,120
101018f8:	b80b883a 	mov	r5,r23
101018fc:	01072ec0 	call	101072ec <__sprint_r>
10101900:	103bef1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101904:	d8c02017 	ldw	r3,128(sp)
10101908:	da000404 	addi	r8,sp,16
1010190c:	d9003217 	ldw	r4,200(sp)
10101910:	d8802617 	ldw	r2,152(sp)
10101914:	d9403317 	ldw	r5,204(sp)
10101918:	8123883a 	add	r17,r16,r4
1010191c:	11400216 	blt	r2,r5,10101928 <___vfprintf_internal_r+0x1470>
10101920:	9100004c 	andi	r4,r18,1
10101924:	20000d26 	beq	r4,zero,1010195c <___vfprintf_internal_r+0x14a4>
10101928:	d9003717 	ldw	r4,220(sp)
1010192c:	d9403417 	ldw	r5,208(sp)
10101930:	1907883a 	add	r3,r3,r4
10101934:	d9001f17 	ldw	r4,124(sp)
10101938:	41400015 	stw	r5,0(r8)
1010193c:	d9403717 	ldw	r5,220(sp)
10101940:	21000044 	addi	r4,r4,1
10101944:	d8c02015 	stw	r3,128(sp)
10101948:	41400115 	stw	r5,4(r8)
1010194c:	d9001f15 	stw	r4,124(sp)
10101950:	014001c4 	movi	r5,7
10101954:	2901e816 	blt	r5,r4,101020f8 <___vfprintf_internal_r+0x1c40>
10101958:	42000204 	addi	r8,r8,8
1010195c:	d9003317 	ldw	r4,204(sp)
10101960:	8121883a 	add	r16,r16,r4
10101964:	2085c83a 	sub	r2,r4,r2
10101968:	8461c83a 	sub	r16,r16,r17
1010196c:	1400010e 	bge	r2,r16,10101974 <___vfprintf_internal_r+0x14bc>
10101970:	1021883a 	mov	r16,r2
10101974:	04000a0e 	bge	zero,r16,101019a0 <___vfprintf_internal_r+0x14e8>
10101978:	d9001f17 	ldw	r4,124(sp)
1010197c:	1c07883a 	add	r3,r3,r16
10101980:	44400015 	stw	r17,0(r8)
10101984:	21000044 	addi	r4,r4,1
10101988:	44000115 	stw	r16,4(r8)
1010198c:	d8c02015 	stw	r3,128(sp)
10101990:	d9001f15 	stw	r4,124(sp)
10101994:	014001c4 	movi	r5,7
10101998:	2901fb16 	blt	r5,r4,10102188 <___vfprintf_internal_r+0x1cd0>
1010199c:	42000204 	addi	r8,r8,8
101019a0:	8001f716 	blt	r16,zero,10102180 <___vfprintf_internal_r+0x1cc8>
101019a4:	1421c83a 	sub	r16,r2,r16
101019a8:	043d380e 	bge	zero,r16,10100e8c <__alt_data_end+0xfffe0e8c>
101019ac:	04400404 	movi	r17,16
101019b0:	d8801f17 	ldw	r2,124(sp)
101019b4:	8c3efb0e 	bge	r17,r16,101015a4 <__alt_data_end+0xfffe15a4>
101019b8:	01440474 	movhi	r5,4113
101019bc:	297e2c84 	addi	r5,r5,-1870
101019c0:	d9402b15 	stw	r5,172(sp)
101019c4:	058001c4 	movi	r22,7
101019c8:	dcc02c17 	ldw	r19,176(sp)
101019cc:	00000306 	br	101019dc <___vfprintf_internal_r+0x1524>
101019d0:	42000204 	addi	r8,r8,8
101019d4:	843ffc04 	addi	r16,r16,-16
101019d8:	8c3ef50e 	bge	r17,r16,101015b0 <__alt_data_end+0xfffe15b0>
101019dc:	18c00404 	addi	r3,r3,16
101019e0:	10800044 	addi	r2,r2,1
101019e4:	45000015 	stw	r20,0(r8)
101019e8:	44400115 	stw	r17,4(r8)
101019ec:	d8c02015 	stw	r3,128(sp)
101019f0:	d8801f15 	stw	r2,124(sp)
101019f4:	b0bff60e 	bge	r22,r2,101019d0 <__alt_data_end+0xfffe19d0>
101019f8:	d9801e04 	addi	r6,sp,120
101019fc:	b80b883a 	mov	r5,r23
10101a00:	9809883a 	mov	r4,r19
10101a04:	01072ec0 	call	101072ec <__sprint_r>
10101a08:	103bad1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101a0c:	d8c02017 	ldw	r3,128(sp)
10101a10:	d8801f17 	ldw	r2,124(sp)
10101a14:	da000404 	addi	r8,sp,16
10101a18:	003fee06 	br	101019d4 <__alt_data_end+0xfffe19d4>
10101a1c:	9088703a 	and	r4,r18,r2
10101a20:	203eab1e 	bne	r4,zero,101014d0 <__alt_data_end+0xfffe14d0>
10101a24:	dc401f17 	ldw	r17,124(sp)
10101a28:	40800115 	stw	r2,4(r8)
10101a2c:	44000015 	stw	r16,0(r8)
10101a30:	8c400044 	addi	r17,r17,1
10101a34:	d8c02015 	stw	r3,128(sp)
10101a38:	dc401f15 	stw	r17,124(sp)
10101a3c:	008001c4 	movi	r2,7
10101a40:	14400e16 	blt	r2,r17,10101a7c <___vfprintf_internal_r+0x15c4>
10101a44:	45800204 	addi	r22,r8,8
10101a48:	003eca06 	br	10101574 <__alt_data_end+0xfffe1574>
10101a4c:	01040474 	movhi	r4,4113
10101a50:	213e2c84 	addi	r4,r4,-1870
10101a54:	d9002b15 	stw	r4,172(sp)
10101a58:	d8802b17 	ldw	r2,172(sp)
10101a5c:	1c07883a 	add	r3,r3,r16
10101a60:	8c400044 	addi	r17,r17,1
10101a64:	b0800015 	stw	r2,0(r22)
10101a68:	b4000115 	stw	r16,4(r22)
10101a6c:	d8c02015 	stw	r3,128(sp)
10101a70:	dc401f15 	stw	r17,124(sp)
10101a74:	008001c4 	movi	r2,7
10101a78:	147ebd0e 	bge	r2,r17,10101570 <__alt_data_end+0xfffe1570>
10101a7c:	d9002c17 	ldw	r4,176(sp)
10101a80:	d9801e04 	addi	r6,sp,120
10101a84:	b80b883a 	mov	r5,r23
10101a88:	01072ec0 	call	101072ec <__sprint_r>
10101a8c:	103b8c1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101a90:	d8c02017 	ldw	r3,128(sp)
10101a94:	dc401f17 	ldw	r17,124(sp)
10101a98:	dd800404 	addi	r22,sp,16
10101a9c:	003eb506 	br	10101574 <__alt_data_end+0xfffe1574>
10101aa0:	d9002c17 	ldw	r4,176(sp)
10101aa4:	d9801e04 	addi	r6,sp,120
10101aa8:	b80b883a 	mov	r5,r23
10101aac:	01072ec0 	call	101072ec <__sprint_r>
10101ab0:	103b831e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101ab4:	d8c02017 	ldw	r3,128(sp)
10101ab8:	dc401f17 	ldw	r17,124(sp)
10101abc:	da000404 	addi	r8,sp,16
10101ac0:	003e8d06 	br	101014f8 <__alt_data_end+0xfffe14f8>
10101ac4:	d9002c17 	ldw	r4,176(sp)
10101ac8:	d9801e04 	addi	r6,sp,120
10101acc:	b80b883a 	mov	r5,r23
10101ad0:	01072ec0 	call	101072ec <__sprint_r>
10101ad4:	103b7a1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101ad8:	d8c02017 	ldw	r3,128(sp)
10101adc:	dc401f17 	ldw	r17,124(sp)
10101ae0:	dd800404 	addi	r22,sp,16
10101ae4:	003e8f06 	br	10101524 <__alt_data_end+0xfffe1524>
10101ae8:	0027883a 	mov	r19,zero
10101aec:	003f4a06 	br	10101818 <__alt_data_end+0xfffe1818>
10101af0:	d9002c17 	ldw	r4,176(sp)
10101af4:	d9801e04 	addi	r6,sp,120
10101af8:	b80b883a 	mov	r5,r23
10101afc:	01072ec0 	call	101072ec <__sprint_r>
10101b00:	103b6f1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101b04:	d8c02017 	ldw	r3,128(sp)
10101b08:	da000404 	addi	r8,sp,16
10101b0c:	003c9d06 	br	10100d84 <__alt_data_end+0xfffe0d84>
10101b10:	04e7c83a 	sub	r19,zero,r19
10101b14:	9804c03a 	cmpne	r2,r19,zero
10101b18:	05adc83a 	sub	r22,zero,r22
10101b1c:	b0adc83a 	sub	r22,r22,r2
10101b20:	d8802917 	ldw	r2,164(sp)
10101b24:	07000b44 	movi	fp,45
10101b28:	df002785 	stb	fp,158(sp)
10101b2c:	10017b16 	blt	r2,zero,1010211c <___vfprintf_internal_r+0x1c64>
10101b30:	00bfdfc4 	movi	r2,-129
10101b34:	90a4703a 	and	r18,r18,r2
10101b38:	003bb106 	br	10100a00 <__alt_data_end+0xfffe0a00>
10101b3c:	d9003617 	ldw	r4,216(sp)
10101b40:	d9403817 	ldw	r5,224(sp)
10101b44:	da003d15 	stw	r8,244(sp)
10101b48:	0106b740 	call	10106b74 <__fpclassifyd>
10101b4c:	da003d17 	ldw	r8,244(sp)
10101b50:	1000f026 	beq	r2,zero,10101f14 <___vfprintf_internal_r+0x1a5c>
10101b54:	d9002917 	ldw	r4,164(sp)
10101b58:	05bff7c4 	movi	r22,-33
10101b5c:	00bfffc4 	movi	r2,-1
10101b60:	8dac703a 	and	r22,r17,r22
10101b64:	20820026 	beq	r4,r2,10102368 <___vfprintf_internal_r+0x1eb0>
10101b68:	008011c4 	movi	r2,71
10101b6c:	b081f726 	beq	r22,r2,1010234c <___vfprintf_internal_r+0x1e94>
10101b70:	d9003817 	ldw	r4,224(sp)
10101b74:	90c04014 	ori	r3,r18,256
10101b78:	d8c02b15 	stw	r3,172(sp)
10101b7c:	20021516 	blt	r4,zero,101023d4 <___vfprintf_internal_r+0x1f1c>
10101b80:	dcc03817 	ldw	r19,224(sp)
10101b84:	d8002a05 	stb	zero,168(sp)
10101b88:	00801984 	movi	r2,102
10101b8c:	8881f926 	beq	r17,r2,10102374 <___vfprintf_internal_r+0x1ebc>
10101b90:	00801184 	movi	r2,70
10101b94:	88821c26 	beq	r17,r2,10102408 <___vfprintf_internal_r+0x1f50>
10101b98:	00801144 	movi	r2,69
10101b9c:	b081ef26 	beq	r22,r2,1010235c <___vfprintf_internal_r+0x1ea4>
10101ba0:	d8c02917 	ldw	r3,164(sp)
10101ba4:	d8802104 	addi	r2,sp,132
10101ba8:	d8800315 	stw	r2,12(sp)
10101bac:	d9403617 	ldw	r5,216(sp)
10101bb0:	d8802504 	addi	r2,sp,148
10101bb4:	d9002c17 	ldw	r4,176(sp)
10101bb8:	d8800215 	stw	r2,8(sp)
10101bbc:	d8802604 	addi	r2,sp,152
10101bc0:	d8c00015 	stw	r3,0(sp)
10101bc4:	d8800115 	stw	r2,4(sp)
10101bc8:	01c00084 	movi	r7,2
10101bcc:	980d883a 	mov	r6,r19
10101bd0:	d8c03c15 	stw	r3,240(sp)
10101bd4:	da003d15 	stw	r8,244(sp)
10101bd8:	0102af40 	call	10102af4 <_dtoa_r>
10101bdc:	1021883a 	mov	r16,r2
10101be0:	008019c4 	movi	r2,103
10101be4:	d8c03c17 	ldw	r3,240(sp)
10101be8:	da003d17 	ldw	r8,244(sp)
10101bec:	88817126 	beq	r17,r2,101021b4 <___vfprintf_internal_r+0x1cfc>
10101bf0:	008011c4 	movi	r2,71
10101bf4:	88829226 	beq	r17,r2,10102640 <___vfprintf_internal_r+0x2188>
10101bf8:	80f9883a 	add	fp,r16,r3
10101bfc:	d9003617 	ldw	r4,216(sp)
10101c00:	000d883a 	mov	r6,zero
10101c04:	000f883a 	mov	r7,zero
10101c08:	980b883a 	mov	r5,r19
10101c0c:	da003d15 	stw	r8,244(sp)
10101c10:	010bae00 	call	1010bae0 <__eqdf2>
10101c14:	da003d17 	ldw	r8,244(sp)
10101c18:	10018d26 	beq	r2,zero,10102250 <___vfprintf_internal_r+0x1d98>
10101c1c:	d8802117 	ldw	r2,132(sp)
10101c20:	1700062e 	bgeu	r2,fp,10101c3c <___vfprintf_internal_r+0x1784>
10101c24:	01000c04 	movi	r4,48
10101c28:	10c00044 	addi	r3,r2,1
10101c2c:	d8c02115 	stw	r3,132(sp)
10101c30:	11000005 	stb	r4,0(r2)
10101c34:	d8802117 	ldw	r2,132(sp)
10101c38:	173ffb36 	bltu	r2,fp,10101c28 <__alt_data_end+0xfffe1c28>
10101c3c:	1405c83a 	sub	r2,r2,r16
10101c40:	d8803315 	stw	r2,204(sp)
10101c44:	008011c4 	movi	r2,71
10101c48:	b0817626 	beq	r22,r2,10102224 <___vfprintf_internal_r+0x1d6c>
10101c4c:	00801944 	movi	r2,101
10101c50:	1442810e 	bge	r2,r17,10102658 <___vfprintf_internal_r+0x21a0>
10101c54:	d8c02617 	ldw	r3,152(sp)
10101c58:	00801984 	movi	r2,102
10101c5c:	d8c03215 	stw	r3,200(sp)
10101c60:	8881fe26 	beq	r17,r2,1010245c <___vfprintf_internal_r+0x1fa4>
10101c64:	d8c03217 	ldw	r3,200(sp)
10101c68:	d9003317 	ldw	r4,204(sp)
10101c6c:	1901dd16 	blt	r3,r4,101023e4 <___vfprintf_internal_r+0x1f2c>
10101c70:	9480004c 	andi	r18,r18,1
10101c74:	90022b1e 	bne	r18,zero,10102524 <___vfprintf_internal_r+0x206c>
10101c78:	1805883a 	mov	r2,r3
10101c7c:	18028016 	blt	r3,zero,10102680 <___vfprintf_internal_r+0x21c8>
10101c80:	d8c03217 	ldw	r3,200(sp)
10101c84:	044019c4 	movi	r17,103
10101c88:	d8c02e15 	stw	r3,184(sp)
10101c8c:	df002a07 	ldb	fp,168(sp)
10101c90:	e001531e 	bne	fp,zero,101021e0 <___vfprintf_internal_r+0x1d28>
10101c94:	df002783 	ldbu	fp,158(sp)
10101c98:	d8802a15 	stw	r2,168(sp)
10101c9c:	dc802b17 	ldw	r18,172(sp)
10101ca0:	d8002915 	stw	zero,164(sp)
10101ca4:	003bd106 	br	10100bec <__alt_data_end+0xfffe0bec>
10101ca8:	d8802d17 	ldw	r2,180(sp)
10101cac:	d8c02d17 	ldw	r3,180(sp)
10101cb0:	d9002d17 	ldw	r4,180(sp)
10101cb4:	10800017 	ldw	r2,0(r2)
10101cb8:	18c00117 	ldw	r3,4(r3)
10101cbc:	21000204 	addi	r4,r4,8
10101cc0:	d8803615 	stw	r2,216(sp)
10101cc4:	d8c03815 	stw	r3,224(sp)
10101cc8:	d9002d15 	stw	r4,180(sp)
10101ccc:	003b7506 	br	10100aa4 <__alt_data_end+0xfffe0aa4>
10101cd0:	ac400007 	ldb	r17,0(r21)
10101cd4:	003a5906 	br	1010063c <__alt_data_end+0xfffe063c>
10101cd8:	9080100c 	andi	r2,r18,64
10101cdc:	1000a826 	beq	r2,zero,10101f80 <___vfprintf_internal_r+0x1ac8>
10101ce0:	d9002d17 	ldw	r4,180(sp)
10101ce4:	002d883a 	mov	r22,zero
10101ce8:	24c0000b 	ldhu	r19,0(r4)
10101cec:	21000104 	addi	r4,r4,4
10101cf0:	d9002d15 	stw	r4,180(sp)
10101cf4:	003ccb06 	br	10101024 <__alt_data_end+0xfffe1024>
10101cf8:	d8c02d17 	ldw	r3,180(sp)
10101cfc:	d9002917 	ldw	r4,164(sp)
10101d00:	002d883a 	mov	r22,zero
10101d04:	18800104 	addi	r2,r3,4
10101d08:	1cc00017 	ldw	r19,0(r3)
10101d0c:	203ebb0e 	bge	r4,zero,101017fc <__alt_data_end+0xfffe17fc>
10101d10:	003ef106 	br	101018d8 <__alt_data_end+0xfffe18d8>
10101d14:	9080040c 	andi	r2,r18,16
10101d18:	1000921e 	bne	r2,zero,10101f64 <___vfprintf_internal_r+0x1aac>
10101d1c:	9480100c 	andi	r18,r18,64
10101d20:	90013926 	beq	r18,zero,10102208 <___vfprintf_internal_r+0x1d50>
10101d24:	d9002d17 	ldw	r4,180(sp)
10101d28:	d9402f17 	ldw	r5,188(sp)
10101d2c:	20800017 	ldw	r2,0(r4)
10101d30:	21000104 	addi	r4,r4,4
10101d34:	d9002d15 	stw	r4,180(sp)
10101d38:	1140000d 	sth	r5,0(r2)
10101d3c:	003a1606 	br	10100598 <__alt_data_end+0xfffe0598>
10101d40:	9080100c 	andi	r2,r18,64
10101d44:	10008026 	beq	r2,zero,10101f48 <___vfprintf_internal_r+0x1a90>
10101d48:	d8c02d17 	ldw	r3,180(sp)
10101d4c:	1cc0000f 	ldh	r19,0(r3)
10101d50:	18c00104 	addi	r3,r3,4
10101d54:	d8c02d15 	stw	r3,180(sp)
10101d58:	982dd7fa 	srai	r22,r19,31
10101d5c:	b005883a 	mov	r2,r22
10101d60:	003b1f06 	br	101009e0 <__alt_data_end+0xfffe09e0>
10101d64:	9080100c 	andi	r2,r18,64
10101d68:	d8002785 	stb	zero,158(sp)
10101d6c:	10008a1e 	bne	r2,zero,10101f98 <___vfprintf_internal_r+0x1ae0>
10101d70:	d9402d17 	ldw	r5,180(sp)
10101d74:	d8c02917 	ldw	r3,164(sp)
10101d78:	002d883a 	mov	r22,zero
10101d7c:	28800104 	addi	r2,r5,4
10101d80:	2cc00017 	ldw	r19,0(r5)
10101d84:	183e4b0e 	bge	r3,zero,101016b4 <__alt_data_end+0xfffe16b4>
10101d88:	9d86b03a 	or	r3,r19,r22
10101d8c:	d8802d15 	stw	r2,180(sp)
10101d90:	183e4c1e 	bne	r3,zero,101016c4 <__alt_data_end+0xfffe16c4>
10101d94:	0039883a 	mov	fp,zero
10101d98:	0005883a 	mov	r2,zero
10101d9c:	003d4006 	br	101012a0 <__alt_data_end+0xfffe12a0>
10101da0:	01440474 	movhi	r5,4113
10101da4:	297e2c84 	addi	r5,r5,-1870
10101da8:	d9402b15 	stw	r5,172(sp)
10101dac:	d9402b17 	ldw	r5,172(sp)
10101db0:	1c47883a 	add	r3,r3,r17
10101db4:	10800044 	addi	r2,r2,1
10101db8:	41400015 	stw	r5,0(r8)
10101dbc:	44400115 	stw	r17,4(r8)
10101dc0:	d8c02015 	stw	r3,128(sp)
10101dc4:	d8801f15 	stw	r2,124(sp)
10101dc8:	010001c4 	movi	r4,7
10101dcc:	20bec816 	blt	r4,r2,101018f0 <__alt_data_end+0xfffe18f0>
10101dd0:	42000204 	addi	r8,r8,8
10101dd4:	003ecd06 	br	1010190c <__alt_data_end+0xfffe190c>
10101dd8:	d9002917 	ldw	r4,164(sp)
10101ddc:	d8002785 	stb	zero,158(sp)
10101de0:	203d2d16 	blt	r4,zero,10101298 <__alt_data_end+0xfffe1298>
10101de4:	00bfdfc4 	movi	r2,-129
10101de8:	90a4703a 	and	r18,r18,r2
10101dec:	003a9106 	br	10100834 <__alt_data_end+0xfffe0834>
10101df0:	01040474 	movhi	r4,4113
10101df4:	213e2c84 	addi	r4,r4,-1870
10101df8:	d9002b15 	stw	r4,172(sp)
10101dfc:	003c0c06 	br	10100e30 <__alt_data_end+0xfffe0e30>
10101e00:	d9002c17 	ldw	r4,176(sp)
10101e04:	d9801e04 	addi	r6,sp,120
10101e08:	b80b883a 	mov	r5,r23
10101e0c:	01072ec0 	call	101072ec <__sprint_r>
10101e10:	103aab1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101e14:	d8c02017 	ldw	r3,128(sp)
10101e18:	da000404 	addi	r8,sp,16
10101e1c:	003d4106 	br	10101324 <__alt_data_end+0xfffe1324>
10101e20:	d8801f17 	ldw	r2,124(sp)
10101e24:	01440474 	movhi	r5,4113
10101e28:	01000044 	movi	r4,1
10101e2c:	18c00044 	addi	r3,r3,1
10101e30:	10800044 	addi	r2,r2,1
10101e34:	297e2c04 	addi	r5,r5,-1872
10101e38:	41000115 	stw	r4,4(r8)
10101e3c:	41400015 	stw	r5,0(r8)
10101e40:	d8c02015 	stw	r3,128(sp)
10101e44:	d8801f15 	stw	r2,124(sp)
10101e48:	010001c4 	movi	r4,7
10101e4c:	20805c16 	blt	r4,r2,10101fc0 <___vfprintf_internal_r+0x1b08>
10101e50:	42000204 	addi	r8,r8,8
10101e54:	8800041e 	bne	r17,zero,10101e68 <___vfprintf_internal_r+0x19b0>
10101e58:	d8803317 	ldw	r2,204(sp)
10101e5c:	1000021e 	bne	r2,zero,10101e68 <___vfprintf_internal_r+0x19b0>
10101e60:	9080004c 	andi	r2,r18,1
10101e64:	103c0926 	beq	r2,zero,10100e8c <__alt_data_end+0xfffe0e8c>
10101e68:	d9003717 	ldw	r4,220(sp)
10101e6c:	d8801f17 	ldw	r2,124(sp)
10101e70:	d9403417 	ldw	r5,208(sp)
10101e74:	20c7883a 	add	r3,r4,r3
10101e78:	10800044 	addi	r2,r2,1
10101e7c:	41000115 	stw	r4,4(r8)
10101e80:	41400015 	stw	r5,0(r8)
10101e84:	d8c02015 	stw	r3,128(sp)
10101e88:	d8801f15 	stw	r2,124(sp)
10101e8c:	010001c4 	movi	r4,7
10101e90:	20812116 	blt	r4,r2,10102318 <___vfprintf_internal_r+0x1e60>
10101e94:	42000204 	addi	r8,r8,8
10101e98:	0463c83a 	sub	r17,zero,r17
10101e9c:	0440730e 	bge	zero,r17,1010206c <___vfprintf_internal_r+0x1bb4>
10101ea0:	05800404 	movi	r22,16
10101ea4:	b440860e 	bge	r22,r17,101020c0 <___vfprintf_internal_r+0x1c08>
10101ea8:	01440474 	movhi	r5,4113
10101eac:	297e2c84 	addi	r5,r5,-1870
10101eb0:	d9402b15 	stw	r5,172(sp)
10101eb4:	070001c4 	movi	fp,7
10101eb8:	dcc02c17 	ldw	r19,176(sp)
10101ebc:	00000306 	br	10101ecc <___vfprintf_internal_r+0x1a14>
10101ec0:	42000204 	addi	r8,r8,8
10101ec4:	8c7ffc04 	addi	r17,r17,-16
10101ec8:	b440800e 	bge	r22,r17,101020cc <___vfprintf_internal_r+0x1c14>
10101ecc:	18c00404 	addi	r3,r3,16
10101ed0:	10800044 	addi	r2,r2,1
10101ed4:	45000015 	stw	r20,0(r8)
10101ed8:	45800115 	stw	r22,4(r8)
10101edc:	d8c02015 	stw	r3,128(sp)
10101ee0:	d8801f15 	stw	r2,124(sp)
10101ee4:	e0bff60e 	bge	fp,r2,10101ec0 <__alt_data_end+0xfffe1ec0>
10101ee8:	d9801e04 	addi	r6,sp,120
10101eec:	b80b883a 	mov	r5,r23
10101ef0:	9809883a 	mov	r4,r19
10101ef4:	01072ec0 	call	101072ec <__sprint_r>
10101ef8:	103a711e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101efc:	d8c02017 	ldw	r3,128(sp)
10101f00:	d8801f17 	ldw	r2,124(sp)
10101f04:	da000404 	addi	r8,sp,16
10101f08:	003fee06 	br	10101ec4 <__alt_data_end+0xfffe1ec4>
10101f0c:	00bfffc4 	movi	r2,-1
10101f10:	003a6f06 	br	101008d0 <__alt_data_end+0xfffe08d0>
10101f14:	008011c4 	movi	r2,71
10101f18:	1440b816 	blt	r2,r17,101021fc <___vfprintf_internal_r+0x1d44>
10101f1c:	04040474 	movhi	r16,4113
10101f20:	843e1e04 	addi	r16,r16,-1928
10101f24:	00c000c4 	movi	r3,3
10101f28:	00bfdfc4 	movi	r2,-129
10101f2c:	d8c02a15 	stw	r3,168(sp)
10101f30:	90a4703a 	and	r18,r18,r2
10101f34:	df002783 	ldbu	fp,158(sp)
10101f38:	d8c02e15 	stw	r3,184(sp)
10101f3c:	d8002915 	stw	zero,164(sp)
10101f40:	d8003215 	stw	zero,200(sp)
10101f44:	003b2906 	br	10100bec <__alt_data_end+0xfffe0bec>
10101f48:	d9002d17 	ldw	r4,180(sp)
10101f4c:	24c00017 	ldw	r19,0(r4)
10101f50:	21000104 	addi	r4,r4,4
10101f54:	d9002d15 	stw	r4,180(sp)
10101f58:	982dd7fa 	srai	r22,r19,31
10101f5c:	b005883a 	mov	r2,r22
10101f60:	003a9f06 	br	101009e0 <__alt_data_end+0xfffe09e0>
10101f64:	d9402d17 	ldw	r5,180(sp)
10101f68:	d8c02f17 	ldw	r3,188(sp)
10101f6c:	28800017 	ldw	r2,0(r5)
10101f70:	29400104 	addi	r5,r5,4
10101f74:	d9402d15 	stw	r5,180(sp)
10101f78:	10c00015 	stw	r3,0(r2)
10101f7c:	00398606 	br	10100598 <__alt_data_end+0xfffe0598>
10101f80:	d9402d17 	ldw	r5,180(sp)
10101f84:	002d883a 	mov	r22,zero
10101f88:	2cc00017 	ldw	r19,0(r5)
10101f8c:	29400104 	addi	r5,r5,4
10101f90:	d9402d15 	stw	r5,180(sp)
10101f94:	003c2306 	br	10101024 <__alt_data_end+0xfffe1024>
10101f98:	d8c02d17 	ldw	r3,180(sp)
10101f9c:	d9002917 	ldw	r4,164(sp)
10101fa0:	002d883a 	mov	r22,zero
10101fa4:	18800104 	addi	r2,r3,4
10101fa8:	1cc0000b 	ldhu	r19,0(r3)
10101fac:	203dc10e 	bge	r4,zero,101016b4 <__alt_data_end+0xfffe16b4>
10101fb0:	003f7506 	br	10101d88 <__alt_data_end+0xfffe1d88>
10101fb4:	04040474 	movhi	r16,4113
10101fb8:	843e1c04 	addi	r16,r16,-1936
10101fbc:	003acc06 	br	10100af0 <__alt_data_end+0xfffe0af0>
10101fc0:	d9002c17 	ldw	r4,176(sp)
10101fc4:	d9801e04 	addi	r6,sp,120
10101fc8:	b80b883a 	mov	r5,r23
10101fcc:	01072ec0 	call	101072ec <__sprint_r>
10101fd0:	103a3b1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10101fd4:	dc402617 	ldw	r17,152(sp)
10101fd8:	d8c02017 	ldw	r3,128(sp)
10101fdc:	da000404 	addi	r8,sp,16
10101fe0:	003f9c06 	br	10101e54 <__alt_data_end+0xfffe1e54>
10101fe4:	ac400043 	ldbu	r17,1(r21)
10101fe8:	94800814 	ori	r18,r18,32
10101fec:	ad400044 	addi	r21,r21,1
10101ff0:	8c403fcc 	andi	r17,r17,255
10101ff4:	8c40201c 	xori	r17,r17,128
10101ff8:	8c7fe004 	addi	r17,r17,-128
10101ffc:	00398f06 	br	1010063c <__alt_data_end+0xfffe063c>
10102000:	d8c02d15 	stw	r3,180(sp)
10102004:	0039883a 	mov	fp,zero
10102008:	003e3506 	br	101018e0 <__alt_data_end+0xfffe18e0>
1010200c:	d9002c17 	ldw	r4,176(sp)
10102010:	d9801e04 	addi	r6,sp,120
10102014:	b80b883a 	mov	r5,r23
10102018:	01072ec0 	call	101072ec <__sprint_r>
1010201c:	103a281e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10102020:	d8c02017 	ldw	r3,128(sp)
10102024:	da000404 	addi	r8,sp,16
10102028:	003cd006 	br	1010136c <__alt_data_end+0xfffe136c>
1010202c:	8009883a 	mov	r4,r16
10102030:	da003d15 	stw	r8,244(sp)
10102034:	01071580 	call	10107158 <strlen>
10102038:	d8802e15 	stw	r2,184(sp)
1010203c:	da003d17 	ldw	r8,244(sp)
10102040:	103c340e 	bge	r2,zero,10101114 <__alt_data_end+0xfffe1114>
10102044:	0005883a 	mov	r2,zero
10102048:	003c3206 	br	10101114 <__alt_data_end+0xfffe1114>
1010204c:	d9002c17 	ldw	r4,176(sp)
10102050:	d9801e04 	addi	r6,sp,120
10102054:	b80b883a 	mov	r5,r23
10102058:	01072ec0 	call	101072ec <__sprint_r>
1010205c:	103a181e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
10102060:	d8c02017 	ldw	r3,128(sp)
10102064:	d8801f17 	ldw	r2,124(sp)
10102068:	da000404 	addi	r8,sp,16
1010206c:	d9403317 	ldw	r5,204(sp)
10102070:	10800044 	addi	r2,r2,1
10102074:	44000015 	stw	r16,0(r8)
10102078:	28c7883a 	add	r3,r5,r3
1010207c:	003b7d06 	br	10100e74 <__alt_data_end+0xfffe0e74>
10102080:	01040474 	movhi	r4,4113
10102084:	213e3084 	addi	r4,r4,-1854
10102088:	d9003515 	stw	r4,212(sp)
1010208c:	003b1406 	br	10100ce0 <__alt_data_end+0xfffe0ce0>
10102090:	013fffc4 	movi	r4,-1
10102094:	003a3506 	br	1010096c <__alt_data_end+0xfffe096c>
10102098:	0023883a 	mov	r17,zero
1010209c:	003d9d06 	br	10101714 <__alt_data_end+0xfffe1714>
101020a0:	d9002c17 	ldw	r4,176(sp)
101020a4:	d9801e04 	addi	r6,sp,120
101020a8:	b80b883a 	mov	r5,r23
101020ac:	01072ec0 	call	101072ec <__sprint_r>
101020b0:	103a031e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
101020b4:	d8c02017 	ldw	r3,128(sp)
101020b8:	da000404 	addi	r8,sp,16
101020bc:	003d9406 	br	10101710 <__alt_data_end+0xfffe1710>
101020c0:	01040474 	movhi	r4,4113
101020c4:	213e2c84 	addi	r4,r4,-1870
101020c8:	d9002b15 	stw	r4,172(sp)
101020cc:	d9002b17 	ldw	r4,172(sp)
101020d0:	1c47883a 	add	r3,r3,r17
101020d4:	10800044 	addi	r2,r2,1
101020d8:	41000015 	stw	r4,0(r8)
101020dc:	44400115 	stw	r17,4(r8)
101020e0:	d8c02015 	stw	r3,128(sp)
101020e4:	d8801f15 	stw	r2,124(sp)
101020e8:	010001c4 	movi	r4,7
101020ec:	20bfd716 	blt	r4,r2,1010204c <__alt_data_end+0xfffe204c>
101020f0:	42000204 	addi	r8,r8,8
101020f4:	003fdd06 	br	1010206c <__alt_data_end+0xfffe206c>
101020f8:	d9002c17 	ldw	r4,176(sp)
101020fc:	d9801e04 	addi	r6,sp,120
10102100:	b80b883a 	mov	r5,r23
10102104:	01072ec0 	call	101072ec <__sprint_r>
10102108:	1039ed1e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
1010210c:	d8802617 	ldw	r2,152(sp)
10102110:	d8c02017 	ldw	r3,128(sp)
10102114:	da000404 	addi	r8,sp,16
10102118:	003e1006 	br	1010195c <__alt_data_end+0xfffe195c>
1010211c:	00800044 	movi	r2,1
10102120:	10803fcc 	andi	r2,r2,255
10102124:	00c00044 	movi	r3,1
10102128:	10fa3526 	beq	r2,r3,10100a00 <__alt_data_end+0xfffe0a00>
1010212c:	00c00084 	movi	r3,2
10102130:	10fbcb26 	beq	r2,r3,10101060 <__alt_data_end+0xfffe1060>
10102134:	003a8f06 	br	10100b74 <__alt_data_end+0xfffe0b74>
10102138:	01040474 	movhi	r4,4113
1010213c:	213e3084 	addi	r4,r4,-1854
10102140:	d9003515 	stw	r4,212(sp)
10102144:	003b7606 	br	10100f20 <__alt_data_end+0xfffe0f20>
10102148:	d8802917 	ldw	r2,164(sp)
1010214c:	00c00184 	movi	r3,6
10102150:	1880012e 	bgeu	r3,r2,10102158 <___vfprintf_internal_r+0x1ca0>
10102154:	1805883a 	mov	r2,r3
10102158:	d8802e15 	stw	r2,184(sp)
1010215c:	1000ef16 	blt	r2,zero,1010251c <___vfprintf_internal_r+0x2064>
10102160:	04040474 	movhi	r16,4113
10102164:	d8802a15 	stw	r2,168(sp)
10102168:	dcc02d15 	stw	r19,180(sp)
1010216c:	d8002915 	stw	zero,164(sp)
10102170:	d8003215 	stw	zero,200(sp)
10102174:	843e2a04 	addi	r16,r16,-1880
10102178:	0039883a 	mov	fp,zero
1010217c:	003aa206 	br	10100c08 <__alt_data_end+0xfffe0c08>
10102180:	0021883a 	mov	r16,zero
10102184:	003e0706 	br	101019a4 <__alt_data_end+0xfffe19a4>
10102188:	d9002c17 	ldw	r4,176(sp)
1010218c:	d9801e04 	addi	r6,sp,120
10102190:	b80b883a 	mov	r5,r23
10102194:	01072ec0 	call	101072ec <__sprint_r>
10102198:	1039c91e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
1010219c:	d8802617 	ldw	r2,152(sp)
101021a0:	d9403317 	ldw	r5,204(sp)
101021a4:	d8c02017 	ldw	r3,128(sp)
101021a8:	da000404 	addi	r8,sp,16
101021ac:	2885c83a 	sub	r2,r5,r2
101021b0:	003dfb06 	br	101019a0 <__alt_data_end+0xfffe19a0>
101021b4:	9080004c 	andi	r2,r18,1
101021b8:	103e8f1e 	bne	r2,zero,10101bf8 <__alt_data_end+0xfffe1bf8>
101021bc:	d8802117 	ldw	r2,132(sp)
101021c0:	003e9e06 	br	10101c3c <__alt_data_end+0xfffe1c3c>
101021c4:	1025883a 	mov	r18,r2
101021c8:	0039883a 	mov	fp,zero
101021cc:	00800084 	movi	r2,2
101021d0:	003fd306 	br	10102120 <__alt_data_end+0xfffe2120>
101021d4:	07000b44 	movi	fp,45
101021d8:	df002785 	stb	fp,158(sp)
101021dc:	003a4006 	br	10100ae0 <__alt_data_end+0xfffe0ae0>
101021e0:	00c00b44 	movi	r3,45
101021e4:	d8c02785 	stb	r3,158(sp)
101021e8:	d8802a15 	stw	r2,168(sp)
101021ec:	dc802b17 	ldw	r18,172(sp)
101021f0:	d8002915 	stw	zero,164(sp)
101021f4:	07000b44 	movi	fp,45
101021f8:	003a8006 	br	10100bfc <__alt_data_end+0xfffe0bfc>
101021fc:	04040474 	movhi	r16,4113
10102200:	843e1f04 	addi	r16,r16,-1924
10102204:	003f4706 	br	10101f24 <__alt_data_end+0xfffe1f24>
10102208:	d8c02d17 	ldw	r3,180(sp)
1010220c:	d9002f17 	ldw	r4,188(sp)
10102210:	18800017 	ldw	r2,0(r3)
10102214:	18c00104 	addi	r3,r3,4
10102218:	d8c02d15 	stw	r3,180(sp)
1010221c:	11000015 	stw	r4,0(r2)
10102220:	0038dd06 	br	10100598 <__alt_data_end+0xfffe0598>
10102224:	dd802617 	ldw	r22,152(sp)
10102228:	00bfff44 	movi	r2,-3
1010222c:	b0801c16 	blt	r22,r2,101022a0 <___vfprintf_internal_r+0x1de8>
10102230:	d9402917 	ldw	r5,164(sp)
10102234:	2d801a16 	blt	r5,r22,101022a0 <___vfprintf_internal_r+0x1de8>
10102238:	dd803215 	stw	r22,200(sp)
1010223c:	003e8906 	br	10101c64 <__alt_data_end+0xfffe1c64>
10102240:	01040474 	movhi	r4,4113
10102244:	213e2c84 	addi	r4,r4,-1870
10102248:	d9002b15 	stw	r4,172(sp)
1010224c:	003c9106 	br	10101494 <__alt_data_end+0xfffe1494>
10102250:	e005883a 	mov	r2,fp
10102254:	003e7906 	br	10101c3c <__alt_data_end+0xfffe1c3c>
10102258:	d9402917 	ldw	r5,164(sp)
1010225c:	df002783 	ldbu	fp,158(sp)
10102260:	dcc02d15 	stw	r19,180(sp)
10102264:	d9402a15 	stw	r5,168(sp)
10102268:	d9402e15 	stw	r5,184(sp)
1010226c:	d8002915 	stw	zero,164(sp)
10102270:	d8003215 	stw	zero,200(sp)
10102274:	003a5d06 	br	10100bec <__alt_data_end+0xfffe0bec>
10102278:	9080004c 	andi	r2,r18,1
1010227c:	0039883a 	mov	fp,zero
10102280:	10000426 	beq	r2,zero,10102294 <___vfprintf_internal_r+0x1ddc>
10102284:	00800c04 	movi	r2,48
10102288:	dc001dc4 	addi	r16,sp,119
1010228c:	d8801dc5 	stb	r2,119(sp)
10102290:	003b8006 	br	10101094 <__alt_data_end+0xfffe1094>
10102294:	d8002e15 	stw	zero,184(sp)
10102298:	dc001e04 	addi	r16,sp,120
1010229c:	003a4d06 	br	10100bd4 <__alt_data_end+0xfffe0bd4>
101022a0:	8c7fff84 	addi	r17,r17,-2
101022a4:	b5bfffc4 	addi	r22,r22,-1
101022a8:	dd802615 	stw	r22,152(sp)
101022ac:	dc4022c5 	stb	r17,139(sp)
101022b0:	b000bf16 	blt	r22,zero,101025b0 <___vfprintf_internal_r+0x20f8>
101022b4:	00800ac4 	movi	r2,43
101022b8:	d8802305 	stb	r2,140(sp)
101022bc:	00800244 	movi	r2,9
101022c0:	15807016 	blt	r2,r22,10102484 <___vfprintf_internal_r+0x1fcc>
101022c4:	00800c04 	movi	r2,48
101022c8:	b5800c04 	addi	r22,r22,48
101022cc:	d8802345 	stb	r2,141(sp)
101022d0:	dd802385 	stb	r22,142(sp)
101022d4:	d88023c4 	addi	r2,sp,143
101022d8:	df0022c4 	addi	fp,sp,139
101022dc:	d8c03317 	ldw	r3,204(sp)
101022e0:	1739c83a 	sub	fp,r2,fp
101022e4:	d9003317 	ldw	r4,204(sp)
101022e8:	e0c7883a 	add	r3,fp,r3
101022ec:	df003a15 	stw	fp,232(sp)
101022f0:	d8c02e15 	stw	r3,184(sp)
101022f4:	00800044 	movi	r2,1
101022f8:	1100b30e 	bge	r2,r4,101025c8 <___vfprintf_internal_r+0x2110>
101022fc:	d8c02e17 	ldw	r3,184(sp)
10102300:	18c00044 	addi	r3,r3,1
10102304:	d8c02e15 	stw	r3,184(sp)
10102308:	1805883a 	mov	r2,r3
1010230c:	1800ac16 	blt	r3,zero,101025c0 <___vfprintf_internal_r+0x2108>
10102310:	d8003215 	stw	zero,200(sp)
10102314:	003e5d06 	br	10101c8c <__alt_data_end+0xfffe1c8c>
10102318:	d9002c17 	ldw	r4,176(sp)
1010231c:	d9801e04 	addi	r6,sp,120
10102320:	b80b883a 	mov	r5,r23
10102324:	01072ec0 	call	101072ec <__sprint_r>
10102328:	1039651e 	bne	r2,zero,101008c0 <__alt_data_end+0xfffe08c0>
1010232c:	dc402617 	ldw	r17,152(sp)
10102330:	d8c02017 	ldw	r3,128(sp)
10102334:	d8801f17 	ldw	r2,124(sp)
10102338:	da000404 	addi	r8,sp,16
1010233c:	003ed606 	br	10101e98 <__alt_data_end+0xfffe1e98>
10102340:	582b883a 	mov	r21,r11
10102344:	d8002915 	stw	zero,164(sp)
10102348:	0038bd06 	br	10100640 <__alt_data_end+0xfffe0640>
1010234c:	d8802917 	ldw	r2,164(sp)
10102350:	103e071e 	bne	r2,zero,10101b70 <__alt_data_end+0xfffe1b70>
10102354:	dc002915 	stw	r16,164(sp)
10102358:	003e0506 	br	10101b70 <__alt_data_end+0xfffe1b70>
1010235c:	d9002917 	ldw	r4,164(sp)
10102360:	20c00044 	addi	r3,r4,1
10102364:	003e0f06 	br	10101ba4 <__alt_data_end+0xfffe1ba4>
10102368:	01400184 	movi	r5,6
1010236c:	d9402915 	stw	r5,164(sp)
10102370:	003dff06 	br	10101b70 <__alt_data_end+0xfffe1b70>
10102374:	d8802104 	addi	r2,sp,132
10102378:	d8800315 	stw	r2,12(sp)
1010237c:	d8802504 	addi	r2,sp,148
10102380:	d8800215 	stw	r2,8(sp)
10102384:	d8802604 	addi	r2,sp,152
10102388:	d8800115 	stw	r2,4(sp)
1010238c:	d8802917 	ldw	r2,164(sp)
10102390:	d9403617 	ldw	r5,216(sp)
10102394:	d9002c17 	ldw	r4,176(sp)
10102398:	d8800015 	stw	r2,0(sp)
1010239c:	01c000c4 	movi	r7,3
101023a0:	980d883a 	mov	r6,r19
101023a4:	da003d15 	stw	r8,244(sp)
101023a8:	0102af40 	call	10102af4 <_dtoa_r>
101023ac:	d8c02917 	ldw	r3,164(sp)
101023b0:	da003d17 	ldw	r8,244(sp)
101023b4:	1021883a 	mov	r16,r2
101023b8:	10f9883a 	add	fp,r2,r3
101023bc:	81000007 	ldb	r4,0(r16)
101023c0:	00800c04 	movi	r2,48
101023c4:	20805e26 	beq	r4,r2,10102540 <___vfprintf_internal_r+0x2088>
101023c8:	d8c02617 	ldw	r3,152(sp)
101023cc:	e0f9883a 	add	fp,fp,r3
101023d0:	003e0a06 	br	10101bfc <__alt_data_end+0xfffe1bfc>
101023d4:	00c00b44 	movi	r3,45
101023d8:	24e0003c 	xorhi	r19,r4,32768
101023dc:	d8c02a05 	stb	r3,168(sp)
101023e0:	003de906 	br	10101b88 <__alt_data_end+0xfffe1b88>
101023e4:	d8c03217 	ldw	r3,200(sp)
101023e8:	00c07a0e 	bge	zero,r3,101025d4 <___vfprintf_internal_r+0x211c>
101023ec:	00800044 	movi	r2,1
101023f0:	d9003317 	ldw	r4,204(sp)
101023f4:	1105883a 	add	r2,r2,r4
101023f8:	d8802e15 	stw	r2,184(sp)
101023fc:	10004e16 	blt	r2,zero,10102538 <___vfprintf_internal_r+0x2080>
10102400:	044019c4 	movi	r17,103
10102404:	003e2106 	br	10101c8c <__alt_data_end+0xfffe1c8c>
10102408:	d9002917 	ldw	r4,164(sp)
1010240c:	d8802104 	addi	r2,sp,132
10102410:	d8800315 	stw	r2,12(sp)
10102414:	d9000015 	stw	r4,0(sp)
10102418:	d8802504 	addi	r2,sp,148
1010241c:	d9403617 	ldw	r5,216(sp)
10102420:	d9002c17 	ldw	r4,176(sp)
10102424:	d8800215 	stw	r2,8(sp)
10102428:	d8802604 	addi	r2,sp,152
1010242c:	d8800115 	stw	r2,4(sp)
10102430:	01c000c4 	movi	r7,3
10102434:	980d883a 	mov	r6,r19
10102438:	da003d15 	stw	r8,244(sp)
1010243c:	0102af40 	call	10102af4 <_dtoa_r>
10102440:	d8c02917 	ldw	r3,164(sp)
10102444:	da003d17 	ldw	r8,244(sp)
10102448:	1021883a 	mov	r16,r2
1010244c:	00801184 	movi	r2,70
10102450:	80f9883a 	add	fp,r16,r3
10102454:	88bfd926 	beq	r17,r2,101023bc <__alt_data_end+0xfffe23bc>
10102458:	003de806 	br	10101bfc <__alt_data_end+0xfffe1bfc>
1010245c:	d9002917 	ldw	r4,164(sp)
10102460:	00c04d0e 	bge	zero,r3,10102598 <___vfprintf_internal_r+0x20e0>
10102464:	2000441e 	bne	r4,zero,10102578 <___vfprintf_internal_r+0x20c0>
10102468:	9480004c 	andi	r18,r18,1
1010246c:	9000421e 	bne	r18,zero,10102578 <___vfprintf_internal_r+0x20c0>
10102470:	1805883a 	mov	r2,r3
10102474:	18007016 	blt	r3,zero,10102638 <___vfprintf_internal_r+0x2180>
10102478:	d8c03217 	ldw	r3,200(sp)
1010247c:	d8c02e15 	stw	r3,184(sp)
10102480:	003e0206 	br	10101c8c <__alt_data_end+0xfffe1c8c>
10102484:	df0022c4 	addi	fp,sp,139
10102488:	dc002915 	stw	r16,164(sp)
1010248c:	4027883a 	mov	r19,r8
10102490:	e021883a 	mov	r16,fp
10102494:	b009883a 	mov	r4,r22
10102498:	01400284 	movi	r5,10
1010249c:	010a81c0 	call	1010a81c <__modsi3>
101024a0:	10800c04 	addi	r2,r2,48
101024a4:	843fffc4 	addi	r16,r16,-1
101024a8:	b009883a 	mov	r4,r22
101024ac:	01400284 	movi	r5,10
101024b0:	80800005 	stb	r2,0(r16)
101024b4:	010a7980 	call	1010a798 <__divsi3>
101024b8:	102d883a 	mov	r22,r2
101024bc:	00800244 	movi	r2,9
101024c0:	15bff416 	blt	r2,r22,10102494 <__alt_data_end+0xfffe2494>
101024c4:	9811883a 	mov	r8,r19
101024c8:	b0800c04 	addi	r2,r22,48
101024cc:	8027883a 	mov	r19,r16
101024d0:	997fffc4 	addi	r5,r19,-1
101024d4:	98bfffc5 	stb	r2,-1(r19)
101024d8:	dc002917 	ldw	r16,164(sp)
101024dc:	2f006a2e 	bgeu	r5,fp,10102688 <___vfprintf_internal_r+0x21d0>
101024e0:	d9c02384 	addi	r7,sp,142
101024e4:	3ccfc83a 	sub	r7,r7,r19
101024e8:	d9002344 	addi	r4,sp,141
101024ec:	e1cf883a 	add	r7,fp,r7
101024f0:	00000106 	br	101024f8 <___vfprintf_internal_r+0x2040>
101024f4:	28800003 	ldbu	r2,0(r5)
101024f8:	20800005 	stb	r2,0(r4)
101024fc:	21000044 	addi	r4,r4,1
10102500:	29400044 	addi	r5,r5,1
10102504:	393ffb1e 	bne	r7,r4,101024f4 <__alt_data_end+0xfffe24f4>
10102508:	d8802304 	addi	r2,sp,140
1010250c:	14c5c83a 	sub	r2,r2,r19
10102510:	d8c02344 	addi	r3,sp,141
10102514:	1885883a 	add	r2,r3,r2
10102518:	003f7006 	br	101022dc <__alt_data_end+0xfffe22dc>
1010251c:	0005883a 	mov	r2,zero
10102520:	003f0f06 	br	10102160 <__alt_data_end+0xfffe2160>
10102524:	d8c03217 	ldw	r3,200(sp)
10102528:	18c00044 	addi	r3,r3,1
1010252c:	d8c02e15 	stw	r3,184(sp)
10102530:	1805883a 	mov	r2,r3
10102534:	183fb20e 	bge	r3,zero,10102400 <__alt_data_end+0xfffe2400>
10102538:	0005883a 	mov	r2,zero
1010253c:	003fb006 	br	10102400 <__alt_data_end+0xfffe2400>
10102540:	d9003617 	ldw	r4,216(sp)
10102544:	000d883a 	mov	r6,zero
10102548:	000f883a 	mov	r7,zero
1010254c:	980b883a 	mov	r5,r19
10102550:	d8c03c15 	stw	r3,240(sp)
10102554:	da003d15 	stw	r8,244(sp)
10102558:	010bae00 	call	1010bae0 <__eqdf2>
1010255c:	d8c03c17 	ldw	r3,240(sp)
10102560:	da003d17 	ldw	r8,244(sp)
10102564:	103f9826 	beq	r2,zero,101023c8 <__alt_data_end+0xfffe23c8>
10102568:	00800044 	movi	r2,1
1010256c:	10c7c83a 	sub	r3,r2,r3
10102570:	d8c02615 	stw	r3,152(sp)
10102574:	003f9506 	br	101023cc <__alt_data_end+0xfffe23cc>
10102578:	d9002917 	ldw	r4,164(sp)
1010257c:	d8c03217 	ldw	r3,200(sp)
10102580:	20800044 	addi	r2,r4,1
10102584:	1885883a 	add	r2,r3,r2
10102588:	d8802e15 	stw	r2,184(sp)
1010258c:	103dbf0e 	bge	r2,zero,10101c8c <__alt_data_end+0xfffe1c8c>
10102590:	0005883a 	mov	r2,zero
10102594:	003dbd06 	br	10101c8c <__alt_data_end+0xfffe1c8c>
10102598:	2000211e 	bne	r4,zero,10102620 <___vfprintf_internal_r+0x2168>
1010259c:	9480004c 	andi	r18,r18,1
101025a0:	90001f1e 	bne	r18,zero,10102620 <___vfprintf_internal_r+0x2168>
101025a4:	00800044 	movi	r2,1
101025a8:	d8802e15 	stw	r2,184(sp)
101025ac:	003db706 	br	10101c8c <__alt_data_end+0xfffe1c8c>
101025b0:	00800b44 	movi	r2,45
101025b4:	05adc83a 	sub	r22,zero,r22
101025b8:	d8802305 	stb	r2,140(sp)
101025bc:	003f3f06 	br	101022bc <__alt_data_end+0xfffe22bc>
101025c0:	0005883a 	mov	r2,zero
101025c4:	003f5206 	br	10102310 <__alt_data_end+0xfffe2310>
101025c8:	90a4703a 	and	r18,r18,r2
101025cc:	903f4e26 	beq	r18,zero,10102308 <__alt_data_end+0xfffe2308>
101025d0:	003f4a06 	br	101022fc <__alt_data_end+0xfffe22fc>
101025d4:	00800084 	movi	r2,2
101025d8:	10c5c83a 	sub	r2,r2,r3
101025dc:	003f8406 	br	101023f0 <__alt_data_end+0xfffe23f0>
101025e0:	d8802d17 	ldw	r2,180(sp)
101025e4:	d9002d17 	ldw	r4,180(sp)
101025e8:	ac400043 	ldbu	r17,1(r21)
101025ec:	10800017 	ldw	r2,0(r2)
101025f0:	582b883a 	mov	r21,r11
101025f4:	d8802915 	stw	r2,164(sp)
101025f8:	20800104 	addi	r2,r4,4
101025fc:	d9002917 	ldw	r4,164(sp)
10102600:	d8802d15 	stw	r2,180(sp)
10102604:	203e7a0e 	bge	r4,zero,10101ff0 <__alt_data_end+0xfffe1ff0>
10102608:	8c403fcc 	andi	r17,r17,255
1010260c:	00bfffc4 	movi	r2,-1
10102610:	8c40201c 	xori	r17,r17,128
10102614:	d8802915 	stw	r2,164(sp)
10102618:	8c7fe004 	addi	r17,r17,-128
1010261c:	00380706 	br	1010063c <__alt_data_end+0xfffe063c>
10102620:	d8c02917 	ldw	r3,164(sp)
10102624:	18c00084 	addi	r3,r3,2
10102628:	d8c02e15 	stw	r3,184(sp)
1010262c:	1805883a 	mov	r2,r3
10102630:	183d960e 	bge	r3,zero,10101c8c <__alt_data_end+0xfffe1c8c>
10102634:	003fd606 	br	10102590 <__alt_data_end+0xfffe2590>
10102638:	0005883a 	mov	r2,zero
1010263c:	003f8e06 	br	10102478 <__alt_data_end+0xfffe2478>
10102640:	9080004c 	andi	r2,r18,1
10102644:	103f811e 	bne	r2,zero,1010244c <__alt_data_end+0xfffe244c>
10102648:	d8802117 	ldw	r2,132(sp)
1010264c:	1405c83a 	sub	r2,r2,r16
10102650:	d8803315 	stw	r2,204(sp)
10102654:	b47ef326 	beq	r22,r17,10102224 <__alt_data_end+0xfffe2224>
10102658:	dd802617 	ldw	r22,152(sp)
1010265c:	003f1106 	br	101022a4 <__alt_data_end+0xfffe22a4>
10102660:	d9c02785 	stb	r7,158(sp)
10102664:	00390406 	br	10100a78 <__alt_data_end+0xfffe0a78>
10102668:	d9c02785 	stb	r7,158(sp)
1010266c:	0038d306 	br	101009bc <__alt_data_end+0xfffe09bc>
10102670:	d9c02785 	stb	r7,158(sp)
10102674:	003a6106 	br	10100ffc <__alt_data_end+0xfffe0ffc>
10102678:	d9c02785 	stb	r7,158(sp)
1010267c:	003af806 	br	10101260 <__alt_data_end+0xfffe1260>
10102680:	0005883a 	mov	r2,zero
10102684:	003d7e06 	br	10101c80 <__alt_data_end+0xfffe1c80>
10102688:	d8802344 	addi	r2,sp,141
1010268c:	003f1306 	br	101022dc <__alt_data_end+0xfffe22dc>
10102690:	d9c02785 	stb	r7,158(sp)
10102694:	00392306 	br	10100b24 <__alt_data_end+0xfffe0b24>
10102698:	d9c02785 	stb	r7,158(sp)
1010269c:	003aa906 	br	10101144 <__alt_data_end+0xfffe1144>
101026a0:	d9c02785 	stb	r7,158(sp)
101026a4:	003a3d06 	br	10100f9c <__alt_data_end+0xfffe0f9c>
101026a8:	d9c02785 	stb	r7,158(sp)
101026ac:	003aca06 	br	101011d8 <__alt_data_end+0xfffe11d8>

101026b0 <__vfprintf_internal>:
101026b0:	00840474 	movhi	r2,4113
101026b4:	10858804 	addi	r2,r2,5664
101026b8:	300f883a 	mov	r7,r6
101026bc:	280d883a 	mov	r6,r5
101026c0:	200b883a 	mov	r5,r4
101026c4:	11000017 	ldw	r4,0(r2)
101026c8:	01004b81 	jmpi	101004b8 <___vfprintf_internal_r>

101026cc <__sbprintf>:
101026cc:	2880030b 	ldhu	r2,12(r5)
101026d0:	2ac01917 	ldw	r11,100(r5)
101026d4:	2a80038b 	ldhu	r10,14(r5)
101026d8:	2a400717 	ldw	r9,28(r5)
101026dc:	2a000917 	ldw	r8,36(r5)
101026e0:	defee204 	addi	sp,sp,-1144
101026e4:	00c10004 	movi	r3,1024
101026e8:	dc011a15 	stw	r16,1128(sp)
101026ec:	10bfff4c 	andi	r2,r2,65533
101026f0:	2821883a 	mov	r16,r5
101026f4:	d8cb883a 	add	r5,sp,r3
101026f8:	dc811c15 	stw	r18,1136(sp)
101026fc:	dc411b15 	stw	r17,1132(sp)
10102700:	dfc11d15 	stw	ra,1140(sp)
10102704:	2025883a 	mov	r18,r4
10102708:	d881030d 	sth	r2,1036(sp)
1010270c:	dac11915 	stw	r11,1124(sp)
10102710:	da81038d 	sth	r10,1038(sp)
10102714:	da410715 	stw	r9,1052(sp)
10102718:	da010915 	stw	r8,1060(sp)
1010271c:	dec10015 	stw	sp,1024(sp)
10102720:	dec10415 	stw	sp,1040(sp)
10102724:	d8c10215 	stw	r3,1032(sp)
10102728:	d8c10515 	stw	r3,1044(sp)
1010272c:	d8010615 	stw	zero,1048(sp)
10102730:	01004b80 	call	101004b8 <___vfprintf_internal_r>
10102734:	1023883a 	mov	r17,r2
10102738:	10000416 	blt	r2,zero,1010274c <__sbprintf+0x80>
1010273c:	d9410004 	addi	r5,sp,1024
10102740:	9009883a 	mov	r4,r18
10102744:	01043980 	call	10104398 <_fflush_r>
10102748:	10000d1e 	bne	r2,zero,10102780 <__sbprintf+0xb4>
1010274c:	d881030b 	ldhu	r2,1036(sp)
10102750:	1080100c 	andi	r2,r2,64
10102754:	10000326 	beq	r2,zero,10102764 <__sbprintf+0x98>
10102758:	8080030b 	ldhu	r2,12(r16)
1010275c:	10801014 	ori	r2,r2,64
10102760:	8080030d 	sth	r2,12(r16)
10102764:	8805883a 	mov	r2,r17
10102768:	dfc11d17 	ldw	ra,1140(sp)
1010276c:	dc811c17 	ldw	r18,1136(sp)
10102770:	dc411b17 	ldw	r17,1132(sp)
10102774:	dc011a17 	ldw	r16,1128(sp)
10102778:	dec11e04 	addi	sp,sp,1144
1010277c:	f800283a 	ret
10102780:	047fffc4 	movi	r17,-1
10102784:	003ff106 	br	1010274c <__alt_data_end+0xfffe274c>

10102788 <__swsetup_r>:
10102788:	00840474 	movhi	r2,4113
1010278c:	defffd04 	addi	sp,sp,-12
10102790:	10858804 	addi	r2,r2,5664
10102794:	dc400115 	stw	r17,4(sp)
10102798:	2023883a 	mov	r17,r4
1010279c:	11000017 	ldw	r4,0(r2)
101027a0:	dc000015 	stw	r16,0(sp)
101027a4:	dfc00215 	stw	ra,8(sp)
101027a8:	2821883a 	mov	r16,r5
101027ac:	20000226 	beq	r4,zero,101027b8 <__swsetup_r+0x30>
101027b0:	20800e17 	ldw	r2,56(r4)
101027b4:	10003126 	beq	r2,zero,1010287c <__swsetup_r+0xf4>
101027b8:	8080030b 	ldhu	r2,12(r16)
101027bc:	10c0020c 	andi	r3,r2,8
101027c0:	1009883a 	mov	r4,r2
101027c4:	18000f26 	beq	r3,zero,10102804 <__swsetup_r+0x7c>
101027c8:	80c00417 	ldw	r3,16(r16)
101027cc:	18001526 	beq	r3,zero,10102824 <__swsetup_r+0x9c>
101027d0:	1100004c 	andi	r4,r2,1
101027d4:	20001c1e 	bne	r4,zero,10102848 <__swsetup_r+0xc0>
101027d8:	1080008c 	andi	r2,r2,2
101027dc:	1000291e 	bne	r2,zero,10102884 <__swsetup_r+0xfc>
101027e0:	80800517 	ldw	r2,20(r16)
101027e4:	80800215 	stw	r2,8(r16)
101027e8:	18001c26 	beq	r3,zero,1010285c <__swsetup_r+0xd4>
101027ec:	0005883a 	mov	r2,zero
101027f0:	dfc00217 	ldw	ra,8(sp)
101027f4:	dc400117 	ldw	r17,4(sp)
101027f8:	dc000017 	ldw	r16,0(sp)
101027fc:	dec00304 	addi	sp,sp,12
10102800:	f800283a 	ret
10102804:	2080040c 	andi	r2,r4,16
10102808:	10002e26 	beq	r2,zero,101028c4 <__swsetup_r+0x13c>
1010280c:	2080010c 	andi	r2,r4,4
10102810:	10001e1e 	bne	r2,zero,1010288c <__swsetup_r+0x104>
10102814:	80c00417 	ldw	r3,16(r16)
10102818:	20800214 	ori	r2,r4,8
1010281c:	8080030d 	sth	r2,12(r16)
10102820:	183feb1e 	bne	r3,zero,101027d0 <__alt_data_end+0xfffe27d0>
10102824:	1100a00c 	andi	r4,r2,640
10102828:	01408004 	movi	r5,512
1010282c:	217fe826 	beq	r4,r5,101027d0 <__alt_data_end+0xfffe27d0>
10102830:	800b883a 	mov	r5,r16
10102834:	8809883a 	mov	r4,r17
10102838:	0104e5c0 	call	10104e5c <__smakebuf_r>
1010283c:	8080030b 	ldhu	r2,12(r16)
10102840:	80c00417 	ldw	r3,16(r16)
10102844:	003fe206 	br	101027d0 <__alt_data_end+0xfffe27d0>
10102848:	80800517 	ldw	r2,20(r16)
1010284c:	80000215 	stw	zero,8(r16)
10102850:	0085c83a 	sub	r2,zero,r2
10102854:	80800615 	stw	r2,24(r16)
10102858:	183fe41e 	bne	r3,zero,101027ec <__alt_data_end+0xfffe27ec>
1010285c:	80c0030b 	ldhu	r3,12(r16)
10102860:	0005883a 	mov	r2,zero
10102864:	1900200c 	andi	r4,r3,128
10102868:	203fe126 	beq	r4,zero,101027f0 <__alt_data_end+0xfffe27f0>
1010286c:	18c01014 	ori	r3,r3,64
10102870:	80c0030d 	sth	r3,12(r16)
10102874:	00bfffc4 	movi	r2,-1
10102878:	003fdd06 	br	101027f0 <__alt_data_end+0xfffe27f0>
1010287c:	01047740 	call	10104774 <__sinit>
10102880:	003fcd06 	br	101027b8 <__alt_data_end+0xfffe27b8>
10102884:	0005883a 	mov	r2,zero
10102888:	003fd606 	br	101027e4 <__alt_data_end+0xfffe27e4>
1010288c:	81400c17 	ldw	r5,48(r16)
10102890:	28000626 	beq	r5,zero,101028ac <__swsetup_r+0x124>
10102894:	80801004 	addi	r2,r16,64
10102898:	28800326 	beq	r5,r2,101028a8 <__swsetup_r+0x120>
1010289c:	8809883a 	mov	r4,r17
101028a0:	01048e80 	call	101048e8 <_free_r>
101028a4:	8100030b 	ldhu	r4,12(r16)
101028a8:	80000c15 	stw	zero,48(r16)
101028ac:	80c00417 	ldw	r3,16(r16)
101028b0:	00bff6c4 	movi	r2,-37
101028b4:	1108703a 	and	r4,r2,r4
101028b8:	80000115 	stw	zero,4(r16)
101028bc:	80c00015 	stw	r3,0(r16)
101028c0:	003fd506 	br	10102818 <__alt_data_end+0xfffe2818>
101028c4:	00800244 	movi	r2,9
101028c8:	88800015 	stw	r2,0(r17)
101028cc:	20801014 	ori	r2,r4,64
101028d0:	8080030d 	sth	r2,12(r16)
101028d4:	00bfffc4 	movi	r2,-1
101028d8:	003fc506 	br	101027f0 <__alt_data_end+0xfffe27f0>

101028dc <abort>:
101028dc:	deffff04 	addi	sp,sp,-4
101028e0:	01000184 	movi	r4,6
101028e4:	dfc00015 	stw	ra,0(sp)
101028e8:	0106e900 	call	10106e90 <raise>
101028ec:	01000044 	movi	r4,1
101028f0:	010d0ec0 	call	1010d0ec <_exit>

101028f4 <quorem>:
101028f4:	defff704 	addi	sp,sp,-36
101028f8:	dc800215 	stw	r18,8(sp)
101028fc:	20800417 	ldw	r2,16(r4)
10102900:	2c800417 	ldw	r18,16(r5)
10102904:	dfc00815 	stw	ra,32(sp)
10102908:	ddc00715 	stw	r23,28(sp)
1010290c:	dd800615 	stw	r22,24(sp)
10102910:	dd400515 	stw	r21,20(sp)
10102914:	dd000415 	stw	r20,16(sp)
10102918:	dcc00315 	stw	r19,12(sp)
1010291c:	dc400115 	stw	r17,4(sp)
10102920:	dc000015 	stw	r16,0(sp)
10102924:	14807116 	blt	r2,r18,10102aec <quorem+0x1f8>
10102928:	94bfffc4 	addi	r18,r18,-1
1010292c:	94ad883a 	add	r22,r18,r18
10102930:	b5ad883a 	add	r22,r22,r22
10102934:	2c400504 	addi	r17,r5,20
10102938:	8da9883a 	add	r20,r17,r22
1010293c:	25400504 	addi	r21,r4,20
10102940:	282f883a 	mov	r23,r5
10102944:	adad883a 	add	r22,r21,r22
10102948:	a1400017 	ldw	r5,0(r20)
1010294c:	2021883a 	mov	r16,r4
10102950:	b1000017 	ldw	r4,0(r22)
10102954:	29400044 	addi	r5,r5,1
10102958:	010a8900 	call	1010a890 <__udivsi3>
1010295c:	1027883a 	mov	r19,r2
10102960:	10002c26 	beq	r2,zero,10102a14 <quorem+0x120>
10102964:	a813883a 	mov	r9,r21
10102968:	880b883a 	mov	r5,r17
1010296c:	0009883a 	mov	r4,zero
10102970:	000d883a 	mov	r6,zero
10102974:	2a000017 	ldw	r8,0(r5)
10102978:	49c00017 	ldw	r7,0(r9)
1010297c:	29400104 	addi	r5,r5,4
10102980:	40bfffcc 	andi	r2,r8,65535
10102984:	14c5383a 	mul	r2,r2,r19
10102988:	4010d43a 	srli	r8,r8,16
1010298c:	38ffffcc 	andi	r3,r7,65535
10102990:	1105883a 	add	r2,r2,r4
10102994:	1008d43a 	srli	r4,r2,16
10102998:	44d1383a 	mul	r8,r8,r19
1010299c:	198d883a 	add	r6,r3,r6
101029a0:	10ffffcc 	andi	r3,r2,65535
101029a4:	30c7c83a 	sub	r3,r6,r3
101029a8:	380ed43a 	srli	r7,r7,16
101029ac:	4105883a 	add	r2,r8,r4
101029b0:	180dd43a 	srai	r6,r3,16
101029b4:	113fffcc 	andi	r4,r2,65535
101029b8:	390fc83a 	sub	r7,r7,r4
101029bc:	398d883a 	add	r6,r7,r6
101029c0:	300e943a 	slli	r7,r6,16
101029c4:	18ffffcc 	andi	r3,r3,65535
101029c8:	1008d43a 	srli	r4,r2,16
101029cc:	38ceb03a 	or	r7,r7,r3
101029d0:	49c00015 	stw	r7,0(r9)
101029d4:	300dd43a 	srai	r6,r6,16
101029d8:	4a400104 	addi	r9,r9,4
101029dc:	a17fe52e 	bgeu	r20,r5,10102974 <__alt_data_end+0xfffe2974>
101029e0:	b0800017 	ldw	r2,0(r22)
101029e4:	10000b1e 	bne	r2,zero,10102a14 <quorem+0x120>
101029e8:	b0bfff04 	addi	r2,r22,-4
101029ec:	a880082e 	bgeu	r21,r2,10102a10 <quorem+0x11c>
101029f0:	b0ffff17 	ldw	r3,-4(r22)
101029f4:	18000326 	beq	r3,zero,10102a04 <quorem+0x110>
101029f8:	00000506 	br	10102a10 <quorem+0x11c>
101029fc:	10c00017 	ldw	r3,0(r2)
10102a00:	1800031e 	bne	r3,zero,10102a10 <quorem+0x11c>
10102a04:	10bfff04 	addi	r2,r2,-4
10102a08:	94bfffc4 	addi	r18,r18,-1
10102a0c:	a8bffb36 	bltu	r21,r2,101029fc <__alt_data_end+0xfffe29fc>
10102a10:	84800415 	stw	r18,16(r16)
10102a14:	b80b883a 	mov	r5,r23
10102a18:	8009883a 	mov	r4,r16
10102a1c:	01064400 	call	10106440 <__mcmp>
10102a20:	10002616 	blt	r2,zero,10102abc <quorem+0x1c8>
10102a24:	9cc00044 	addi	r19,r19,1
10102a28:	a805883a 	mov	r2,r21
10102a2c:	000b883a 	mov	r5,zero
10102a30:	11000017 	ldw	r4,0(r2)
10102a34:	89800017 	ldw	r6,0(r17)
10102a38:	10800104 	addi	r2,r2,4
10102a3c:	20ffffcc 	andi	r3,r4,65535
10102a40:	194b883a 	add	r5,r3,r5
10102a44:	30ffffcc 	andi	r3,r6,65535
10102a48:	28c7c83a 	sub	r3,r5,r3
10102a4c:	300cd43a 	srli	r6,r6,16
10102a50:	2008d43a 	srli	r4,r4,16
10102a54:	180bd43a 	srai	r5,r3,16
10102a58:	18ffffcc 	andi	r3,r3,65535
10102a5c:	2189c83a 	sub	r4,r4,r6
10102a60:	2149883a 	add	r4,r4,r5
10102a64:	200c943a 	slli	r6,r4,16
10102a68:	8c400104 	addi	r17,r17,4
10102a6c:	200bd43a 	srai	r5,r4,16
10102a70:	30c6b03a 	or	r3,r6,r3
10102a74:	10ffff15 	stw	r3,-4(r2)
10102a78:	a47fed2e 	bgeu	r20,r17,10102a30 <__alt_data_end+0xfffe2a30>
10102a7c:	9485883a 	add	r2,r18,r18
10102a80:	1085883a 	add	r2,r2,r2
10102a84:	a887883a 	add	r3,r21,r2
10102a88:	18800017 	ldw	r2,0(r3)
10102a8c:	10000b1e 	bne	r2,zero,10102abc <quorem+0x1c8>
10102a90:	18bfff04 	addi	r2,r3,-4
10102a94:	a880082e 	bgeu	r21,r2,10102ab8 <quorem+0x1c4>
10102a98:	18ffff17 	ldw	r3,-4(r3)
10102a9c:	18000326 	beq	r3,zero,10102aac <quorem+0x1b8>
10102aa0:	00000506 	br	10102ab8 <quorem+0x1c4>
10102aa4:	10c00017 	ldw	r3,0(r2)
10102aa8:	1800031e 	bne	r3,zero,10102ab8 <quorem+0x1c4>
10102aac:	10bfff04 	addi	r2,r2,-4
10102ab0:	94bfffc4 	addi	r18,r18,-1
10102ab4:	a8bffb36 	bltu	r21,r2,10102aa4 <__alt_data_end+0xfffe2aa4>
10102ab8:	84800415 	stw	r18,16(r16)
10102abc:	9805883a 	mov	r2,r19
10102ac0:	dfc00817 	ldw	ra,32(sp)
10102ac4:	ddc00717 	ldw	r23,28(sp)
10102ac8:	dd800617 	ldw	r22,24(sp)
10102acc:	dd400517 	ldw	r21,20(sp)
10102ad0:	dd000417 	ldw	r20,16(sp)
10102ad4:	dcc00317 	ldw	r19,12(sp)
10102ad8:	dc800217 	ldw	r18,8(sp)
10102adc:	dc400117 	ldw	r17,4(sp)
10102ae0:	dc000017 	ldw	r16,0(sp)
10102ae4:	dec00904 	addi	sp,sp,36
10102ae8:	f800283a 	ret
10102aec:	0005883a 	mov	r2,zero
10102af0:	003ff306 	br	10102ac0 <__alt_data_end+0xfffe2ac0>

10102af4 <_dtoa_r>:
10102af4:	20801017 	ldw	r2,64(r4)
10102af8:	deffde04 	addi	sp,sp,-136
10102afc:	df002015 	stw	fp,128(sp)
10102b00:	dcc01b15 	stw	r19,108(sp)
10102b04:	dc801a15 	stw	r18,104(sp)
10102b08:	dc401915 	stw	r17,100(sp)
10102b0c:	dc001815 	stw	r16,96(sp)
10102b10:	dfc02115 	stw	ra,132(sp)
10102b14:	ddc01f15 	stw	r23,124(sp)
10102b18:	dd801e15 	stw	r22,120(sp)
10102b1c:	dd401d15 	stw	r21,116(sp)
10102b20:	dd001c15 	stw	r20,112(sp)
10102b24:	d9c00315 	stw	r7,12(sp)
10102b28:	2039883a 	mov	fp,r4
10102b2c:	3023883a 	mov	r17,r6
10102b30:	2825883a 	mov	r18,r5
10102b34:	dc002417 	ldw	r16,144(sp)
10102b38:	3027883a 	mov	r19,r6
10102b3c:	10000826 	beq	r2,zero,10102b60 <_dtoa_r+0x6c>
10102b40:	21801117 	ldw	r6,68(r4)
10102b44:	00c00044 	movi	r3,1
10102b48:	100b883a 	mov	r5,r2
10102b4c:	1986983a 	sll	r3,r3,r6
10102b50:	11800115 	stw	r6,4(r2)
10102b54:	10c00215 	stw	r3,8(r2)
10102b58:	0105c200 	call	10105c20 <_Bfree>
10102b5c:	e0001015 	stw	zero,64(fp)
10102b60:	88002e16 	blt	r17,zero,10102c1c <_dtoa_r+0x128>
10102b64:	80000015 	stw	zero,0(r16)
10102b68:	889ffc2c 	andhi	r2,r17,32752
10102b6c:	00dffc34 	movhi	r3,32752
10102b70:	10c01c26 	beq	r2,r3,10102be4 <_dtoa_r+0xf0>
10102b74:	000d883a 	mov	r6,zero
10102b78:	000f883a 	mov	r7,zero
10102b7c:	9009883a 	mov	r4,r18
10102b80:	980b883a 	mov	r5,r19
10102b84:	010bae00 	call	1010bae0 <__eqdf2>
10102b88:	10002b1e 	bne	r2,zero,10102c38 <_dtoa_r+0x144>
10102b8c:	d9c02317 	ldw	r7,140(sp)
10102b90:	00800044 	movi	r2,1
10102b94:	38800015 	stw	r2,0(r7)
10102b98:	d8802517 	ldw	r2,148(sp)
10102b9c:	10019e26 	beq	r2,zero,10103218 <_dtoa_r+0x724>
10102ba0:	d8c02517 	ldw	r3,148(sp)
10102ba4:	00840474 	movhi	r2,4113
10102ba8:	10be2c44 	addi	r2,r2,-1871
10102bac:	18800015 	stw	r2,0(r3)
10102bb0:	10bfffc4 	addi	r2,r2,-1
10102bb4:	dfc02117 	ldw	ra,132(sp)
10102bb8:	df002017 	ldw	fp,128(sp)
10102bbc:	ddc01f17 	ldw	r23,124(sp)
10102bc0:	dd801e17 	ldw	r22,120(sp)
10102bc4:	dd401d17 	ldw	r21,116(sp)
10102bc8:	dd001c17 	ldw	r20,112(sp)
10102bcc:	dcc01b17 	ldw	r19,108(sp)
10102bd0:	dc801a17 	ldw	r18,104(sp)
10102bd4:	dc401917 	ldw	r17,100(sp)
10102bd8:	dc001817 	ldw	r16,96(sp)
10102bdc:	dec02204 	addi	sp,sp,136
10102be0:	f800283a 	ret
10102be4:	d8c02317 	ldw	r3,140(sp)
10102be8:	0089c3c4 	movi	r2,9999
10102bec:	18800015 	stw	r2,0(r3)
10102bf0:	90017726 	beq	r18,zero,101031d0 <_dtoa_r+0x6dc>
10102bf4:	00840474 	movhi	r2,4113
10102bf8:	10be3804 	addi	r2,r2,-1824
10102bfc:	d9002517 	ldw	r4,148(sp)
10102c00:	203fec26 	beq	r4,zero,10102bb4 <__alt_data_end+0xfffe2bb4>
10102c04:	10c000c7 	ldb	r3,3(r2)
10102c08:	1801781e 	bne	r3,zero,101031ec <_dtoa_r+0x6f8>
10102c0c:	10c000c4 	addi	r3,r2,3
10102c10:	d9802517 	ldw	r6,148(sp)
10102c14:	30c00015 	stw	r3,0(r6)
10102c18:	003fe606 	br	10102bb4 <__alt_data_end+0xfffe2bb4>
10102c1c:	04e00034 	movhi	r19,32768
10102c20:	9cffffc4 	addi	r19,r19,-1
10102c24:	00800044 	movi	r2,1
10102c28:	8ce6703a 	and	r19,r17,r19
10102c2c:	80800015 	stw	r2,0(r16)
10102c30:	9823883a 	mov	r17,r19
10102c34:	003fcc06 	br	10102b68 <__alt_data_end+0xfffe2b68>
10102c38:	d8800204 	addi	r2,sp,8
10102c3c:	d8800015 	stw	r2,0(sp)
10102c40:	d9c00104 	addi	r7,sp,4
10102c44:	900b883a 	mov	r5,r18
10102c48:	980d883a 	mov	r6,r19
10102c4c:	e009883a 	mov	r4,fp
10102c50:	8820d53a 	srli	r16,r17,20
10102c54:	010680c0 	call	1010680c <__d2b>
10102c58:	d8800915 	stw	r2,36(sp)
10102c5c:	8001651e 	bne	r16,zero,101031f4 <_dtoa_r+0x700>
10102c60:	dd800217 	ldw	r22,8(sp)
10102c64:	dc000117 	ldw	r16,4(sp)
10102c68:	00800804 	movi	r2,32
10102c6c:	b421883a 	add	r16,r22,r16
10102c70:	80c10c84 	addi	r3,r16,1074
10102c74:	10c2d10e 	bge	r2,r3,101037bc <_dtoa_r+0xcc8>
10102c78:	00801004 	movi	r2,64
10102c7c:	81010484 	addi	r4,r16,1042
10102c80:	10c7c83a 	sub	r3,r2,r3
10102c84:	9108d83a 	srl	r4,r18,r4
10102c88:	88e2983a 	sll	r17,r17,r3
10102c8c:	2448b03a 	or	r4,r4,r17
10102c90:	010cea80 	call	1010cea8 <__floatunsidf>
10102c94:	017f8434 	movhi	r5,65040
10102c98:	01800044 	movi	r6,1
10102c9c:	1009883a 	mov	r4,r2
10102ca0:	194b883a 	add	r5,r3,r5
10102ca4:	843fffc4 	addi	r16,r16,-1
10102ca8:	d9801115 	stw	r6,68(sp)
10102cac:	000d883a 	mov	r6,zero
10102cb0:	01cffe34 	movhi	r7,16376
10102cb4:	010c4500 	call	1010c450 <__subdf3>
10102cb8:	0198dbf4 	movhi	r6,25455
10102cbc:	01cff4f4 	movhi	r7,16339
10102cc0:	3190d844 	addi	r6,r6,17249
10102cc4:	39e1e9c4 	addi	r7,r7,-30809
10102cc8:	1009883a 	mov	r4,r2
10102ccc:	180b883a 	mov	r5,r3
10102cd0:	010bd380 	call	1010bd38 <__muldf3>
10102cd4:	01a2d874 	movhi	r6,35681
10102cd8:	01cff1f4 	movhi	r7,16327
10102cdc:	31b22cc4 	addi	r6,r6,-14157
10102ce0:	39e28a04 	addi	r7,r7,-30168
10102ce4:	180b883a 	mov	r5,r3
10102ce8:	1009883a 	mov	r4,r2
10102cec:	010a94c0 	call	1010a94c <__adddf3>
10102cf0:	8009883a 	mov	r4,r16
10102cf4:	1029883a 	mov	r20,r2
10102cf8:	1823883a 	mov	r17,r3
10102cfc:	010cdcc0 	call	1010cdcc <__floatsidf>
10102d00:	019427f4 	movhi	r6,20639
10102d04:	01cff4f4 	movhi	r7,16339
10102d08:	319e7ec4 	addi	r6,r6,31227
10102d0c:	39d104c4 	addi	r7,r7,17427
10102d10:	1009883a 	mov	r4,r2
10102d14:	180b883a 	mov	r5,r3
10102d18:	010bd380 	call	1010bd38 <__muldf3>
10102d1c:	100d883a 	mov	r6,r2
10102d20:	180f883a 	mov	r7,r3
10102d24:	a009883a 	mov	r4,r20
10102d28:	880b883a 	mov	r5,r17
10102d2c:	010a94c0 	call	1010a94c <__adddf3>
10102d30:	1009883a 	mov	r4,r2
10102d34:	180b883a 	mov	r5,r3
10102d38:	1029883a 	mov	r20,r2
10102d3c:	1823883a 	mov	r17,r3
10102d40:	010cd4c0 	call	1010cd4c <__fixdfsi>
10102d44:	000d883a 	mov	r6,zero
10102d48:	000f883a 	mov	r7,zero
10102d4c:	a009883a 	mov	r4,r20
10102d50:	880b883a 	mov	r5,r17
10102d54:	d8800515 	stw	r2,20(sp)
10102d58:	010bc440 	call	1010bc44 <__ledf2>
10102d5c:	10028716 	blt	r2,zero,1010377c <_dtoa_r+0xc88>
10102d60:	d8c00517 	ldw	r3,20(sp)
10102d64:	00800584 	movi	r2,22
10102d68:	10c27536 	bltu	r2,r3,10103740 <_dtoa_r+0xc4c>
10102d6c:	180490fa 	slli	r2,r3,3
10102d70:	00c40474 	movhi	r3,4113
10102d74:	18fe5304 	addi	r3,r3,-1716
10102d78:	1885883a 	add	r2,r3,r2
10102d7c:	11000017 	ldw	r4,0(r2)
10102d80:	11400117 	ldw	r5,4(r2)
10102d84:	900d883a 	mov	r6,r18
10102d88:	980f883a 	mov	r7,r19
10102d8c:	010bb680 	call	1010bb68 <__gedf2>
10102d90:	00828d0e 	bge	zero,r2,101037c8 <_dtoa_r+0xcd4>
10102d94:	d9000517 	ldw	r4,20(sp)
10102d98:	d8000e15 	stw	zero,56(sp)
10102d9c:	213fffc4 	addi	r4,r4,-1
10102da0:	d9000515 	stw	r4,20(sp)
10102da4:	b42dc83a 	sub	r22,r22,r16
10102da8:	b5bfffc4 	addi	r22,r22,-1
10102dac:	b0026f16 	blt	r22,zero,1010376c <_dtoa_r+0xc78>
10102db0:	d8000815 	stw	zero,32(sp)
10102db4:	d9c00517 	ldw	r7,20(sp)
10102db8:	38026416 	blt	r7,zero,1010374c <_dtoa_r+0xc58>
10102dbc:	b1ed883a 	add	r22,r22,r7
10102dc0:	d9c00d15 	stw	r7,52(sp)
10102dc4:	d8000a15 	stw	zero,40(sp)
10102dc8:	d9800317 	ldw	r6,12(sp)
10102dcc:	00800244 	movi	r2,9
10102dd0:	11811436 	bltu	r2,r6,10103224 <_dtoa_r+0x730>
10102dd4:	00800144 	movi	r2,5
10102dd8:	1184e10e 	bge	r2,r6,10104160 <_dtoa_r+0x166c>
10102ddc:	31bfff04 	addi	r6,r6,-4
10102de0:	d9800315 	stw	r6,12(sp)
10102de4:	0023883a 	mov	r17,zero
10102de8:	d9800317 	ldw	r6,12(sp)
10102dec:	008000c4 	movi	r2,3
10102df0:	30836726 	beq	r6,r2,10103b90 <_dtoa_r+0x109c>
10102df4:	1183410e 	bge	r2,r6,10103afc <_dtoa_r+0x1008>
10102df8:	d9c00317 	ldw	r7,12(sp)
10102dfc:	00800104 	movi	r2,4
10102e00:	38827c26 	beq	r7,r2,101037f4 <_dtoa_r+0xd00>
10102e04:	00800144 	movi	r2,5
10102e08:	3884c41e 	bne	r7,r2,1010411c <_dtoa_r+0x1628>
10102e0c:	00800044 	movi	r2,1
10102e10:	d8800b15 	stw	r2,44(sp)
10102e14:	d8c00517 	ldw	r3,20(sp)
10102e18:	d9002217 	ldw	r4,136(sp)
10102e1c:	1907883a 	add	r3,r3,r4
10102e20:	19800044 	addi	r6,r3,1
10102e24:	d8c00c15 	stw	r3,48(sp)
10102e28:	d9800615 	stw	r6,24(sp)
10102e2c:	0183a40e 	bge	zero,r6,10103cc0 <_dtoa_r+0x11cc>
10102e30:	d9800617 	ldw	r6,24(sp)
10102e34:	3021883a 	mov	r16,r6
10102e38:	e0001115 	stw	zero,68(fp)
10102e3c:	008005c4 	movi	r2,23
10102e40:	1184c92e 	bgeu	r2,r6,10104168 <_dtoa_r+0x1674>
10102e44:	00c00044 	movi	r3,1
10102e48:	00800104 	movi	r2,4
10102e4c:	1085883a 	add	r2,r2,r2
10102e50:	11000504 	addi	r4,r2,20
10102e54:	180b883a 	mov	r5,r3
10102e58:	18c00044 	addi	r3,r3,1
10102e5c:	313ffb2e 	bgeu	r6,r4,10102e4c <__alt_data_end+0xfffe2e4c>
10102e60:	e1401115 	stw	r5,68(fp)
10102e64:	e009883a 	mov	r4,fp
10102e68:	0105b780 	call	10105b78 <_Balloc>
10102e6c:	d8800715 	stw	r2,28(sp)
10102e70:	e0801015 	stw	r2,64(fp)
10102e74:	00800384 	movi	r2,14
10102e78:	1400f736 	bltu	r2,r16,10103258 <_dtoa_r+0x764>
10102e7c:	8800f626 	beq	r17,zero,10103258 <_dtoa_r+0x764>
10102e80:	d9c00517 	ldw	r7,20(sp)
10102e84:	01c39a0e 	bge	zero,r7,10103cf0 <_dtoa_r+0x11fc>
10102e88:	388003cc 	andi	r2,r7,15
10102e8c:	100490fa 	slli	r2,r2,3
10102e90:	382bd13a 	srai	r21,r7,4
10102e94:	00c40474 	movhi	r3,4113
10102e98:	18fe5304 	addi	r3,r3,-1716
10102e9c:	1885883a 	add	r2,r3,r2
10102ea0:	a8c0040c 	andi	r3,r21,16
10102ea4:	12400017 	ldw	r9,0(r2)
10102ea8:	12000117 	ldw	r8,4(r2)
10102eac:	18037926 	beq	r3,zero,10103c94 <_dtoa_r+0x11a0>
10102eb0:	00840474 	movhi	r2,4113
10102eb4:	10be4904 	addi	r2,r2,-1756
10102eb8:	11800817 	ldw	r6,32(r2)
10102ebc:	11c00917 	ldw	r7,36(r2)
10102ec0:	9009883a 	mov	r4,r18
10102ec4:	980b883a 	mov	r5,r19
10102ec8:	da001715 	stw	r8,92(sp)
10102ecc:	da401615 	stw	r9,88(sp)
10102ed0:	010b1f80 	call	1010b1f8 <__divdf3>
10102ed4:	da001717 	ldw	r8,92(sp)
10102ed8:	da401617 	ldw	r9,88(sp)
10102edc:	ad4003cc 	andi	r21,r21,15
10102ee0:	040000c4 	movi	r16,3
10102ee4:	1023883a 	mov	r17,r2
10102ee8:	1829883a 	mov	r20,r3
10102eec:	a8001126 	beq	r21,zero,10102f34 <_dtoa_r+0x440>
10102ef0:	05c40474 	movhi	r23,4113
10102ef4:	bdfe4904 	addi	r23,r23,-1756
10102ef8:	4805883a 	mov	r2,r9
10102efc:	4007883a 	mov	r3,r8
10102f00:	a980004c 	andi	r6,r21,1
10102f04:	1009883a 	mov	r4,r2
10102f08:	a82bd07a 	srai	r21,r21,1
10102f0c:	180b883a 	mov	r5,r3
10102f10:	30000426 	beq	r6,zero,10102f24 <_dtoa_r+0x430>
10102f14:	b9800017 	ldw	r6,0(r23)
10102f18:	b9c00117 	ldw	r7,4(r23)
10102f1c:	84000044 	addi	r16,r16,1
10102f20:	010bd380 	call	1010bd38 <__muldf3>
10102f24:	bdc00204 	addi	r23,r23,8
10102f28:	a83ff51e 	bne	r21,zero,10102f00 <__alt_data_end+0xfffe2f00>
10102f2c:	1013883a 	mov	r9,r2
10102f30:	1811883a 	mov	r8,r3
10102f34:	480d883a 	mov	r6,r9
10102f38:	400f883a 	mov	r7,r8
10102f3c:	8809883a 	mov	r4,r17
10102f40:	a00b883a 	mov	r5,r20
10102f44:	010b1f80 	call	1010b1f8 <__divdf3>
10102f48:	d8800f15 	stw	r2,60(sp)
10102f4c:	d8c01015 	stw	r3,64(sp)
10102f50:	d8c00e17 	ldw	r3,56(sp)
10102f54:	18000626 	beq	r3,zero,10102f70 <_dtoa_r+0x47c>
10102f58:	d9000f17 	ldw	r4,60(sp)
10102f5c:	d9401017 	ldw	r5,64(sp)
10102f60:	000d883a 	mov	r6,zero
10102f64:	01cffc34 	movhi	r7,16368
10102f68:	010bc440 	call	1010bc44 <__ledf2>
10102f6c:	10040b16 	blt	r2,zero,10103f9c <_dtoa_r+0x14a8>
10102f70:	8009883a 	mov	r4,r16
10102f74:	010cdcc0 	call	1010cdcc <__floatsidf>
10102f78:	d9800f17 	ldw	r6,60(sp)
10102f7c:	d9c01017 	ldw	r7,64(sp)
10102f80:	1009883a 	mov	r4,r2
10102f84:	180b883a 	mov	r5,r3
10102f88:	010bd380 	call	1010bd38 <__muldf3>
10102f8c:	000d883a 	mov	r6,zero
10102f90:	01d00734 	movhi	r7,16412
10102f94:	1009883a 	mov	r4,r2
10102f98:	180b883a 	mov	r5,r3
10102f9c:	010a94c0 	call	1010a94c <__adddf3>
10102fa0:	1021883a 	mov	r16,r2
10102fa4:	d8800617 	ldw	r2,24(sp)
10102fa8:	047f3034 	movhi	r17,64704
10102fac:	1c63883a 	add	r17,r3,r17
10102fb0:	10031826 	beq	r2,zero,10103c14 <_dtoa_r+0x1120>
10102fb4:	d8c00517 	ldw	r3,20(sp)
10102fb8:	db000617 	ldw	r12,24(sp)
10102fbc:	d8c01315 	stw	r3,76(sp)
10102fc0:	d9000b17 	ldw	r4,44(sp)
10102fc4:	20038f26 	beq	r4,zero,10103e04 <_dtoa_r+0x1310>
10102fc8:	60bfffc4 	addi	r2,r12,-1
10102fcc:	100490fa 	slli	r2,r2,3
10102fd0:	00c40474 	movhi	r3,4113
10102fd4:	18fe5304 	addi	r3,r3,-1716
10102fd8:	1885883a 	add	r2,r3,r2
10102fdc:	11800017 	ldw	r6,0(r2)
10102fe0:	11c00117 	ldw	r7,4(r2)
10102fe4:	d8800717 	ldw	r2,28(sp)
10102fe8:	0009883a 	mov	r4,zero
10102fec:	014ff834 	movhi	r5,16352
10102ff0:	db001615 	stw	r12,88(sp)
10102ff4:	15c00044 	addi	r23,r2,1
10102ff8:	010b1f80 	call	1010b1f8 <__divdf3>
10102ffc:	800d883a 	mov	r6,r16
10103000:	880f883a 	mov	r7,r17
10103004:	1009883a 	mov	r4,r2
10103008:	180b883a 	mov	r5,r3
1010300c:	010c4500 	call	1010c450 <__subdf3>
10103010:	d9401017 	ldw	r5,64(sp)
10103014:	d9000f17 	ldw	r4,60(sp)
10103018:	102b883a 	mov	r21,r2
1010301c:	d8c01215 	stw	r3,72(sp)
10103020:	010cd4c0 	call	1010cd4c <__fixdfsi>
10103024:	1009883a 	mov	r4,r2
10103028:	1029883a 	mov	r20,r2
1010302c:	010cdcc0 	call	1010cdcc <__floatsidf>
10103030:	d9000f17 	ldw	r4,60(sp)
10103034:	d9401017 	ldw	r5,64(sp)
10103038:	100d883a 	mov	r6,r2
1010303c:	180f883a 	mov	r7,r3
10103040:	010c4500 	call	1010c450 <__subdf3>
10103044:	1823883a 	mov	r17,r3
10103048:	d8c00717 	ldw	r3,28(sp)
1010304c:	d9401217 	ldw	r5,72(sp)
10103050:	a2000c04 	addi	r8,r20,48
10103054:	1021883a 	mov	r16,r2
10103058:	1a000005 	stb	r8,0(r3)
1010305c:	800d883a 	mov	r6,r16
10103060:	880f883a 	mov	r7,r17
10103064:	a809883a 	mov	r4,r21
10103068:	4029883a 	mov	r20,r8
1010306c:	010bb680 	call	1010bb68 <__gedf2>
10103070:	00841d16 	blt	zero,r2,101040e8 <_dtoa_r+0x15f4>
10103074:	800d883a 	mov	r6,r16
10103078:	880f883a 	mov	r7,r17
1010307c:	0009883a 	mov	r4,zero
10103080:	014ffc34 	movhi	r5,16368
10103084:	010c4500 	call	1010c450 <__subdf3>
10103088:	d9401217 	ldw	r5,72(sp)
1010308c:	100d883a 	mov	r6,r2
10103090:	180f883a 	mov	r7,r3
10103094:	a809883a 	mov	r4,r21
10103098:	010bb680 	call	1010bb68 <__gedf2>
1010309c:	db001617 	ldw	r12,88(sp)
101030a0:	00840e16 	blt	zero,r2,101040dc <_dtoa_r+0x15e8>
101030a4:	00800044 	movi	r2,1
101030a8:	13006b0e 	bge	r2,r12,10103258 <_dtoa_r+0x764>
101030ac:	d9000717 	ldw	r4,28(sp)
101030b0:	dd800f15 	stw	r22,60(sp)
101030b4:	dcc01015 	stw	r19,64(sp)
101030b8:	2319883a 	add	r12,r4,r12
101030bc:	dcc01217 	ldw	r19,72(sp)
101030c0:	602d883a 	mov	r22,r12
101030c4:	dc801215 	stw	r18,72(sp)
101030c8:	b825883a 	mov	r18,r23
101030cc:	00000906 	br	101030f4 <_dtoa_r+0x600>
101030d0:	010c4500 	call	1010c450 <__subdf3>
101030d4:	a80d883a 	mov	r6,r21
101030d8:	980f883a 	mov	r7,r19
101030dc:	1009883a 	mov	r4,r2
101030e0:	180b883a 	mov	r5,r3
101030e4:	010bc440 	call	1010bc44 <__ledf2>
101030e8:	1003e816 	blt	r2,zero,1010408c <_dtoa_r+0x1598>
101030ec:	b825883a 	mov	r18,r23
101030f0:	bd83e926 	beq	r23,r22,10104098 <_dtoa_r+0x15a4>
101030f4:	a809883a 	mov	r4,r21
101030f8:	980b883a 	mov	r5,r19
101030fc:	000d883a 	mov	r6,zero
10103100:	01d00934 	movhi	r7,16420
10103104:	010bd380 	call	1010bd38 <__muldf3>
10103108:	000d883a 	mov	r6,zero
1010310c:	01d00934 	movhi	r7,16420
10103110:	8009883a 	mov	r4,r16
10103114:	880b883a 	mov	r5,r17
10103118:	102b883a 	mov	r21,r2
1010311c:	1827883a 	mov	r19,r3
10103120:	010bd380 	call	1010bd38 <__muldf3>
10103124:	180b883a 	mov	r5,r3
10103128:	1009883a 	mov	r4,r2
1010312c:	1821883a 	mov	r16,r3
10103130:	1023883a 	mov	r17,r2
10103134:	010cd4c0 	call	1010cd4c <__fixdfsi>
10103138:	1009883a 	mov	r4,r2
1010313c:	1029883a 	mov	r20,r2
10103140:	010cdcc0 	call	1010cdcc <__floatsidf>
10103144:	8809883a 	mov	r4,r17
10103148:	800b883a 	mov	r5,r16
1010314c:	100d883a 	mov	r6,r2
10103150:	180f883a 	mov	r7,r3
10103154:	010c4500 	call	1010c450 <__subdf3>
10103158:	a5000c04 	addi	r20,r20,48
1010315c:	a80d883a 	mov	r6,r21
10103160:	980f883a 	mov	r7,r19
10103164:	1009883a 	mov	r4,r2
10103168:	180b883a 	mov	r5,r3
1010316c:	95000005 	stb	r20,0(r18)
10103170:	1021883a 	mov	r16,r2
10103174:	1823883a 	mov	r17,r3
10103178:	010bc440 	call	1010bc44 <__ledf2>
1010317c:	bdc00044 	addi	r23,r23,1
10103180:	800d883a 	mov	r6,r16
10103184:	880f883a 	mov	r7,r17
10103188:	0009883a 	mov	r4,zero
1010318c:	014ffc34 	movhi	r5,16368
10103190:	103fcf0e 	bge	r2,zero,101030d0 <__alt_data_end+0xfffe30d0>
10103194:	d8c01317 	ldw	r3,76(sp)
10103198:	d8c00515 	stw	r3,20(sp)
1010319c:	d9400917 	ldw	r5,36(sp)
101031a0:	e009883a 	mov	r4,fp
101031a4:	0105c200 	call	10105c20 <_Bfree>
101031a8:	d9000517 	ldw	r4,20(sp)
101031ac:	d9802317 	ldw	r6,140(sp)
101031b0:	d9c02517 	ldw	r7,148(sp)
101031b4:	b8000005 	stb	zero,0(r23)
101031b8:	20800044 	addi	r2,r4,1
101031bc:	30800015 	stw	r2,0(r6)
101031c0:	3802aa26 	beq	r7,zero,10103c6c <_dtoa_r+0x1178>
101031c4:	3dc00015 	stw	r23,0(r7)
101031c8:	d8800717 	ldw	r2,28(sp)
101031cc:	003e7906 	br	10102bb4 <__alt_data_end+0xfffe2bb4>
101031d0:	00800434 	movhi	r2,16
101031d4:	10bfffc4 	addi	r2,r2,-1
101031d8:	88a2703a 	and	r17,r17,r2
101031dc:	883e851e 	bne	r17,zero,10102bf4 <__alt_data_end+0xfffe2bf4>
101031e0:	00840474 	movhi	r2,4113
101031e4:	10be3504 	addi	r2,r2,-1836
101031e8:	003e8406 	br	10102bfc <__alt_data_end+0xfffe2bfc>
101031ec:	10c00204 	addi	r3,r2,8
101031f0:	003e8706 	br	10102c10 <__alt_data_end+0xfffe2c10>
101031f4:	01400434 	movhi	r5,16
101031f8:	297fffc4 	addi	r5,r5,-1
101031fc:	994a703a 	and	r5,r19,r5
10103200:	9009883a 	mov	r4,r18
10103204:	843f0044 	addi	r16,r16,-1023
10103208:	294ffc34 	orhi	r5,r5,16368
1010320c:	dd800217 	ldw	r22,8(sp)
10103210:	d8001115 	stw	zero,68(sp)
10103214:	003ea506 	br	10102cac <__alt_data_end+0xfffe2cac>
10103218:	00840474 	movhi	r2,4113
1010321c:	10be2c04 	addi	r2,r2,-1872
10103220:	003e6406 	br	10102bb4 <__alt_data_end+0xfffe2bb4>
10103224:	e0001115 	stw	zero,68(fp)
10103228:	000b883a 	mov	r5,zero
1010322c:	e009883a 	mov	r4,fp
10103230:	0105b780 	call	10105b78 <_Balloc>
10103234:	01bfffc4 	movi	r6,-1
10103238:	01c00044 	movi	r7,1
1010323c:	d8800715 	stw	r2,28(sp)
10103240:	d9800c15 	stw	r6,48(sp)
10103244:	e0801015 	stw	r2,64(fp)
10103248:	d8000315 	stw	zero,12(sp)
1010324c:	d9c00b15 	stw	r7,44(sp)
10103250:	d9800615 	stw	r6,24(sp)
10103254:	d8002215 	stw	zero,136(sp)
10103258:	d8800117 	ldw	r2,4(sp)
1010325c:	10008916 	blt	r2,zero,10103484 <_dtoa_r+0x990>
10103260:	d9000517 	ldw	r4,20(sp)
10103264:	00c00384 	movi	r3,14
10103268:	19008616 	blt	r3,r4,10103484 <_dtoa_r+0x990>
1010326c:	200490fa 	slli	r2,r4,3
10103270:	00c40474 	movhi	r3,4113
10103274:	d9802217 	ldw	r6,136(sp)
10103278:	18fe5304 	addi	r3,r3,-1716
1010327c:	1885883a 	add	r2,r3,r2
10103280:	14000017 	ldw	r16,0(r2)
10103284:	14400117 	ldw	r17,4(r2)
10103288:	30016316 	blt	r6,zero,10103818 <_dtoa_r+0xd24>
1010328c:	800d883a 	mov	r6,r16
10103290:	880f883a 	mov	r7,r17
10103294:	9009883a 	mov	r4,r18
10103298:	980b883a 	mov	r5,r19
1010329c:	010b1f80 	call	1010b1f8 <__divdf3>
101032a0:	180b883a 	mov	r5,r3
101032a4:	1009883a 	mov	r4,r2
101032a8:	010cd4c0 	call	1010cd4c <__fixdfsi>
101032ac:	1009883a 	mov	r4,r2
101032b0:	102b883a 	mov	r21,r2
101032b4:	010cdcc0 	call	1010cdcc <__floatsidf>
101032b8:	800d883a 	mov	r6,r16
101032bc:	880f883a 	mov	r7,r17
101032c0:	1009883a 	mov	r4,r2
101032c4:	180b883a 	mov	r5,r3
101032c8:	010bd380 	call	1010bd38 <__muldf3>
101032cc:	100d883a 	mov	r6,r2
101032d0:	180f883a 	mov	r7,r3
101032d4:	9009883a 	mov	r4,r18
101032d8:	980b883a 	mov	r5,r19
101032dc:	010c4500 	call	1010c450 <__subdf3>
101032e0:	d9c00717 	ldw	r7,28(sp)
101032e4:	1009883a 	mov	r4,r2
101032e8:	a8800c04 	addi	r2,r21,48
101032ec:	38800005 	stb	r2,0(r7)
101032f0:	3dc00044 	addi	r23,r7,1
101032f4:	d9c00617 	ldw	r7,24(sp)
101032f8:	01800044 	movi	r6,1
101032fc:	180b883a 	mov	r5,r3
10103300:	2005883a 	mov	r2,r4
10103304:	39803826 	beq	r7,r6,101033e8 <_dtoa_r+0x8f4>
10103308:	000d883a 	mov	r6,zero
1010330c:	01d00934 	movhi	r7,16420
10103310:	010bd380 	call	1010bd38 <__muldf3>
10103314:	000d883a 	mov	r6,zero
10103318:	000f883a 	mov	r7,zero
1010331c:	1009883a 	mov	r4,r2
10103320:	180b883a 	mov	r5,r3
10103324:	1025883a 	mov	r18,r2
10103328:	1827883a 	mov	r19,r3
1010332c:	010bae00 	call	1010bae0 <__eqdf2>
10103330:	103f9a26 	beq	r2,zero,1010319c <__alt_data_end+0xfffe319c>
10103334:	d9c00617 	ldw	r7,24(sp)
10103338:	d8c00717 	ldw	r3,28(sp)
1010333c:	b829883a 	mov	r20,r23
10103340:	38bfffc4 	addi	r2,r7,-1
10103344:	18ad883a 	add	r22,r3,r2
10103348:	00000a06 	br	10103374 <_dtoa_r+0x880>
1010334c:	010bd380 	call	1010bd38 <__muldf3>
10103350:	000d883a 	mov	r6,zero
10103354:	000f883a 	mov	r7,zero
10103358:	1009883a 	mov	r4,r2
1010335c:	180b883a 	mov	r5,r3
10103360:	1025883a 	mov	r18,r2
10103364:	1827883a 	mov	r19,r3
10103368:	b829883a 	mov	r20,r23
1010336c:	010bae00 	call	1010bae0 <__eqdf2>
10103370:	103f8a26 	beq	r2,zero,1010319c <__alt_data_end+0xfffe319c>
10103374:	800d883a 	mov	r6,r16
10103378:	880f883a 	mov	r7,r17
1010337c:	9009883a 	mov	r4,r18
10103380:	980b883a 	mov	r5,r19
10103384:	010b1f80 	call	1010b1f8 <__divdf3>
10103388:	180b883a 	mov	r5,r3
1010338c:	1009883a 	mov	r4,r2
10103390:	010cd4c0 	call	1010cd4c <__fixdfsi>
10103394:	1009883a 	mov	r4,r2
10103398:	102b883a 	mov	r21,r2
1010339c:	010cdcc0 	call	1010cdcc <__floatsidf>
101033a0:	800d883a 	mov	r6,r16
101033a4:	880f883a 	mov	r7,r17
101033a8:	1009883a 	mov	r4,r2
101033ac:	180b883a 	mov	r5,r3
101033b0:	010bd380 	call	1010bd38 <__muldf3>
101033b4:	100d883a 	mov	r6,r2
101033b8:	180f883a 	mov	r7,r3
101033bc:	9009883a 	mov	r4,r18
101033c0:	980b883a 	mov	r5,r19
101033c4:	010c4500 	call	1010c450 <__subdf3>
101033c8:	aa000c04 	addi	r8,r21,48
101033cc:	a2000005 	stb	r8,0(r20)
101033d0:	000d883a 	mov	r6,zero
101033d4:	01d00934 	movhi	r7,16420
101033d8:	1009883a 	mov	r4,r2
101033dc:	180b883a 	mov	r5,r3
101033e0:	a5c00044 	addi	r23,r20,1
101033e4:	b53fd91e 	bne	r22,r20,1010334c <__alt_data_end+0xfffe334c>
101033e8:	100d883a 	mov	r6,r2
101033ec:	180f883a 	mov	r7,r3
101033f0:	1009883a 	mov	r4,r2
101033f4:	180b883a 	mov	r5,r3
101033f8:	010a94c0 	call	1010a94c <__adddf3>
101033fc:	100d883a 	mov	r6,r2
10103400:	180f883a 	mov	r7,r3
10103404:	8009883a 	mov	r4,r16
10103408:	880b883a 	mov	r5,r17
1010340c:	1027883a 	mov	r19,r2
10103410:	1825883a 	mov	r18,r3
10103414:	010bc440 	call	1010bc44 <__ledf2>
10103418:	10000816 	blt	r2,zero,1010343c <_dtoa_r+0x948>
1010341c:	980d883a 	mov	r6,r19
10103420:	900f883a 	mov	r7,r18
10103424:	8009883a 	mov	r4,r16
10103428:	880b883a 	mov	r5,r17
1010342c:	010bae00 	call	1010bae0 <__eqdf2>
10103430:	103f5a1e 	bne	r2,zero,1010319c <__alt_data_end+0xfffe319c>
10103434:	ad40004c 	andi	r21,r21,1
10103438:	a83f5826 	beq	r21,zero,1010319c <__alt_data_end+0xfffe319c>
1010343c:	bd3fffc3 	ldbu	r20,-1(r23)
10103440:	b8bfffc4 	addi	r2,r23,-1
10103444:	1007883a 	mov	r3,r2
10103448:	01400e44 	movi	r5,57
1010344c:	d9800717 	ldw	r6,28(sp)
10103450:	00000506 	br	10103468 <_dtoa_r+0x974>
10103454:	18ffffc4 	addi	r3,r3,-1
10103458:	11824726 	beq	r2,r6,10103d78 <_dtoa_r+0x1284>
1010345c:	1d000003 	ldbu	r20,0(r3)
10103460:	102f883a 	mov	r23,r2
10103464:	10bfffc4 	addi	r2,r2,-1
10103468:	a1003fcc 	andi	r4,r20,255
1010346c:	2100201c 	xori	r4,r4,128
10103470:	213fe004 	addi	r4,r4,-128
10103474:	217ff726 	beq	r4,r5,10103454 <__alt_data_end+0xfffe3454>
10103478:	a2000044 	addi	r8,r20,1
1010347c:	12000005 	stb	r8,0(r2)
10103480:	003f4606 	br	1010319c <__alt_data_end+0xfffe319c>
10103484:	d9000b17 	ldw	r4,44(sp)
10103488:	2000c826 	beq	r4,zero,101037ac <_dtoa_r+0xcb8>
1010348c:	d9800317 	ldw	r6,12(sp)
10103490:	00c00044 	movi	r3,1
10103494:	1980f90e 	bge	r3,r6,1010387c <_dtoa_r+0xd88>
10103498:	d8800617 	ldw	r2,24(sp)
1010349c:	d8c00a17 	ldw	r3,40(sp)
101034a0:	157fffc4 	addi	r21,r2,-1
101034a4:	1d41f316 	blt	r3,r21,10103c74 <_dtoa_r+0x1180>
101034a8:	1d6bc83a 	sub	r21,r3,r21
101034ac:	d9c00617 	ldw	r7,24(sp)
101034b0:	3802aa16 	blt	r7,zero,10103f5c <_dtoa_r+0x1468>
101034b4:	dd000817 	ldw	r20,32(sp)
101034b8:	d8800617 	ldw	r2,24(sp)
101034bc:	d8c00817 	ldw	r3,32(sp)
101034c0:	01400044 	movi	r5,1
101034c4:	e009883a 	mov	r4,fp
101034c8:	1887883a 	add	r3,r3,r2
101034cc:	d8c00815 	stw	r3,32(sp)
101034d0:	b0ad883a 	add	r22,r22,r2
101034d4:	0105f840 	call	10105f84 <__i2b>
101034d8:	1023883a 	mov	r17,r2
101034dc:	a0000826 	beq	r20,zero,10103500 <_dtoa_r+0xa0c>
101034e0:	0580070e 	bge	zero,r22,10103500 <_dtoa_r+0xa0c>
101034e4:	a005883a 	mov	r2,r20
101034e8:	b500b916 	blt	r22,r20,101037d0 <_dtoa_r+0xcdc>
101034ec:	d9000817 	ldw	r4,32(sp)
101034f0:	a0a9c83a 	sub	r20,r20,r2
101034f4:	b0adc83a 	sub	r22,r22,r2
101034f8:	2089c83a 	sub	r4,r4,r2
101034fc:	d9000815 	stw	r4,32(sp)
10103500:	d9800a17 	ldw	r6,40(sp)
10103504:	0181810e 	bge	zero,r6,10103b0c <_dtoa_r+0x1018>
10103508:	d9c00b17 	ldw	r7,44(sp)
1010350c:	3800b326 	beq	r7,zero,101037dc <_dtoa_r+0xce8>
10103510:	a800b226 	beq	r21,zero,101037dc <_dtoa_r+0xce8>
10103514:	880b883a 	mov	r5,r17
10103518:	a80d883a 	mov	r6,r21
1010351c:	e009883a 	mov	r4,fp
10103520:	01061b80 	call	101061b8 <__pow5mult>
10103524:	d9800917 	ldw	r6,36(sp)
10103528:	100b883a 	mov	r5,r2
1010352c:	e009883a 	mov	r4,fp
10103530:	1023883a 	mov	r17,r2
10103534:	0105fc00 	call	10105fc0 <__multiply>
10103538:	1021883a 	mov	r16,r2
1010353c:	d8800a17 	ldw	r2,40(sp)
10103540:	d9400917 	ldw	r5,36(sp)
10103544:	e009883a 	mov	r4,fp
10103548:	1545c83a 	sub	r2,r2,r21
1010354c:	d8800a15 	stw	r2,40(sp)
10103550:	0105c200 	call	10105c20 <_Bfree>
10103554:	d8c00a17 	ldw	r3,40(sp)
10103558:	18009f1e 	bne	r3,zero,101037d8 <_dtoa_r+0xce4>
1010355c:	05c00044 	movi	r23,1
10103560:	e009883a 	mov	r4,fp
10103564:	b80b883a 	mov	r5,r23
10103568:	0105f840 	call	10105f84 <__i2b>
1010356c:	d9000d17 	ldw	r4,52(sp)
10103570:	102b883a 	mov	r21,r2
10103574:	2000ce26 	beq	r4,zero,101038b0 <_dtoa_r+0xdbc>
10103578:	200d883a 	mov	r6,r4
1010357c:	100b883a 	mov	r5,r2
10103580:	e009883a 	mov	r4,fp
10103584:	01061b80 	call	101061b8 <__pow5mult>
10103588:	d9800317 	ldw	r6,12(sp)
1010358c:	102b883a 	mov	r21,r2
10103590:	b981810e 	bge	r23,r6,10103b98 <_dtoa_r+0x10a4>
10103594:	0027883a 	mov	r19,zero
10103598:	a8800417 	ldw	r2,16(r21)
1010359c:	05c00804 	movi	r23,32
101035a0:	10800104 	addi	r2,r2,4
101035a4:	1085883a 	add	r2,r2,r2
101035a8:	1085883a 	add	r2,r2,r2
101035ac:	a885883a 	add	r2,r21,r2
101035b0:	11000017 	ldw	r4,0(r2)
101035b4:	0105e6c0 	call	10105e6c <__hi0bits>
101035b8:	b885c83a 	sub	r2,r23,r2
101035bc:	1585883a 	add	r2,r2,r22
101035c0:	108007cc 	andi	r2,r2,31
101035c4:	1000b326 	beq	r2,zero,10103894 <_dtoa_r+0xda0>
101035c8:	00c00804 	movi	r3,32
101035cc:	1887c83a 	sub	r3,r3,r2
101035d0:	01000104 	movi	r4,4
101035d4:	20c2cd0e 	bge	r4,r3,1010410c <_dtoa_r+0x1618>
101035d8:	00c00704 	movi	r3,28
101035dc:	1885c83a 	sub	r2,r3,r2
101035e0:	d8c00817 	ldw	r3,32(sp)
101035e4:	a0a9883a 	add	r20,r20,r2
101035e8:	b0ad883a 	add	r22,r22,r2
101035ec:	1887883a 	add	r3,r3,r2
101035f0:	d8c00815 	stw	r3,32(sp)
101035f4:	d9800817 	ldw	r6,32(sp)
101035f8:	0180040e 	bge	zero,r6,1010360c <_dtoa_r+0xb18>
101035fc:	800b883a 	mov	r5,r16
10103600:	e009883a 	mov	r4,fp
10103604:	01062f80 	call	101062f8 <__lshift>
10103608:	1021883a 	mov	r16,r2
1010360c:	0580050e 	bge	zero,r22,10103624 <_dtoa_r+0xb30>
10103610:	a80b883a 	mov	r5,r21
10103614:	b00d883a 	mov	r6,r22
10103618:	e009883a 	mov	r4,fp
1010361c:	01062f80 	call	101062f8 <__lshift>
10103620:	102b883a 	mov	r21,r2
10103624:	d9c00e17 	ldw	r7,56(sp)
10103628:	3801211e 	bne	r7,zero,10103ab0 <_dtoa_r+0xfbc>
1010362c:	d9800617 	ldw	r6,24(sp)
10103630:	0181380e 	bge	zero,r6,10103b14 <_dtoa_r+0x1020>
10103634:	d8c00b17 	ldw	r3,44(sp)
10103638:	1800ab1e 	bne	r3,zero,101038e8 <_dtoa_r+0xdf4>
1010363c:	dc800717 	ldw	r18,28(sp)
10103640:	dcc00617 	ldw	r19,24(sp)
10103644:	9029883a 	mov	r20,r18
10103648:	00000206 	br	10103654 <_dtoa_r+0xb60>
1010364c:	0105c480 	call	10105c48 <__multadd>
10103650:	1021883a 	mov	r16,r2
10103654:	a80b883a 	mov	r5,r21
10103658:	8009883a 	mov	r4,r16
1010365c:	01028f40 	call	101028f4 <quorem>
10103660:	10800c04 	addi	r2,r2,48
10103664:	90800005 	stb	r2,0(r18)
10103668:	94800044 	addi	r18,r18,1
1010366c:	9507c83a 	sub	r3,r18,r20
10103670:	000f883a 	mov	r7,zero
10103674:	01800284 	movi	r6,10
10103678:	800b883a 	mov	r5,r16
1010367c:	e009883a 	mov	r4,fp
10103680:	1cfff216 	blt	r3,r19,1010364c <__alt_data_end+0xfffe364c>
10103684:	1011883a 	mov	r8,r2
10103688:	d8800617 	ldw	r2,24(sp)
1010368c:	0082370e 	bge	zero,r2,10103f6c <_dtoa_r+0x1478>
10103690:	d9000717 	ldw	r4,28(sp)
10103694:	0025883a 	mov	r18,zero
10103698:	20af883a 	add	r23,r4,r2
1010369c:	01800044 	movi	r6,1
101036a0:	800b883a 	mov	r5,r16
101036a4:	e009883a 	mov	r4,fp
101036a8:	da001715 	stw	r8,92(sp)
101036ac:	01062f80 	call	101062f8 <__lshift>
101036b0:	a80b883a 	mov	r5,r21
101036b4:	1009883a 	mov	r4,r2
101036b8:	d8800915 	stw	r2,36(sp)
101036bc:	01064400 	call	10106440 <__mcmp>
101036c0:	da001717 	ldw	r8,92(sp)
101036c4:	0081800e 	bge	zero,r2,10103cc8 <_dtoa_r+0x11d4>
101036c8:	b93fffc3 	ldbu	r4,-1(r23)
101036cc:	b8bfffc4 	addi	r2,r23,-1
101036d0:	1007883a 	mov	r3,r2
101036d4:	01800e44 	movi	r6,57
101036d8:	d9c00717 	ldw	r7,28(sp)
101036dc:	00000506 	br	101036f4 <_dtoa_r+0xc00>
101036e0:	18ffffc4 	addi	r3,r3,-1
101036e4:	11c12326 	beq	r2,r7,10103b74 <_dtoa_r+0x1080>
101036e8:	19000003 	ldbu	r4,0(r3)
101036ec:	102f883a 	mov	r23,r2
101036f0:	10bfffc4 	addi	r2,r2,-1
101036f4:	21403fcc 	andi	r5,r4,255
101036f8:	2940201c 	xori	r5,r5,128
101036fc:	297fe004 	addi	r5,r5,-128
10103700:	29bff726 	beq	r5,r6,101036e0 <__alt_data_end+0xfffe36e0>
10103704:	21000044 	addi	r4,r4,1
10103708:	11000005 	stb	r4,0(r2)
1010370c:	a80b883a 	mov	r5,r21
10103710:	e009883a 	mov	r4,fp
10103714:	0105c200 	call	10105c20 <_Bfree>
10103718:	883ea026 	beq	r17,zero,1010319c <__alt_data_end+0xfffe319c>
1010371c:	90000426 	beq	r18,zero,10103730 <_dtoa_r+0xc3c>
10103720:	94400326 	beq	r18,r17,10103730 <_dtoa_r+0xc3c>
10103724:	900b883a 	mov	r5,r18
10103728:	e009883a 	mov	r4,fp
1010372c:	0105c200 	call	10105c20 <_Bfree>
10103730:	880b883a 	mov	r5,r17
10103734:	e009883a 	mov	r4,fp
10103738:	0105c200 	call	10105c20 <_Bfree>
1010373c:	003e9706 	br	1010319c <__alt_data_end+0xfffe319c>
10103740:	01800044 	movi	r6,1
10103744:	d9800e15 	stw	r6,56(sp)
10103748:	003d9606 	br	10102da4 <__alt_data_end+0xfffe2da4>
1010374c:	d8800817 	ldw	r2,32(sp)
10103750:	d8c00517 	ldw	r3,20(sp)
10103754:	d8000d15 	stw	zero,52(sp)
10103758:	10c5c83a 	sub	r2,r2,r3
1010375c:	00c9c83a 	sub	r4,zero,r3
10103760:	d8800815 	stw	r2,32(sp)
10103764:	d9000a15 	stw	r4,40(sp)
10103768:	003d9706 	br	10102dc8 <__alt_data_end+0xfffe2dc8>
1010376c:	05adc83a 	sub	r22,zero,r22
10103770:	dd800815 	stw	r22,32(sp)
10103774:	002d883a 	mov	r22,zero
10103778:	003d8e06 	br	10102db4 <__alt_data_end+0xfffe2db4>
1010377c:	d9000517 	ldw	r4,20(sp)
10103780:	010cdcc0 	call	1010cdcc <__floatsidf>
10103784:	100d883a 	mov	r6,r2
10103788:	180f883a 	mov	r7,r3
1010378c:	a009883a 	mov	r4,r20
10103790:	880b883a 	mov	r5,r17
10103794:	010bae00 	call	1010bae0 <__eqdf2>
10103798:	103d7126 	beq	r2,zero,10102d60 <__alt_data_end+0xfffe2d60>
1010379c:	d9c00517 	ldw	r7,20(sp)
101037a0:	39ffffc4 	addi	r7,r7,-1
101037a4:	d9c00515 	stw	r7,20(sp)
101037a8:	003d6d06 	br	10102d60 <__alt_data_end+0xfffe2d60>
101037ac:	dd400a17 	ldw	r21,40(sp)
101037b0:	dd000817 	ldw	r20,32(sp)
101037b4:	0023883a 	mov	r17,zero
101037b8:	003f4806 	br	101034dc <__alt_data_end+0xfffe34dc>
101037bc:	10e3c83a 	sub	r17,r2,r3
101037c0:	9448983a 	sll	r4,r18,r17
101037c4:	003d3206 	br	10102c90 <__alt_data_end+0xfffe2c90>
101037c8:	d8000e15 	stw	zero,56(sp)
101037cc:	003d7506 	br	10102da4 <__alt_data_end+0xfffe2da4>
101037d0:	b005883a 	mov	r2,r22
101037d4:	003f4506 	br	101034ec <__alt_data_end+0xfffe34ec>
101037d8:	dc000915 	stw	r16,36(sp)
101037dc:	d9800a17 	ldw	r6,40(sp)
101037e0:	d9400917 	ldw	r5,36(sp)
101037e4:	e009883a 	mov	r4,fp
101037e8:	01061b80 	call	101061b8 <__pow5mult>
101037ec:	1021883a 	mov	r16,r2
101037f0:	003f5a06 	br	1010355c <__alt_data_end+0xfffe355c>
101037f4:	01c00044 	movi	r7,1
101037f8:	d9c00b15 	stw	r7,44(sp)
101037fc:	d8802217 	ldw	r2,136(sp)
10103800:	0081280e 	bge	zero,r2,10103ca4 <_dtoa_r+0x11b0>
10103804:	100d883a 	mov	r6,r2
10103808:	1021883a 	mov	r16,r2
1010380c:	d8800c15 	stw	r2,48(sp)
10103810:	d8800615 	stw	r2,24(sp)
10103814:	003d8806 	br	10102e38 <__alt_data_end+0xfffe2e38>
10103818:	d8800617 	ldw	r2,24(sp)
1010381c:	00be9b16 	blt	zero,r2,1010328c <__alt_data_end+0xfffe328c>
10103820:	10010f1e 	bne	r2,zero,10103c60 <_dtoa_r+0x116c>
10103824:	880b883a 	mov	r5,r17
10103828:	000d883a 	mov	r6,zero
1010382c:	01d00534 	movhi	r7,16404
10103830:	8009883a 	mov	r4,r16
10103834:	010bd380 	call	1010bd38 <__muldf3>
10103838:	900d883a 	mov	r6,r18
1010383c:	980f883a 	mov	r7,r19
10103840:	1009883a 	mov	r4,r2
10103844:	180b883a 	mov	r5,r3
10103848:	010bb680 	call	1010bb68 <__gedf2>
1010384c:	002b883a 	mov	r21,zero
10103850:	0023883a 	mov	r17,zero
10103854:	1000bf16 	blt	r2,zero,10103b54 <_dtoa_r+0x1060>
10103858:	d9802217 	ldw	r6,136(sp)
1010385c:	ddc00717 	ldw	r23,28(sp)
10103860:	018c303a 	nor	r6,zero,r6
10103864:	d9800515 	stw	r6,20(sp)
10103868:	a80b883a 	mov	r5,r21
1010386c:	e009883a 	mov	r4,fp
10103870:	0105c200 	call	10105c20 <_Bfree>
10103874:	883e4926 	beq	r17,zero,1010319c <__alt_data_end+0xfffe319c>
10103878:	003fad06 	br	10103730 <__alt_data_end+0xfffe3730>
1010387c:	d9c01117 	ldw	r7,68(sp)
10103880:	3801bc26 	beq	r7,zero,10103f74 <_dtoa_r+0x1480>
10103884:	10810cc4 	addi	r2,r2,1075
10103888:	dd400a17 	ldw	r21,40(sp)
1010388c:	dd000817 	ldw	r20,32(sp)
10103890:	003f0a06 	br	101034bc <__alt_data_end+0xfffe34bc>
10103894:	00800704 	movi	r2,28
10103898:	d9000817 	ldw	r4,32(sp)
1010389c:	a0a9883a 	add	r20,r20,r2
101038a0:	b0ad883a 	add	r22,r22,r2
101038a4:	2089883a 	add	r4,r4,r2
101038a8:	d9000815 	stw	r4,32(sp)
101038ac:	003f5106 	br	101035f4 <__alt_data_end+0xfffe35f4>
101038b0:	d8c00317 	ldw	r3,12(sp)
101038b4:	b8c1fc0e 	bge	r23,r3,101040a8 <_dtoa_r+0x15b4>
101038b8:	0027883a 	mov	r19,zero
101038bc:	b805883a 	mov	r2,r23
101038c0:	003f3e06 	br	101035bc <__alt_data_end+0xfffe35bc>
101038c4:	880b883a 	mov	r5,r17
101038c8:	e009883a 	mov	r4,fp
101038cc:	000f883a 	mov	r7,zero
101038d0:	01800284 	movi	r6,10
101038d4:	0105c480 	call	10105c48 <__multadd>
101038d8:	d9000c17 	ldw	r4,48(sp)
101038dc:	1023883a 	mov	r17,r2
101038e0:	0102040e 	bge	zero,r4,101040f4 <_dtoa_r+0x1600>
101038e4:	d9000615 	stw	r4,24(sp)
101038e8:	0500050e 	bge	zero,r20,10103900 <_dtoa_r+0xe0c>
101038ec:	880b883a 	mov	r5,r17
101038f0:	a00d883a 	mov	r6,r20
101038f4:	e009883a 	mov	r4,fp
101038f8:	01062f80 	call	101062f8 <__lshift>
101038fc:	1023883a 	mov	r17,r2
10103900:	9801241e 	bne	r19,zero,10103d94 <_dtoa_r+0x12a0>
10103904:	8829883a 	mov	r20,r17
10103908:	d9000617 	ldw	r4,24(sp)
1010390c:	dcc00717 	ldw	r19,28(sp)
10103910:	9480004c 	andi	r18,r18,1
10103914:	20bfffc4 	addi	r2,r4,-1
10103918:	9885883a 	add	r2,r19,r2
1010391c:	d8800415 	stw	r2,16(sp)
10103920:	dc800615 	stw	r18,24(sp)
10103924:	a80b883a 	mov	r5,r21
10103928:	8009883a 	mov	r4,r16
1010392c:	01028f40 	call	101028f4 <quorem>
10103930:	880b883a 	mov	r5,r17
10103934:	8009883a 	mov	r4,r16
10103938:	102f883a 	mov	r23,r2
1010393c:	01064400 	call	10106440 <__mcmp>
10103940:	a80b883a 	mov	r5,r21
10103944:	a00d883a 	mov	r6,r20
10103948:	e009883a 	mov	r4,fp
1010394c:	102d883a 	mov	r22,r2
10103950:	01064a00 	call	101064a0 <__mdiff>
10103954:	1007883a 	mov	r3,r2
10103958:	10800317 	ldw	r2,12(r2)
1010395c:	bc800c04 	addi	r18,r23,48
10103960:	180b883a 	mov	r5,r3
10103964:	10004e1e 	bne	r2,zero,10103aa0 <_dtoa_r+0xfac>
10103968:	8009883a 	mov	r4,r16
1010396c:	d8c01615 	stw	r3,88(sp)
10103970:	01064400 	call	10106440 <__mcmp>
10103974:	d8c01617 	ldw	r3,88(sp)
10103978:	e009883a 	mov	r4,fp
1010397c:	d8801615 	stw	r2,88(sp)
10103980:	180b883a 	mov	r5,r3
10103984:	0105c200 	call	10105c20 <_Bfree>
10103988:	d8801617 	ldw	r2,88(sp)
1010398c:	1000041e 	bne	r2,zero,101039a0 <_dtoa_r+0xeac>
10103990:	d9800317 	ldw	r6,12(sp)
10103994:	3000021e 	bne	r6,zero,101039a0 <_dtoa_r+0xeac>
10103998:	d8c00617 	ldw	r3,24(sp)
1010399c:	18003726 	beq	r3,zero,10103a7c <_dtoa_r+0xf88>
101039a0:	b0002016 	blt	r22,zero,10103a24 <_dtoa_r+0xf30>
101039a4:	b000041e 	bne	r22,zero,101039b8 <_dtoa_r+0xec4>
101039a8:	d9000317 	ldw	r4,12(sp)
101039ac:	2000021e 	bne	r4,zero,101039b8 <_dtoa_r+0xec4>
101039b0:	d8c00617 	ldw	r3,24(sp)
101039b4:	18001b26 	beq	r3,zero,10103a24 <_dtoa_r+0xf30>
101039b8:	00810716 	blt	zero,r2,10103dd8 <_dtoa_r+0x12e4>
101039bc:	d8c00417 	ldw	r3,16(sp)
101039c0:	9d800044 	addi	r22,r19,1
101039c4:	9c800005 	stb	r18,0(r19)
101039c8:	b02f883a 	mov	r23,r22
101039cc:	98c10626 	beq	r19,r3,10103de8 <_dtoa_r+0x12f4>
101039d0:	800b883a 	mov	r5,r16
101039d4:	000f883a 	mov	r7,zero
101039d8:	01800284 	movi	r6,10
101039dc:	e009883a 	mov	r4,fp
101039e0:	0105c480 	call	10105c48 <__multadd>
101039e4:	1021883a 	mov	r16,r2
101039e8:	000f883a 	mov	r7,zero
101039ec:	01800284 	movi	r6,10
101039f0:	880b883a 	mov	r5,r17
101039f4:	e009883a 	mov	r4,fp
101039f8:	8d002526 	beq	r17,r20,10103a90 <_dtoa_r+0xf9c>
101039fc:	0105c480 	call	10105c48 <__multadd>
10103a00:	a00b883a 	mov	r5,r20
10103a04:	000f883a 	mov	r7,zero
10103a08:	01800284 	movi	r6,10
10103a0c:	e009883a 	mov	r4,fp
10103a10:	1023883a 	mov	r17,r2
10103a14:	0105c480 	call	10105c48 <__multadd>
10103a18:	1029883a 	mov	r20,r2
10103a1c:	b027883a 	mov	r19,r22
10103a20:	003fc006 	br	10103924 <__alt_data_end+0xfffe3924>
10103a24:	9011883a 	mov	r8,r18
10103a28:	00800e0e 	bge	zero,r2,10103a64 <_dtoa_r+0xf70>
10103a2c:	800b883a 	mov	r5,r16
10103a30:	01800044 	movi	r6,1
10103a34:	e009883a 	mov	r4,fp
10103a38:	da001715 	stw	r8,92(sp)
10103a3c:	01062f80 	call	101062f8 <__lshift>
10103a40:	a80b883a 	mov	r5,r21
10103a44:	1009883a 	mov	r4,r2
10103a48:	1021883a 	mov	r16,r2
10103a4c:	01064400 	call	10106440 <__mcmp>
10103a50:	da001717 	ldw	r8,92(sp)
10103a54:	0081960e 	bge	zero,r2,101040b0 <_dtoa_r+0x15bc>
10103a58:	00800e44 	movi	r2,57
10103a5c:	40817026 	beq	r8,r2,10104020 <_dtoa_r+0x152c>
10103a60:	ba000c44 	addi	r8,r23,49
10103a64:	8825883a 	mov	r18,r17
10103a68:	9dc00044 	addi	r23,r19,1
10103a6c:	9a000005 	stb	r8,0(r19)
10103a70:	a023883a 	mov	r17,r20
10103a74:	dc000915 	stw	r16,36(sp)
10103a78:	003f2406 	br	1010370c <__alt_data_end+0xfffe370c>
10103a7c:	00800e44 	movi	r2,57
10103a80:	9011883a 	mov	r8,r18
10103a84:	90816626 	beq	r18,r2,10104020 <_dtoa_r+0x152c>
10103a88:	05bff516 	blt	zero,r22,10103a60 <__alt_data_end+0xfffe3a60>
10103a8c:	003ff506 	br	10103a64 <__alt_data_end+0xfffe3a64>
10103a90:	0105c480 	call	10105c48 <__multadd>
10103a94:	1023883a 	mov	r17,r2
10103a98:	1029883a 	mov	r20,r2
10103a9c:	003fdf06 	br	10103a1c <__alt_data_end+0xfffe3a1c>
10103aa0:	e009883a 	mov	r4,fp
10103aa4:	0105c200 	call	10105c20 <_Bfree>
10103aa8:	00800044 	movi	r2,1
10103aac:	003fbc06 	br	101039a0 <__alt_data_end+0xfffe39a0>
10103ab0:	a80b883a 	mov	r5,r21
10103ab4:	8009883a 	mov	r4,r16
10103ab8:	01064400 	call	10106440 <__mcmp>
10103abc:	103edb0e 	bge	r2,zero,1010362c <__alt_data_end+0xfffe362c>
10103ac0:	800b883a 	mov	r5,r16
10103ac4:	000f883a 	mov	r7,zero
10103ac8:	01800284 	movi	r6,10
10103acc:	e009883a 	mov	r4,fp
10103ad0:	0105c480 	call	10105c48 <__multadd>
10103ad4:	1021883a 	mov	r16,r2
10103ad8:	d8800517 	ldw	r2,20(sp)
10103adc:	d8c00b17 	ldw	r3,44(sp)
10103ae0:	10bfffc4 	addi	r2,r2,-1
10103ae4:	d8800515 	stw	r2,20(sp)
10103ae8:	183f761e 	bne	r3,zero,101038c4 <__alt_data_end+0xfffe38c4>
10103aec:	d9000c17 	ldw	r4,48(sp)
10103af0:	0101730e 	bge	zero,r4,101040c0 <_dtoa_r+0x15cc>
10103af4:	d9000615 	stw	r4,24(sp)
10103af8:	003ed006 	br	1010363c <__alt_data_end+0xfffe363c>
10103afc:	00800084 	movi	r2,2
10103b00:	3081861e 	bne	r6,r2,1010411c <_dtoa_r+0x1628>
10103b04:	d8000b15 	stw	zero,44(sp)
10103b08:	003f3c06 	br	101037fc <__alt_data_end+0xfffe37fc>
10103b0c:	dc000917 	ldw	r16,36(sp)
10103b10:	003e9206 	br	1010355c <__alt_data_end+0xfffe355c>
10103b14:	d9c00317 	ldw	r7,12(sp)
10103b18:	00800084 	movi	r2,2
10103b1c:	11fec50e 	bge	r2,r7,10103634 <__alt_data_end+0xfffe3634>
10103b20:	d9000617 	ldw	r4,24(sp)
10103b24:	20013c1e 	bne	r4,zero,10104018 <_dtoa_r+0x1524>
10103b28:	a80b883a 	mov	r5,r21
10103b2c:	000f883a 	mov	r7,zero
10103b30:	01800144 	movi	r6,5
10103b34:	e009883a 	mov	r4,fp
10103b38:	0105c480 	call	10105c48 <__multadd>
10103b3c:	100b883a 	mov	r5,r2
10103b40:	8009883a 	mov	r4,r16
10103b44:	102b883a 	mov	r21,r2
10103b48:	01064400 	call	10106440 <__mcmp>
10103b4c:	dc000915 	stw	r16,36(sp)
10103b50:	00bf410e 	bge	zero,r2,10103858 <__alt_data_end+0xfffe3858>
10103b54:	d9c00717 	ldw	r7,28(sp)
10103b58:	00800c44 	movi	r2,49
10103b5c:	38800005 	stb	r2,0(r7)
10103b60:	d8800517 	ldw	r2,20(sp)
10103b64:	3dc00044 	addi	r23,r7,1
10103b68:	10800044 	addi	r2,r2,1
10103b6c:	d8800515 	stw	r2,20(sp)
10103b70:	003f3d06 	br	10103868 <__alt_data_end+0xfffe3868>
10103b74:	d9800517 	ldw	r6,20(sp)
10103b78:	d9c00717 	ldw	r7,28(sp)
10103b7c:	00800c44 	movi	r2,49
10103b80:	31800044 	addi	r6,r6,1
10103b84:	d9800515 	stw	r6,20(sp)
10103b88:	38800005 	stb	r2,0(r7)
10103b8c:	003edf06 	br	1010370c <__alt_data_end+0xfffe370c>
10103b90:	d8000b15 	stw	zero,44(sp)
10103b94:	003c9f06 	br	10102e14 <__alt_data_end+0xfffe2e14>
10103b98:	903e7e1e 	bne	r18,zero,10103594 <__alt_data_end+0xfffe3594>
10103b9c:	00800434 	movhi	r2,16
10103ba0:	10bfffc4 	addi	r2,r2,-1
10103ba4:	9884703a 	and	r2,r19,r2
10103ba8:	1000ea1e 	bne	r2,zero,10103f54 <_dtoa_r+0x1460>
10103bac:	9cdffc2c 	andhi	r19,r19,32752
10103bb0:	9800e826 	beq	r19,zero,10103f54 <_dtoa_r+0x1460>
10103bb4:	d9c00817 	ldw	r7,32(sp)
10103bb8:	b5800044 	addi	r22,r22,1
10103bbc:	04c00044 	movi	r19,1
10103bc0:	39c00044 	addi	r7,r7,1
10103bc4:	d9c00815 	stw	r7,32(sp)
10103bc8:	d8800d17 	ldw	r2,52(sp)
10103bcc:	103e721e 	bne	r2,zero,10103598 <__alt_data_end+0xfffe3598>
10103bd0:	00800044 	movi	r2,1
10103bd4:	003e7906 	br	101035bc <__alt_data_end+0xfffe35bc>
10103bd8:	8009883a 	mov	r4,r16
10103bdc:	010cdcc0 	call	1010cdcc <__floatsidf>
10103be0:	d9800f17 	ldw	r6,60(sp)
10103be4:	d9c01017 	ldw	r7,64(sp)
10103be8:	1009883a 	mov	r4,r2
10103bec:	180b883a 	mov	r5,r3
10103bf0:	010bd380 	call	1010bd38 <__muldf3>
10103bf4:	000d883a 	mov	r6,zero
10103bf8:	01d00734 	movhi	r7,16412
10103bfc:	1009883a 	mov	r4,r2
10103c00:	180b883a 	mov	r5,r3
10103c04:	010a94c0 	call	1010a94c <__adddf3>
10103c08:	047f3034 	movhi	r17,64704
10103c0c:	1021883a 	mov	r16,r2
10103c10:	1c63883a 	add	r17,r3,r17
10103c14:	d9000f17 	ldw	r4,60(sp)
10103c18:	d9401017 	ldw	r5,64(sp)
10103c1c:	000d883a 	mov	r6,zero
10103c20:	01d00534 	movhi	r7,16404
10103c24:	010c4500 	call	1010c450 <__subdf3>
10103c28:	800d883a 	mov	r6,r16
10103c2c:	880f883a 	mov	r7,r17
10103c30:	1009883a 	mov	r4,r2
10103c34:	180b883a 	mov	r5,r3
10103c38:	102b883a 	mov	r21,r2
10103c3c:	1829883a 	mov	r20,r3
10103c40:	010bb680 	call	1010bb68 <__gedf2>
10103c44:	00806c16 	blt	zero,r2,10103df8 <_dtoa_r+0x1304>
10103c48:	89e0003c 	xorhi	r7,r17,32768
10103c4c:	800d883a 	mov	r6,r16
10103c50:	a809883a 	mov	r4,r21
10103c54:	a00b883a 	mov	r5,r20
10103c58:	010bc440 	call	1010bc44 <__ledf2>
10103c5c:	103d7e0e 	bge	r2,zero,10103258 <__alt_data_end+0xfffe3258>
10103c60:	002b883a 	mov	r21,zero
10103c64:	0023883a 	mov	r17,zero
10103c68:	003efb06 	br	10103858 <__alt_data_end+0xfffe3858>
10103c6c:	d8800717 	ldw	r2,28(sp)
10103c70:	003bd006 	br	10102bb4 <__alt_data_end+0xfffe2bb4>
10103c74:	d9000a17 	ldw	r4,40(sp)
10103c78:	d9800d17 	ldw	r6,52(sp)
10103c7c:	dd400a15 	stw	r21,40(sp)
10103c80:	a905c83a 	sub	r2,r21,r4
10103c84:	308d883a 	add	r6,r6,r2
10103c88:	d9800d15 	stw	r6,52(sp)
10103c8c:	002b883a 	mov	r21,zero
10103c90:	003e0606 	br	101034ac <__alt_data_end+0xfffe34ac>
10103c94:	9023883a 	mov	r17,r18
10103c98:	9829883a 	mov	r20,r19
10103c9c:	04000084 	movi	r16,2
10103ca0:	003c9206 	br	10102eec <__alt_data_end+0xfffe2eec>
10103ca4:	04000044 	movi	r16,1
10103ca8:	dc000c15 	stw	r16,48(sp)
10103cac:	dc000615 	stw	r16,24(sp)
10103cb0:	dc002215 	stw	r16,136(sp)
10103cb4:	e0001115 	stw	zero,68(fp)
10103cb8:	000b883a 	mov	r5,zero
10103cbc:	003c6906 	br	10102e64 <__alt_data_end+0xfffe2e64>
10103cc0:	3021883a 	mov	r16,r6
10103cc4:	003ffb06 	br	10103cb4 <__alt_data_end+0xfffe3cb4>
10103cc8:	1000021e 	bne	r2,zero,10103cd4 <_dtoa_r+0x11e0>
10103ccc:	4200004c 	andi	r8,r8,1
10103cd0:	403e7d1e 	bne	r8,zero,101036c8 <__alt_data_end+0xfffe36c8>
10103cd4:	01000c04 	movi	r4,48
10103cd8:	00000106 	br	10103ce0 <_dtoa_r+0x11ec>
10103cdc:	102f883a 	mov	r23,r2
10103ce0:	b8bfffc4 	addi	r2,r23,-1
10103ce4:	10c00007 	ldb	r3,0(r2)
10103ce8:	193ffc26 	beq	r3,r4,10103cdc <__alt_data_end+0xfffe3cdc>
10103cec:	003e8706 	br	1010370c <__alt_data_end+0xfffe370c>
10103cf0:	d8800517 	ldw	r2,20(sp)
10103cf4:	00a3c83a 	sub	r17,zero,r2
10103cf8:	8800a426 	beq	r17,zero,10103f8c <_dtoa_r+0x1498>
10103cfc:	888003cc 	andi	r2,r17,15
10103d00:	100490fa 	slli	r2,r2,3
10103d04:	00c40474 	movhi	r3,4113
10103d08:	18fe5304 	addi	r3,r3,-1716
10103d0c:	1885883a 	add	r2,r3,r2
10103d10:	11800017 	ldw	r6,0(r2)
10103d14:	11c00117 	ldw	r7,4(r2)
10103d18:	9009883a 	mov	r4,r18
10103d1c:	980b883a 	mov	r5,r19
10103d20:	8823d13a 	srai	r17,r17,4
10103d24:	010bd380 	call	1010bd38 <__muldf3>
10103d28:	d8800f15 	stw	r2,60(sp)
10103d2c:	d8c01015 	stw	r3,64(sp)
10103d30:	8800e826 	beq	r17,zero,101040d4 <_dtoa_r+0x15e0>
10103d34:	05040474 	movhi	r20,4113
10103d38:	a53e4904 	addi	r20,r20,-1756
10103d3c:	04000084 	movi	r16,2
10103d40:	8980004c 	andi	r6,r17,1
10103d44:	1009883a 	mov	r4,r2
10103d48:	8823d07a 	srai	r17,r17,1
10103d4c:	180b883a 	mov	r5,r3
10103d50:	30000426 	beq	r6,zero,10103d64 <_dtoa_r+0x1270>
10103d54:	a1800017 	ldw	r6,0(r20)
10103d58:	a1c00117 	ldw	r7,4(r20)
10103d5c:	84000044 	addi	r16,r16,1
10103d60:	010bd380 	call	1010bd38 <__muldf3>
10103d64:	a5000204 	addi	r20,r20,8
10103d68:	883ff51e 	bne	r17,zero,10103d40 <__alt_data_end+0xfffe3d40>
10103d6c:	d8800f15 	stw	r2,60(sp)
10103d70:	d8c01015 	stw	r3,64(sp)
10103d74:	003c7606 	br	10102f50 <__alt_data_end+0xfffe2f50>
10103d78:	00c00c04 	movi	r3,48
10103d7c:	10c00005 	stb	r3,0(r2)
10103d80:	d8c00517 	ldw	r3,20(sp)
10103d84:	bd3fffc3 	ldbu	r20,-1(r23)
10103d88:	18c00044 	addi	r3,r3,1
10103d8c:	d8c00515 	stw	r3,20(sp)
10103d90:	003db906 	br	10103478 <__alt_data_end+0xfffe3478>
10103d94:	89400117 	ldw	r5,4(r17)
10103d98:	e009883a 	mov	r4,fp
10103d9c:	0105b780 	call	10105b78 <_Balloc>
10103da0:	89800417 	ldw	r6,16(r17)
10103da4:	89400304 	addi	r5,r17,12
10103da8:	11000304 	addi	r4,r2,12
10103dac:	31800084 	addi	r6,r6,2
10103db0:	318d883a 	add	r6,r6,r6
10103db4:	318d883a 	add	r6,r6,r6
10103db8:	1027883a 	mov	r19,r2
10103dbc:	01059080 	call	10105908 <memcpy>
10103dc0:	01800044 	movi	r6,1
10103dc4:	980b883a 	mov	r5,r19
10103dc8:	e009883a 	mov	r4,fp
10103dcc:	01062f80 	call	101062f8 <__lshift>
10103dd0:	1029883a 	mov	r20,r2
10103dd4:	003ecc06 	br	10103908 <__alt_data_end+0xfffe3908>
10103dd8:	00800e44 	movi	r2,57
10103ddc:	90809026 	beq	r18,r2,10104020 <_dtoa_r+0x152c>
10103de0:	92000044 	addi	r8,r18,1
10103de4:	003f1f06 	br	10103a64 <__alt_data_end+0xfffe3a64>
10103de8:	9011883a 	mov	r8,r18
10103dec:	8825883a 	mov	r18,r17
10103df0:	a023883a 	mov	r17,r20
10103df4:	003e2906 	br	1010369c <__alt_data_end+0xfffe369c>
10103df8:	002b883a 	mov	r21,zero
10103dfc:	0023883a 	mov	r17,zero
10103e00:	003f5406 	br	10103b54 <__alt_data_end+0xfffe3b54>
10103e04:	61bfffc4 	addi	r6,r12,-1
10103e08:	300490fa 	slli	r2,r6,3
10103e0c:	00c40474 	movhi	r3,4113
10103e10:	18fe5304 	addi	r3,r3,-1716
10103e14:	1885883a 	add	r2,r3,r2
10103e18:	11000017 	ldw	r4,0(r2)
10103e1c:	11400117 	ldw	r5,4(r2)
10103e20:	d8800717 	ldw	r2,28(sp)
10103e24:	880f883a 	mov	r7,r17
10103e28:	d9801215 	stw	r6,72(sp)
10103e2c:	800d883a 	mov	r6,r16
10103e30:	db001615 	stw	r12,88(sp)
10103e34:	15c00044 	addi	r23,r2,1
10103e38:	010bd380 	call	1010bd38 <__muldf3>
10103e3c:	d9401017 	ldw	r5,64(sp)
10103e40:	d9000f17 	ldw	r4,60(sp)
10103e44:	d8c01515 	stw	r3,84(sp)
10103e48:	d8801415 	stw	r2,80(sp)
10103e4c:	010cd4c0 	call	1010cd4c <__fixdfsi>
10103e50:	1009883a 	mov	r4,r2
10103e54:	1021883a 	mov	r16,r2
10103e58:	010cdcc0 	call	1010cdcc <__floatsidf>
10103e5c:	d9000f17 	ldw	r4,60(sp)
10103e60:	d9401017 	ldw	r5,64(sp)
10103e64:	100d883a 	mov	r6,r2
10103e68:	180f883a 	mov	r7,r3
10103e6c:	010c4500 	call	1010c450 <__subdf3>
10103e70:	1829883a 	mov	r20,r3
10103e74:	d8c00717 	ldw	r3,28(sp)
10103e78:	84000c04 	addi	r16,r16,48
10103e7c:	1023883a 	mov	r17,r2
10103e80:	1c000005 	stb	r16,0(r3)
10103e84:	db001617 	ldw	r12,88(sp)
10103e88:	00800044 	movi	r2,1
10103e8c:	60802226 	beq	r12,r2,10103f18 <_dtoa_r+0x1424>
10103e90:	d9c00717 	ldw	r7,28(sp)
10103e94:	8805883a 	mov	r2,r17
10103e98:	b82b883a 	mov	r21,r23
10103e9c:	3b19883a 	add	r12,r7,r12
10103ea0:	6023883a 	mov	r17,r12
10103ea4:	a007883a 	mov	r3,r20
10103ea8:	dc800f15 	stw	r18,60(sp)
10103eac:	000d883a 	mov	r6,zero
10103eb0:	01d00934 	movhi	r7,16420
10103eb4:	1009883a 	mov	r4,r2
10103eb8:	180b883a 	mov	r5,r3
10103ebc:	010bd380 	call	1010bd38 <__muldf3>
10103ec0:	180b883a 	mov	r5,r3
10103ec4:	1009883a 	mov	r4,r2
10103ec8:	1829883a 	mov	r20,r3
10103ecc:	1025883a 	mov	r18,r2
10103ed0:	010cd4c0 	call	1010cd4c <__fixdfsi>
10103ed4:	1009883a 	mov	r4,r2
10103ed8:	1021883a 	mov	r16,r2
10103edc:	010cdcc0 	call	1010cdcc <__floatsidf>
10103ee0:	100d883a 	mov	r6,r2
10103ee4:	180f883a 	mov	r7,r3
10103ee8:	9009883a 	mov	r4,r18
10103eec:	a00b883a 	mov	r5,r20
10103ef0:	84000c04 	addi	r16,r16,48
10103ef4:	010c4500 	call	1010c450 <__subdf3>
10103ef8:	ad400044 	addi	r21,r21,1
10103efc:	ac3fffc5 	stb	r16,-1(r21)
10103f00:	ac7fea1e 	bne	r21,r17,10103eac <__alt_data_end+0xfffe3eac>
10103f04:	1023883a 	mov	r17,r2
10103f08:	d8801217 	ldw	r2,72(sp)
10103f0c:	dc800f17 	ldw	r18,60(sp)
10103f10:	1829883a 	mov	r20,r3
10103f14:	b8af883a 	add	r23,r23,r2
10103f18:	d9001417 	ldw	r4,80(sp)
10103f1c:	d9401517 	ldw	r5,84(sp)
10103f20:	000d883a 	mov	r6,zero
10103f24:	01cff834 	movhi	r7,16352
10103f28:	010a94c0 	call	1010a94c <__adddf3>
10103f2c:	880d883a 	mov	r6,r17
10103f30:	a00f883a 	mov	r7,r20
10103f34:	1009883a 	mov	r4,r2
10103f38:	180b883a 	mov	r5,r3
10103f3c:	010bc440 	call	1010bc44 <__ledf2>
10103f40:	10003e0e 	bge	r2,zero,1010403c <_dtoa_r+0x1548>
10103f44:	d9001317 	ldw	r4,76(sp)
10103f48:	bd3fffc3 	ldbu	r20,-1(r23)
10103f4c:	d9000515 	stw	r4,20(sp)
10103f50:	003d3b06 	br	10103440 <__alt_data_end+0xfffe3440>
10103f54:	0027883a 	mov	r19,zero
10103f58:	003f1b06 	br	10103bc8 <__alt_data_end+0xfffe3bc8>
10103f5c:	d8800817 	ldw	r2,32(sp)
10103f60:	11e9c83a 	sub	r20,r2,r7
10103f64:	0005883a 	mov	r2,zero
10103f68:	003d5406 	br	101034bc <__alt_data_end+0xfffe34bc>
10103f6c:	00800044 	movi	r2,1
10103f70:	003dc706 	br	10103690 <__alt_data_end+0xfffe3690>
10103f74:	d8c00217 	ldw	r3,8(sp)
10103f78:	00800d84 	movi	r2,54
10103f7c:	dd400a17 	ldw	r21,40(sp)
10103f80:	10c5c83a 	sub	r2,r2,r3
10103f84:	dd000817 	ldw	r20,32(sp)
10103f88:	003d4c06 	br	101034bc <__alt_data_end+0xfffe34bc>
10103f8c:	dc800f15 	stw	r18,60(sp)
10103f90:	dcc01015 	stw	r19,64(sp)
10103f94:	04000084 	movi	r16,2
10103f98:	003bed06 	br	10102f50 <__alt_data_end+0xfffe2f50>
10103f9c:	d9000617 	ldw	r4,24(sp)
10103fa0:	203f0d26 	beq	r4,zero,10103bd8 <__alt_data_end+0xfffe3bd8>
10103fa4:	d9800c17 	ldw	r6,48(sp)
10103fa8:	01bcab0e 	bge	zero,r6,10103258 <__alt_data_end+0xfffe3258>
10103fac:	d9401017 	ldw	r5,64(sp)
10103fb0:	d9000f17 	ldw	r4,60(sp)
10103fb4:	000d883a 	mov	r6,zero
10103fb8:	01d00934 	movhi	r7,16420
10103fbc:	010bd380 	call	1010bd38 <__muldf3>
10103fc0:	81000044 	addi	r4,r16,1
10103fc4:	d8800f15 	stw	r2,60(sp)
10103fc8:	d8c01015 	stw	r3,64(sp)
10103fcc:	010cdcc0 	call	1010cdcc <__floatsidf>
10103fd0:	d9800f17 	ldw	r6,60(sp)
10103fd4:	d9c01017 	ldw	r7,64(sp)
10103fd8:	1009883a 	mov	r4,r2
10103fdc:	180b883a 	mov	r5,r3
10103fe0:	010bd380 	call	1010bd38 <__muldf3>
10103fe4:	01d00734 	movhi	r7,16412
10103fe8:	000d883a 	mov	r6,zero
10103fec:	1009883a 	mov	r4,r2
10103ff0:	180b883a 	mov	r5,r3
10103ff4:	010a94c0 	call	1010a94c <__adddf3>
10103ff8:	d9c00517 	ldw	r7,20(sp)
10103ffc:	047f3034 	movhi	r17,64704
10104000:	1021883a 	mov	r16,r2
10104004:	39ffffc4 	addi	r7,r7,-1
10104008:	d9c01315 	stw	r7,76(sp)
1010400c:	1c63883a 	add	r17,r3,r17
10104010:	db000c17 	ldw	r12,48(sp)
10104014:	003bea06 	br	10102fc0 <__alt_data_end+0xfffe2fc0>
10104018:	dc000915 	stw	r16,36(sp)
1010401c:	003e0e06 	br	10103858 <__alt_data_end+0xfffe3858>
10104020:	01000e44 	movi	r4,57
10104024:	8825883a 	mov	r18,r17
10104028:	9dc00044 	addi	r23,r19,1
1010402c:	99000005 	stb	r4,0(r19)
10104030:	a023883a 	mov	r17,r20
10104034:	dc000915 	stw	r16,36(sp)
10104038:	003da406 	br	101036cc <__alt_data_end+0xfffe36cc>
1010403c:	d9801417 	ldw	r6,80(sp)
10104040:	d9c01517 	ldw	r7,84(sp)
10104044:	0009883a 	mov	r4,zero
10104048:	014ff834 	movhi	r5,16352
1010404c:	010c4500 	call	1010c450 <__subdf3>
10104050:	880d883a 	mov	r6,r17
10104054:	a00f883a 	mov	r7,r20
10104058:	1009883a 	mov	r4,r2
1010405c:	180b883a 	mov	r5,r3
10104060:	010bb680 	call	1010bb68 <__gedf2>
10104064:	00bc7c0e 	bge	zero,r2,10103258 <__alt_data_end+0xfffe3258>
10104068:	01000c04 	movi	r4,48
1010406c:	00000106 	br	10104074 <_dtoa_r+0x1580>
10104070:	102f883a 	mov	r23,r2
10104074:	b8bfffc4 	addi	r2,r23,-1
10104078:	10c00007 	ldb	r3,0(r2)
1010407c:	193ffc26 	beq	r3,r4,10104070 <__alt_data_end+0xfffe4070>
10104080:	d9801317 	ldw	r6,76(sp)
10104084:	d9800515 	stw	r6,20(sp)
10104088:	003c4406 	br	1010319c <__alt_data_end+0xfffe319c>
1010408c:	d9801317 	ldw	r6,76(sp)
10104090:	d9800515 	stw	r6,20(sp)
10104094:	003cea06 	br	10103440 <__alt_data_end+0xfffe3440>
10104098:	dd800f17 	ldw	r22,60(sp)
1010409c:	dcc01017 	ldw	r19,64(sp)
101040a0:	dc801217 	ldw	r18,72(sp)
101040a4:	003c6c06 	br	10103258 <__alt_data_end+0xfffe3258>
101040a8:	903e031e 	bne	r18,zero,101038b8 <__alt_data_end+0xfffe38b8>
101040ac:	003ebb06 	br	10103b9c <__alt_data_end+0xfffe3b9c>
101040b0:	103e6c1e 	bne	r2,zero,10103a64 <__alt_data_end+0xfffe3a64>
101040b4:	4080004c 	andi	r2,r8,1
101040b8:	103e6a26 	beq	r2,zero,10103a64 <__alt_data_end+0xfffe3a64>
101040bc:	003e6606 	br	10103a58 <__alt_data_end+0xfffe3a58>
101040c0:	d8c00317 	ldw	r3,12(sp)
101040c4:	00800084 	movi	r2,2
101040c8:	10c02916 	blt	r2,r3,10104170 <_dtoa_r+0x167c>
101040cc:	d9000c17 	ldw	r4,48(sp)
101040d0:	003e8806 	br	10103af4 <__alt_data_end+0xfffe3af4>
101040d4:	04000084 	movi	r16,2
101040d8:	003b9d06 	br	10102f50 <__alt_data_end+0xfffe2f50>
101040dc:	d9001317 	ldw	r4,76(sp)
101040e0:	d9000515 	stw	r4,20(sp)
101040e4:	003cd606 	br	10103440 <__alt_data_end+0xfffe3440>
101040e8:	d8801317 	ldw	r2,76(sp)
101040ec:	d8800515 	stw	r2,20(sp)
101040f0:	003c2a06 	br	1010319c <__alt_data_end+0xfffe319c>
101040f4:	d9800317 	ldw	r6,12(sp)
101040f8:	00800084 	movi	r2,2
101040fc:	11801516 	blt	r2,r6,10104154 <_dtoa_r+0x1660>
10104100:	d9c00c17 	ldw	r7,48(sp)
10104104:	d9c00615 	stw	r7,24(sp)
10104108:	003df706 	br	101038e8 <__alt_data_end+0xfffe38e8>
1010410c:	193d3926 	beq	r3,r4,101035f4 <__alt_data_end+0xfffe35f4>
10104110:	00c00f04 	movi	r3,60
10104114:	1885c83a 	sub	r2,r3,r2
10104118:	003ddf06 	br	10103898 <__alt_data_end+0xfffe3898>
1010411c:	e009883a 	mov	r4,fp
10104120:	e0001115 	stw	zero,68(fp)
10104124:	000b883a 	mov	r5,zero
10104128:	0105b780 	call	10105b78 <_Balloc>
1010412c:	d8800715 	stw	r2,28(sp)
10104130:	d8c00717 	ldw	r3,28(sp)
10104134:	00bfffc4 	movi	r2,-1
10104138:	01000044 	movi	r4,1
1010413c:	d8800c15 	stw	r2,48(sp)
10104140:	e0c01015 	stw	r3,64(fp)
10104144:	d9000b15 	stw	r4,44(sp)
10104148:	d8800615 	stw	r2,24(sp)
1010414c:	d8002215 	stw	zero,136(sp)
10104150:	003c4106 	br	10103258 <__alt_data_end+0xfffe3258>
10104154:	d8c00c17 	ldw	r3,48(sp)
10104158:	d8c00615 	stw	r3,24(sp)
1010415c:	003e7006 	br	10103b20 <__alt_data_end+0xfffe3b20>
10104160:	04400044 	movi	r17,1
10104164:	003b2006 	br	10102de8 <__alt_data_end+0xfffe2de8>
10104168:	000b883a 	mov	r5,zero
1010416c:	003b3d06 	br	10102e64 <__alt_data_end+0xfffe2e64>
10104170:	d8800c17 	ldw	r2,48(sp)
10104174:	d8800615 	stw	r2,24(sp)
10104178:	003e6906 	br	10103b20 <__alt_data_end+0xfffe3b20>

1010417c <__sflush_r>:
1010417c:	2880030b 	ldhu	r2,12(r5)
10104180:	defffb04 	addi	sp,sp,-20
10104184:	dcc00315 	stw	r19,12(sp)
10104188:	dc400115 	stw	r17,4(sp)
1010418c:	dfc00415 	stw	ra,16(sp)
10104190:	dc800215 	stw	r18,8(sp)
10104194:	dc000015 	stw	r16,0(sp)
10104198:	10c0020c 	andi	r3,r2,8
1010419c:	2823883a 	mov	r17,r5
101041a0:	2027883a 	mov	r19,r4
101041a4:	1800311e 	bne	r3,zero,1010426c <__sflush_r+0xf0>
101041a8:	28c00117 	ldw	r3,4(r5)
101041ac:	10820014 	ori	r2,r2,2048
101041b0:	2880030d 	sth	r2,12(r5)
101041b4:	00c04b0e 	bge	zero,r3,101042e4 <__sflush_r+0x168>
101041b8:	8a000a17 	ldw	r8,40(r17)
101041bc:	40002326 	beq	r8,zero,1010424c <__sflush_r+0xd0>
101041c0:	9c000017 	ldw	r16,0(r19)
101041c4:	10c4000c 	andi	r3,r2,4096
101041c8:	98000015 	stw	zero,0(r19)
101041cc:	18004826 	beq	r3,zero,101042f0 <__sflush_r+0x174>
101041d0:	89801417 	ldw	r6,80(r17)
101041d4:	10c0010c 	andi	r3,r2,4
101041d8:	18000626 	beq	r3,zero,101041f4 <__sflush_r+0x78>
101041dc:	88c00117 	ldw	r3,4(r17)
101041e0:	88800c17 	ldw	r2,48(r17)
101041e4:	30cdc83a 	sub	r6,r6,r3
101041e8:	10000226 	beq	r2,zero,101041f4 <__sflush_r+0x78>
101041ec:	88800f17 	ldw	r2,60(r17)
101041f0:	308dc83a 	sub	r6,r6,r2
101041f4:	89400717 	ldw	r5,28(r17)
101041f8:	000f883a 	mov	r7,zero
101041fc:	9809883a 	mov	r4,r19
10104200:	403ee83a 	callr	r8
10104204:	00ffffc4 	movi	r3,-1
10104208:	10c04426 	beq	r2,r3,1010431c <__sflush_r+0x1a0>
1010420c:	88c0030b 	ldhu	r3,12(r17)
10104210:	89000417 	ldw	r4,16(r17)
10104214:	88000115 	stw	zero,4(r17)
10104218:	197dffcc 	andi	r5,r3,63487
1010421c:	8940030d 	sth	r5,12(r17)
10104220:	89000015 	stw	r4,0(r17)
10104224:	18c4000c 	andi	r3,r3,4096
10104228:	18002c1e 	bne	r3,zero,101042dc <__sflush_r+0x160>
1010422c:	89400c17 	ldw	r5,48(r17)
10104230:	9c000015 	stw	r16,0(r19)
10104234:	28000526 	beq	r5,zero,1010424c <__sflush_r+0xd0>
10104238:	88801004 	addi	r2,r17,64
1010423c:	28800226 	beq	r5,r2,10104248 <__sflush_r+0xcc>
10104240:	9809883a 	mov	r4,r19
10104244:	01048e80 	call	101048e8 <_free_r>
10104248:	88000c15 	stw	zero,48(r17)
1010424c:	0005883a 	mov	r2,zero
10104250:	dfc00417 	ldw	ra,16(sp)
10104254:	dcc00317 	ldw	r19,12(sp)
10104258:	dc800217 	ldw	r18,8(sp)
1010425c:	dc400117 	ldw	r17,4(sp)
10104260:	dc000017 	ldw	r16,0(sp)
10104264:	dec00504 	addi	sp,sp,20
10104268:	f800283a 	ret
1010426c:	2c800417 	ldw	r18,16(r5)
10104270:	903ff626 	beq	r18,zero,1010424c <__alt_data_end+0xfffe424c>
10104274:	2c000017 	ldw	r16,0(r5)
10104278:	108000cc 	andi	r2,r2,3
1010427c:	2c800015 	stw	r18,0(r5)
10104280:	84a1c83a 	sub	r16,r16,r18
10104284:	1000131e 	bne	r2,zero,101042d4 <__sflush_r+0x158>
10104288:	28800517 	ldw	r2,20(r5)
1010428c:	88800215 	stw	r2,8(r17)
10104290:	04000316 	blt	zero,r16,101042a0 <__sflush_r+0x124>
10104294:	003fed06 	br	1010424c <__alt_data_end+0xfffe424c>
10104298:	90a5883a 	add	r18,r18,r2
1010429c:	043feb0e 	bge	zero,r16,1010424c <__alt_data_end+0xfffe424c>
101042a0:	88800917 	ldw	r2,36(r17)
101042a4:	89400717 	ldw	r5,28(r17)
101042a8:	800f883a 	mov	r7,r16
101042ac:	900d883a 	mov	r6,r18
101042b0:	9809883a 	mov	r4,r19
101042b4:	103ee83a 	callr	r2
101042b8:	80a1c83a 	sub	r16,r16,r2
101042bc:	00bff616 	blt	zero,r2,10104298 <__alt_data_end+0xfffe4298>
101042c0:	88c0030b 	ldhu	r3,12(r17)
101042c4:	00bfffc4 	movi	r2,-1
101042c8:	18c01014 	ori	r3,r3,64
101042cc:	88c0030d 	sth	r3,12(r17)
101042d0:	003fdf06 	br	10104250 <__alt_data_end+0xfffe4250>
101042d4:	0005883a 	mov	r2,zero
101042d8:	003fec06 	br	1010428c <__alt_data_end+0xfffe428c>
101042dc:	88801415 	stw	r2,80(r17)
101042e0:	003fd206 	br	1010422c <__alt_data_end+0xfffe422c>
101042e4:	28c00f17 	ldw	r3,60(r5)
101042e8:	00ffb316 	blt	zero,r3,101041b8 <__alt_data_end+0xfffe41b8>
101042ec:	003fd706 	br	1010424c <__alt_data_end+0xfffe424c>
101042f0:	89400717 	ldw	r5,28(r17)
101042f4:	000d883a 	mov	r6,zero
101042f8:	01c00044 	movi	r7,1
101042fc:	9809883a 	mov	r4,r19
10104300:	403ee83a 	callr	r8
10104304:	100d883a 	mov	r6,r2
10104308:	00bfffc4 	movi	r2,-1
1010430c:	30801426 	beq	r6,r2,10104360 <__sflush_r+0x1e4>
10104310:	8880030b 	ldhu	r2,12(r17)
10104314:	8a000a17 	ldw	r8,40(r17)
10104318:	003fae06 	br	101041d4 <__alt_data_end+0xfffe41d4>
1010431c:	98c00017 	ldw	r3,0(r19)
10104320:	183fba26 	beq	r3,zero,1010420c <__alt_data_end+0xfffe420c>
10104324:	01000744 	movi	r4,29
10104328:	19000626 	beq	r3,r4,10104344 <__sflush_r+0x1c8>
1010432c:	01000584 	movi	r4,22
10104330:	19000426 	beq	r3,r4,10104344 <__sflush_r+0x1c8>
10104334:	88c0030b 	ldhu	r3,12(r17)
10104338:	18c01014 	ori	r3,r3,64
1010433c:	88c0030d 	sth	r3,12(r17)
10104340:	003fc306 	br	10104250 <__alt_data_end+0xfffe4250>
10104344:	8880030b 	ldhu	r2,12(r17)
10104348:	88c00417 	ldw	r3,16(r17)
1010434c:	88000115 	stw	zero,4(r17)
10104350:	10bdffcc 	andi	r2,r2,63487
10104354:	8880030d 	sth	r2,12(r17)
10104358:	88c00015 	stw	r3,0(r17)
1010435c:	003fb306 	br	1010422c <__alt_data_end+0xfffe422c>
10104360:	98800017 	ldw	r2,0(r19)
10104364:	103fea26 	beq	r2,zero,10104310 <__alt_data_end+0xfffe4310>
10104368:	00c00744 	movi	r3,29
1010436c:	10c00226 	beq	r2,r3,10104378 <__sflush_r+0x1fc>
10104370:	00c00584 	movi	r3,22
10104374:	10c0031e 	bne	r2,r3,10104384 <__sflush_r+0x208>
10104378:	9c000015 	stw	r16,0(r19)
1010437c:	0005883a 	mov	r2,zero
10104380:	003fb306 	br	10104250 <__alt_data_end+0xfffe4250>
10104384:	88c0030b 	ldhu	r3,12(r17)
10104388:	3005883a 	mov	r2,r6
1010438c:	18c01014 	ori	r3,r3,64
10104390:	88c0030d 	sth	r3,12(r17)
10104394:	003fae06 	br	10104250 <__alt_data_end+0xfffe4250>

10104398 <_fflush_r>:
10104398:	defffd04 	addi	sp,sp,-12
1010439c:	dc000115 	stw	r16,4(sp)
101043a0:	dfc00215 	stw	ra,8(sp)
101043a4:	2021883a 	mov	r16,r4
101043a8:	20000226 	beq	r4,zero,101043b4 <_fflush_r+0x1c>
101043ac:	20800e17 	ldw	r2,56(r4)
101043b0:	10000c26 	beq	r2,zero,101043e4 <_fflush_r+0x4c>
101043b4:	2880030f 	ldh	r2,12(r5)
101043b8:	1000051e 	bne	r2,zero,101043d0 <_fflush_r+0x38>
101043bc:	0005883a 	mov	r2,zero
101043c0:	dfc00217 	ldw	ra,8(sp)
101043c4:	dc000117 	ldw	r16,4(sp)
101043c8:	dec00304 	addi	sp,sp,12
101043cc:	f800283a 	ret
101043d0:	8009883a 	mov	r4,r16
101043d4:	dfc00217 	ldw	ra,8(sp)
101043d8:	dc000117 	ldw	r16,4(sp)
101043dc:	dec00304 	addi	sp,sp,12
101043e0:	010417c1 	jmpi	1010417c <__sflush_r>
101043e4:	d9400015 	stw	r5,0(sp)
101043e8:	01047740 	call	10104774 <__sinit>
101043ec:	d9400017 	ldw	r5,0(sp)
101043f0:	003ff006 	br	101043b4 <__alt_data_end+0xfffe43b4>

101043f4 <fflush>:
101043f4:	20000526 	beq	r4,zero,1010440c <fflush+0x18>
101043f8:	00840474 	movhi	r2,4113
101043fc:	10858804 	addi	r2,r2,5664
10104400:	200b883a 	mov	r5,r4
10104404:	11000017 	ldw	r4,0(r2)
10104408:	01043981 	jmpi	10104398 <_fflush_r>
1010440c:	00840474 	movhi	r2,4113
10104410:	10858704 	addi	r2,r2,5660
10104414:	11000017 	ldw	r4,0(r2)
10104418:	01440434 	movhi	r5,4112
1010441c:	2950e604 	addi	r5,r5,17304
10104420:	0104cbc1 	jmpi	10104cbc <_fwalk_reent>

10104424 <__fp_unlock>:
10104424:	0005883a 	mov	r2,zero
10104428:	f800283a 	ret

1010442c <_cleanup_r>:
1010442c:	01440474 	movhi	r5,4113
10104430:	29626c04 	addi	r5,r5,-30288
10104434:	0104cbc1 	jmpi	10104cbc <_fwalk_reent>

10104438 <__sinit.part.1>:
10104438:	defff704 	addi	sp,sp,-36
1010443c:	00c40434 	movhi	r3,4112
10104440:	dfc00815 	stw	ra,32(sp)
10104444:	ddc00715 	stw	r23,28(sp)
10104448:	dd800615 	stw	r22,24(sp)
1010444c:	dd400515 	stw	r21,20(sp)
10104450:	dd000415 	stw	r20,16(sp)
10104454:	dcc00315 	stw	r19,12(sp)
10104458:	dc800215 	stw	r18,8(sp)
1010445c:	dc400115 	stw	r17,4(sp)
10104460:	dc000015 	stw	r16,0(sp)
10104464:	18d10b04 	addi	r3,r3,17452
10104468:	24000117 	ldw	r16,4(r4)
1010446c:	20c00f15 	stw	r3,60(r4)
10104470:	2080bb04 	addi	r2,r4,748
10104474:	00c000c4 	movi	r3,3
10104478:	20c0b915 	stw	r3,740(r4)
1010447c:	2080ba15 	stw	r2,744(r4)
10104480:	2000b815 	stw	zero,736(r4)
10104484:	05c00204 	movi	r23,8
10104488:	00800104 	movi	r2,4
1010448c:	2025883a 	mov	r18,r4
10104490:	b80d883a 	mov	r6,r23
10104494:	81001704 	addi	r4,r16,92
10104498:	000b883a 	mov	r5,zero
1010449c:	80000015 	stw	zero,0(r16)
101044a0:	80000115 	stw	zero,4(r16)
101044a4:	80000215 	stw	zero,8(r16)
101044a8:	8080030d 	sth	r2,12(r16)
101044ac:	80001915 	stw	zero,100(r16)
101044b0:	8000038d 	sth	zero,14(r16)
101044b4:	80000415 	stw	zero,16(r16)
101044b8:	80000515 	stw	zero,20(r16)
101044bc:	80000615 	stw	zero,24(r16)
101044c0:	0105a500 	call	10105a50 <memset>
101044c4:	05840434 	movhi	r22,4112
101044c8:	94400217 	ldw	r17,8(r18)
101044cc:	05440434 	movhi	r21,4112
101044d0:	05040434 	movhi	r20,4112
101044d4:	04c40434 	movhi	r19,4112
101044d8:	b59bd004 	addi	r22,r22,28480
101044dc:	ad5be704 	addi	r21,r21,28572
101044e0:	a51c0604 	addi	r20,r20,28696
101044e4:	9cdc1d04 	addi	r19,r19,28788
101044e8:	85800815 	stw	r22,32(r16)
101044ec:	85400915 	stw	r21,36(r16)
101044f0:	85000a15 	stw	r20,40(r16)
101044f4:	84c00b15 	stw	r19,44(r16)
101044f8:	84000715 	stw	r16,28(r16)
101044fc:	00800284 	movi	r2,10
10104500:	8880030d 	sth	r2,12(r17)
10104504:	00800044 	movi	r2,1
10104508:	b80d883a 	mov	r6,r23
1010450c:	89001704 	addi	r4,r17,92
10104510:	000b883a 	mov	r5,zero
10104514:	88000015 	stw	zero,0(r17)
10104518:	88000115 	stw	zero,4(r17)
1010451c:	88000215 	stw	zero,8(r17)
10104520:	88001915 	stw	zero,100(r17)
10104524:	8880038d 	sth	r2,14(r17)
10104528:	88000415 	stw	zero,16(r17)
1010452c:	88000515 	stw	zero,20(r17)
10104530:	88000615 	stw	zero,24(r17)
10104534:	0105a500 	call	10105a50 <memset>
10104538:	94000317 	ldw	r16,12(r18)
1010453c:	00800484 	movi	r2,18
10104540:	8c400715 	stw	r17,28(r17)
10104544:	8d800815 	stw	r22,32(r17)
10104548:	8d400915 	stw	r21,36(r17)
1010454c:	8d000a15 	stw	r20,40(r17)
10104550:	8cc00b15 	stw	r19,44(r17)
10104554:	8080030d 	sth	r2,12(r16)
10104558:	00800084 	movi	r2,2
1010455c:	80000015 	stw	zero,0(r16)
10104560:	80000115 	stw	zero,4(r16)
10104564:	80000215 	stw	zero,8(r16)
10104568:	80001915 	stw	zero,100(r16)
1010456c:	8080038d 	sth	r2,14(r16)
10104570:	80000415 	stw	zero,16(r16)
10104574:	80000515 	stw	zero,20(r16)
10104578:	80000615 	stw	zero,24(r16)
1010457c:	b80d883a 	mov	r6,r23
10104580:	000b883a 	mov	r5,zero
10104584:	81001704 	addi	r4,r16,92
10104588:	0105a500 	call	10105a50 <memset>
1010458c:	00800044 	movi	r2,1
10104590:	84000715 	stw	r16,28(r16)
10104594:	85800815 	stw	r22,32(r16)
10104598:	85400915 	stw	r21,36(r16)
1010459c:	85000a15 	stw	r20,40(r16)
101045a0:	84c00b15 	stw	r19,44(r16)
101045a4:	90800e15 	stw	r2,56(r18)
101045a8:	dfc00817 	ldw	ra,32(sp)
101045ac:	ddc00717 	ldw	r23,28(sp)
101045b0:	dd800617 	ldw	r22,24(sp)
101045b4:	dd400517 	ldw	r21,20(sp)
101045b8:	dd000417 	ldw	r20,16(sp)
101045bc:	dcc00317 	ldw	r19,12(sp)
101045c0:	dc800217 	ldw	r18,8(sp)
101045c4:	dc400117 	ldw	r17,4(sp)
101045c8:	dc000017 	ldw	r16,0(sp)
101045cc:	dec00904 	addi	sp,sp,36
101045d0:	f800283a 	ret

101045d4 <__fp_lock>:
101045d4:	0005883a 	mov	r2,zero
101045d8:	f800283a 	ret

101045dc <__sfmoreglue>:
101045dc:	defffc04 	addi	sp,sp,-16
101045e0:	dc400115 	stw	r17,4(sp)
101045e4:	2c7fffc4 	addi	r17,r5,-1
101045e8:	8c401a24 	muli	r17,r17,104
101045ec:	dc800215 	stw	r18,8(sp)
101045f0:	2825883a 	mov	r18,r5
101045f4:	89401d04 	addi	r5,r17,116
101045f8:	dc000015 	stw	r16,0(sp)
101045fc:	dfc00315 	stw	ra,12(sp)
10104600:	01050180 	call	10105018 <_malloc_r>
10104604:	1021883a 	mov	r16,r2
10104608:	10000726 	beq	r2,zero,10104628 <__sfmoreglue+0x4c>
1010460c:	11000304 	addi	r4,r2,12
10104610:	10000015 	stw	zero,0(r2)
10104614:	14800115 	stw	r18,4(r2)
10104618:	11000215 	stw	r4,8(r2)
1010461c:	89801a04 	addi	r6,r17,104
10104620:	000b883a 	mov	r5,zero
10104624:	0105a500 	call	10105a50 <memset>
10104628:	8005883a 	mov	r2,r16
1010462c:	dfc00317 	ldw	ra,12(sp)
10104630:	dc800217 	ldw	r18,8(sp)
10104634:	dc400117 	ldw	r17,4(sp)
10104638:	dc000017 	ldw	r16,0(sp)
1010463c:	dec00404 	addi	sp,sp,16
10104640:	f800283a 	ret

10104644 <__sfp>:
10104644:	defffb04 	addi	sp,sp,-20
10104648:	dc000015 	stw	r16,0(sp)
1010464c:	04040474 	movhi	r16,4113
10104650:	84058704 	addi	r16,r16,5660
10104654:	dcc00315 	stw	r19,12(sp)
10104658:	2027883a 	mov	r19,r4
1010465c:	81000017 	ldw	r4,0(r16)
10104660:	dfc00415 	stw	ra,16(sp)
10104664:	dc800215 	stw	r18,8(sp)
10104668:	20800e17 	ldw	r2,56(r4)
1010466c:	dc400115 	stw	r17,4(sp)
10104670:	1000021e 	bne	r2,zero,1010467c <__sfp+0x38>
10104674:	01044380 	call	10104438 <__sinit.part.1>
10104678:	81000017 	ldw	r4,0(r16)
1010467c:	2480b804 	addi	r18,r4,736
10104680:	047fffc4 	movi	r17,-1
10104684:	91000117 	ldw	r4,4(r18)
10104688:	94000217 	ldw	r16,8(r18)
1010468c:	213fffc4 	addi	r4,r4,-1
10104690:	20000a16 	blt	r4,zero,101046bc <__sfp+0x78>
10104694:	8080030f 	ldh	r2,12(r16)
10104698:	10000c26 	beq	r2,zero,101046cc <__sfp+0x88>
1010469c:	80c01d04 	addi	r3,r16,116
101046a0:	00000206 	br	101046ac <__sfp+0x68>
101046a4:	18bfe60f 	ldh	r2,-104(r3)
101046a8:	10000826 	beq	r2,zero,101046cc <__sfp+0x88>
101046ac:	213fffc4 	addi	r4,r4,-1
101046b0:	1c3ffd04 	addi	r16,r3,-12
101046b4:	18c01a04 	addi	r3,r3,104
101046b8:	247ffa1e 	bne	r4,r17,101046a4 <__alt_data_end+0xfffe46a4>
101046bc:	90800017 	ldw	r2,0(r18)
101046c0:	10001d26 	beq	r2,zero,10104738 <__sfp+0xf4>
101046c4:	1025883a 	mov	r18,r2
101046c8:	003fee06 	br	10104684 <__alt_data_end+0xfffe4684>
101046cc:	00bfffc4 	movi	r2,-1
101046d0:	8080038d 	sth	r2,14(r16)
101046d4:	00800044 	movi	r2,1
101046d8:	8080030d 	sth	r2,12(r16)
101046dc:	80001915 	stw	zero,100(r16)
101046e0:	80000015 	stw	zero,0(r16)
101046e4:	80000215 	stw	zero,8(r16)
101046e8:	80000115 	stw	zero,4(r16)
101046ec:	80000415 	stw	zero,16(r16)
101046f0:	80000515 	stw	zero,20(r16)
101046f4:	80000615 	stw	zero,24(r16)
101046f8:	01800204 	movi	r6,8
101046fc:	000b883a 	mov	r5,zero
10104700:	81001704 	addi	r4,r16,92
10104704:	0105a500 	call	10105a50 <memset>
10104708:	8005883a 	mov	r2,r16
1010470c:	80000c15 	stw	zero,48(r16)
10104710:	80000d15 	stw	zero,52(r16)
10104714:	80001115 	stw	zero,68(r16)
10104718:	80001215 	stw	zero,72(r16)
1010471c:	dfc00417 	ldw	ra,16(sp)
10104720:	dcc00317 	ldw	r19,12(sp)
10104724:	dc800217 	ldw	r18,8(sp)
10104728:	dc400117 	ldw	r17,4(sp)
1010472c:	dc000017 	ldw	r16,0(sp)
10104730:	dec00504 	addi	sp,sp,20
10104734:	f800283a 	ret
10104738:	01400104 	movi	r5,4
1010473c:	9809883a 	mov	r4,r19
10104740:	01045dc0 	call	101045dc <__sfmoreglue>
10104744:	90800015 	stw	r2,0(r18)
10104748:	103fde1e 	bne	r2,zero,101046c4 <__alt_data_end+0xfffe46c4>
1010474c:	00800304 	movi	r2,12
10104750:	98800015 	stw	r2,0(r19)
10104754:	0005883a 	mov	r2,zero
10104758:	003ff006 	br	1010471c <__alt_data_end+0xfffe471c>

1010475c <_cleanup>:
1010475c:	00840474 	movhi	r2,4113
10104760:	10858704 	addi	r2,r2,5660
10104764:	11000017 	ldw	r4,0(r2)
10104768:	01440474 	movhi	r5,4113
1010476c:	29626c04 	addi	r5,r5,-30288
10104770:	0104cbc1 	jmpi	10104cbc <_fwalk_reent>

10104774 <__sinit>:
10104774:	20800e17 	ldw	r2,56(r4)
10104778:	10000126 	beq	r2,zero,10104780 <__sinit+0xc>
1010477c:	f800283a 	ret
10104780:	01044381 	jmpi	10104438 <__sinit.part.1>

10104784 <__sfp_lock_acquire>:
10104784:	f800283a 	ret

10104788 <__sfp_lock_release>:
10104788:	f800283a 	ret

1010478c <__sinit_lock_acquire>:
1010478c:	f800283a 	ret

10104790 <__sinit_lock_release>:
10104790:	f800283a 	ret

10104794 <__fp_lock_all>:
10104794:	00840474 	movhi	r2,4113
10104798:	10858804 	addi	r2,r2,5664
1010479c:	11000017 	ldw	r4,0(r2)
101047a0:	01440434 	movhi	r5,4112
101047a4:	29517504 	addi	r5,r5,17876
101047a8:	0104bf81 	jmpi	10104bf8 <_fwalk>

101047ac <__fp_unlock_all>:
101047ac:	00840474 	movhi	r2,4113
101047b0:	10858804 	addi	r2,r2,5664
101047b4:	11000017 	ldw	r4,0(r2)
101047b8:	01440434 	movhi	r5,4112
101047bc:	29510904 	addi	r5,r5,17444
101047c0:	0104bf81 	jmpi	10104bf8 <_fwalk>

101047c4 <_malloc_trim_r>:
101047c4:	defffb04 	addi	sp,sp,-20
101047c8:	dcc00315 	stw	r19,12(sp)
101047cc:	04c40474 	movhi	r19,4113
101047d0:	dc800215 	stw	r18,8(sp)
101047d4:	dc400115 	stw	r17,4(sp)
101047d8:	dc000015 	stw	r16,0(sp)
101047dc:	dfc00415 	stw	ra,16(sp)
101047e0:	2821883a 	mov	r16,r5
101047e4:	9cc00104 	addi	r19,r19,4
101047e8:	2025883a 	mov	r18,r4
101047ec:	010d6f00 	call	1010d6f0 <__malloc_lock>
101047f0:	98800217 	ldw	r2,8(r19)
101047f4:	14400117 	ldw	r17,4(r2)
101047f8:	00bfff04 	movi	r2,-4
101047fc:	88a2703a 	and	r17,r17,r2
10104800:	8c21c83a 	sub	r16,r17,r16
10104804:	8403fbc4 	addi	r16,r16,4079
10104808:	8020d33a 	srli	r16,r16,12
1010480c:	0083ffc4 	movi	r2,4095
10104810:	843fffc4 	addi	r16,r16,-1
10104814:	8020933a 	slli	r16,r16,12
10104818:	1400060e 	bge	r2,r16,10104834 <_malloc_trim_r+0x70>
1010481c:	000b883a 	mov	r5,zero
10104820:	9009883a 	mov	r4,r18
10104824:	0106be80 	call	10106be8 <_sbrk_r>
10104828:	98c00217 	ldw	r3,8(r19)
1010482c:	1c47883a 	add	r3,r3,r17
10104830:	10c00a26 	beq	r2,r3,1010485c <_malloc_trim_r+0x98>
10104834:	9009883a 	mov	r4,r18
10104838:	010d7140 	call	1010d714 <__malloc_unlock>
1010483c:	0005883a 	mov	r2,zero
10104840:	dfc00417 	ldw	ra,16(sp)
10104844:	dcc00317 	ldw	r19,12(sp)
10104848:	dc800217 	ldw	r18,8(sp)
1010484c:	dc400117 	ldw	r17,4(sp)
10104850:	dc000017 	ldw	r16,0(sp)
10104854:	dec00504 	addi	sp,sp,20
10104858:	f800283a 	ret
1010485c:	040bc83a 	sub	r5,zero,r16
10104860:	9009883a 	mov	r4,r18
10104864:	0106be80 	call	10106be8 <_sbrk_r>
10104868:	00ffffc4 	movi	r3,-1
1010486c:	10c00d26 	beq	r2,r3,101048a4 <_malloc_trim_r+0xe0>
10104870:	00c40474 	movhi	r3,4113
10104874:	18cc6204 	addi	r3,r3,12680
10104878:	18800017 	ldw	r2,0(r3)
1010487c:	99000217 	ldw	r4,8(r19)
10104880:	8c23c83a 	sub	r17,r17,r16
10104884:	8c400054 	ori	r17,r17,1
10104888:	1421c83a 	sub	r16,r2,r16
1010488c:	24400115 	stw	r17,4(r4)
10104890:	9009883a 	mov	r4,r18
10104894:	1c000015 	stw	r16,0(r3)
10104898:	010d7140 	call	1010d714 <__malloc_unlock>
1010489c:	00800044 	movi	r2,1
101048a0:	003fe706 	br	10104840 <__alt_data_end+0xfffe4840>
101048a4:	000b883a 	mov	r5,zero
101048a8:	9009883a 	mov	r4,r18
101048ac:	0106be80 	call	10106be8 <_sbrk_r>
101048b0:	99000217 	ldw	r4,8(r19)
101048b4:	014003c4 	movi	r5,15
101048b8:	1107c83a 	sub	r3,r2,r4
101048bc:	28ffdd0e 	bge	r5,r3,10104834 <__alt_data_end+0xfffe4834>
101048c0:	01440474 	movhi	r5,4113
101048c4:	29458a04 	addi	r5,r5,5672
101048c8:	29400017 	ldw	r5,0(r5)
101048cc:	18c00054 	ori	r3,r3,1
101048d0:	20c00115 	stw	r3,4(r4)
101048d4:	00c40474 	movhi	r3,4113
101048d8:	1145c83a 	sub	r2,r2,r5
101048dc:	18cc6204 	addi	r3,r3,12680
101048e0:	18800015 	stw	r2,0(r3)
101048e4:	003fd306 	br	10104834 <__alt_data_end+0xfffe4834>

101048e8 <_free_r>:
101048e8:	28004126 	beq	r5,zero,101049f0 <_free_r+0x108>
101048ec:	defffd04 	addi	sp,sp,-12
101048f0:	dc400115 	stw	r17,4(sp)
101048f4:	dc000015 	stw	r16,0(sp)
101048f8:	2023883a 	mov	r17,r4
101048fc:	2821883a 	mov	r16,r5
10104900:	dfc00215 	stw	ra,8(sp)
10104904:	010d6f00 	call	1010d6f0 <__malloc_lock>
10104908:	81ffff17 	ldw	r7,-4(r16)
1010490c:	00bfff84 	movi	r2,-2
10104910:	01040474 	movhi	r4,4113
10104914:	81bffe04 	addi	r6,r16,-8
10104918:	3884703a 	and	r2,r7,r2
1010491c:	21000104 	addi	r4,r4,4
10104920:	308b883a 	add	r5,r6,r2
10104924:	2a400117 	ldw	r9,4(r5)
10104928:	22000217 	ldw	r8,8(r4)
1010492c:	00ffff04 	movi	r3,-4
10104930:	48c6703a 	and	r3,r9,r3
10104934:	2a005726 	beq	r5,r8,10104a94 <_free_r+0x1ac>
10104938:	28c00115 	stw	r3,4(r5)
1010493c:	39c0004c 	andi	r7,r7,1
10104940:	3800091e 	bne	r7,zero,10104968 <_free_r+0x80>
10104944:	823ffe17 	ldw	r8,-8(r16)
10104948:	22400204 	addi	r9,r4,8
1010494c:	320dc83a 	sub	r6,r6,r8
10104950:	31c00217 	ldw	r7,8(r6)
10104954:	1205883a 	add	r2,r2,r8
10104958:	3a406526 	beq	r7,r9,10104af0 <_free_r+0x208>
1010495c:	32000317 	ldw	r8,12(r6)
10104960:	3a000315 	stw	r8,12(r7)
10104964:	41c00215 	stw	r7,8(r8)
10104968:	28cf883a 	add	r7,r5,r3
1010496c:	39c00117 	ldw	r7,4(r7)
10104970:	39c0004c 	andi	r7,r7,1
10104974:	38003a26 	beq	r7,zero,10104a60 <_free_r+0x178>
10104978:	10c00054 	ori	r3,r2,1
1010497c:	30c00115 	stw	r3,4(r6)
10104980:	3087883a 	add	r3,r6,r2
10104984:	18800015 	stw	r2,0(r3)
10104988:	00c07fc4 	movi	r3,511
1010498c:	18801936 	bltu	r3,r2,101049f4 <_free_r+0x10c>
10104990:	1004d0fa 	srli	r2,r2,3
10104994:	01c00044 	movi	r7,1
10104998:	21400117 	ldw	r5,4(r4)
1010499c:	10c00044 	addi	r3,r2,1
101049a0:	18c7883a 	add	r3,r3,r3
101049a4:	1005d0ba 	srai	r2,r2,2
101049a8:	18c7883a 	add	r3,r3,r3
101049ac:	18c7883a 	add	r3,r3,r3
101049b0:	1907883a 	add	r3,r3,r4
101049b4:	3884983a 	sll	r2,r7,r2
101049b8:	19c00017 	ldw	r7,0(r3)
101049bc:	1a3ffe04 	addi	r8,r3,-8
101049c0:	1144b03a 	or	r2,r2,r5
101049c4:	32000315 	stw	r8,12(r6)
101049c8:	31c00215 	stw	r7,8(r6)
101049cc:	20800115 	stw	r2,4(r4)
101049d0:	19800015 	stw	r6,0(r3)
101049d4:	39800315 	stw	r6,12(r7)
101049d8:	8809883a 	mov	r4,r17
101049dc:	dfc00217 	ldw	ra,8(sp)
101049e0:	dc400117 	ldw	r17,4(sp)
101049e4:	dc000017 	ldw	r16,0(sp)
101049e8:	dec00304 	addi	sp,sp,12
101049ec:	010d7141 	jmpi	1010d714 <__malloc_unlock>
101049f0:	f800283a 	ret
101049f4:	100ad27a 	srli	r5,r2,9
101049f8:	00c00104 	movi	r3,4
101049fc:	19404a36 	bltu	r3,r5,10104b28 <_free_r+0x240>
10104a00:	100ad1ba 	srli	r5,r2,6
10104a04:	28c00e44 	addi	r3,r5,57
10104a08:	18c7883a 	add	r3,r3,r3
10104a0c:	29400e04 	addi	r5,r5,56
10104a10:	18c7883a 	add	r3,r3,r3
10104a14:	18c7883a 	add	r3,r3,r3
10104a18:	1909883a 	add	r4,r3,r4
10104a1c:	20c00017 	ldw	r3,0(r4)
10104a20:	01c40474 	movhi	r7,4113
10104a24:	213ffe04 	addi	r4,r4,-8
10104a28:	39c00104 	addi	r7,r7,4
10104a2c:	20c04426 	beq	r4,r3,10104b40 <_free_r+0x258>
10104a30:	01ffff04 	movi	r7,-4
10104a34:	19400117 	ldw	r5,4(r3)
10104a38:	29ca703a 	and	r5,r5,r7
10104a3c:	1140022e 	bgeu	r2,r5,10104a48 <_free_r+0x160>
10104a40:	18c00217 	ldw	r3,8(r3)
10104a44:	20fffb1e 	bne	r4,r3,10104a34 <__alt_data_end+0xfffe4a34>
10104a48:	19000317 	ldw	r4,12(r3)
10104a4c:	31000315 	stw	r4,12(r6)
10104a50:	30c00215 	stw	r3,8(r6)
10104a54:	21800215 	stw	r6,8(r4)
10104a58:	19800315 	stw	r6,12(r3)
10104a5c:	003fde06 	br	101049d8 <__alt_data_end+0xfffe49d8>
10104a60:	29c00217 	ldw	r7,8(r5)
10104a64:	10c5883a 	add	r2,r2,r3
10104a68:	00c40474 	movhi	r3,4113
10104a6c:	18c00304 	addi	r3,r3,12
10104a70:	38c03b26 	beq	r7,r3,10104b60 <_free_r+0x278>
10104a74:	2a000317 	ldw	r8,12(r5)
10104a78:	11400054 	ori	r5,r2,1
10104a7c:	3087883a 	add	r3,r6,r2
10104a80:	3a000315 	stw	r8,12(r7)
10104a84:	41c00215 	stw	r7,8(r8)
10104a88:	31400115 	stw	r5,4(r6)
10104a8c:	18800015 	stw	r2,0(r3)
10104a90:	003fbd06 	br	10104988 <__alt_data_end+0xfffe4988>
10104a94:	39c0004c 	andi	r7,r7,1
10104a98:	10c5883a 	add	r2,r2,r3
10104a9c:	3800071e 	bne	r7,zero,10104abc <_free_r+0x1d4>
10104aa0:	81fffe17 	ldw	r7,-8(r16)
10104aa4:	31cdc83a 	sub	r6,r6,r7
10104aa8:	30c00317 	ldw	r3,12(r6)
10104aac:	31400217 	ldw	r5,8(r6)
10104ab0:	11c5883a 	add	r2,r2,r7
10104ab4:	28c00315 	stw	r3,12(r5)
10104ab8:	19400215 	stw	r5,8(r3)
10104abc:	10c00054 	ori	r3,r2,1
10104ac0:	30c00115 	stw	r3,4(r6)
10104ac4:	00c40474 	movhi	r3,4113
10104ac8:	18c58b04 	addi	r3,r3,5676
10104acc:	18c00017 	ldw	r3,0(r3)
10104ad0:	21800215 	stw	r6,8(r4)
10104ad4:	10ffc036 	bltu	r2,r3,101049d8 <__alt_data_end+0xfffe49d8>
10104ad8:	00840474 	movhi	r2,4113
10104adc:	108c5904 	addi	r2,r2,12644
10104ae0:	11400017 	ldw	r5,0(r2)
10104ae4:	8809883a 	mov	r4,r17
10104ae8:	01047c40 	call	101047c4 <_malloc_trim_r>
10104aec:	003fba06 	br	101049d8 <__alt_data_end+0xfffe49d8>
10104af0:	28c9883a 	add	r4,r5,r3
10104af4:	21000117 	ldw	r4,4(r4)
10104af8:	2100004c 	andi	r4,r4,1
10104afc:	2000391e 	bne	r4,zero,10104be4 <_free_r+0x2fc>
10104b00:	29c00217 	ldw	r7,8(r5)
10104b04:	29000317 	ldw	r4,12(r5)
10104b08:	1885883a 	add	r2,r3,r2
10104b0c:	10c00054 	ori	r3,r2,1
10104b10:	39000315 	stw	r4,12(r7)
10104b14:	21c00215 	stw	r7,8(r4)
10104b18:	30c00115 	stw	r3,4(r6)
10104b1c:	308d883a 	add	r6,r6,r2
10104b20:	30800015 	stw	r2,0(r6)
10104b24:	003fac06 	br	101049d8 <__alt_data_end+0xfffe49d8>
10104b28:	00c00504 	movi	r3,20
10104b2c:	19401536 	bltu	r3,r5,10104b84 <_free_r+0x29c>
10104b30:	28c01704 	addi	r3,r5,92
10104b34:	18c7883a 	add	r3,r3,r3
10104b38:	294016c4 	addi	r5,r5,91
10104b3c:	003fb406 	br	10104a10 <__alt_data_end+0xfffe4a10>
10104b40:	280bd0ba 	srai	r5,r5,2
10104b44:	00c00044 	movi	r3,1
10104b48:	38800117 	ldw	r2,4(r7)
10104b4c:	194a983a 	sll	r5,r3,r5
10104b50:	2007883a 	mov	r3,r4
10104b54:	2884b03a 	or	r2,r5,r2
10104b58:	38800115 	stw	r2,4(r7)
10104b5c:	003fbb06 	br	10104a4c <__alt_data_end+0xfffe4a4c>
10104b60:	21800515 	stw	r6,20(r4)
10104b64:	21800415 	stw	r6,16(r4)
10104b68:	10c00054 	ori	r3,r2,1
10104b6c:	31c00315 	stw	r7,12(r6)
10104b70:	31c00215 	stw	r7,8(r6)
10104b74:	30c00115 	stw	r3,4(r6)
10104b78:	308d883a 	add	r6,r6,r2
10104b7c:	30800015 	stw	r2,0(r6)
10104b80:	003f9506 	br	101049d8 <__alt_data_end+0xfffe49d8>
10104b84:	00c01504 	movi	r3,84
10104b88:	19400536 	bltu	r3,r5,10104ba0 <_free_r+0x2b8>
10104b8c:	100ad33a 	srli	r5,r2,12
10104b90:	28c01bc4 	addi	r3,r5,111
10104b94:	18c7883a 	add	r3,r3,r3
10104b98:	29401b84 	addi	r5,r5,110
10104b9c:	003f9c06 	br	10104a10 <__alt_data_end+0xfffe4a10>
10104ba0:	00c05504 	movi	r3,340
10104ba4:	19400536 	bltu	r3,r5,10104bbc <_free_r+0x2d4>
10104ba8:	100ad3fa 	srli	r5,r2,15
10104bac:	28c01e04 	addi	r3,r5,120
10104bb0:	18c7883a 	add	r3,r3,r3
10104bb4:	29401dc4 	addi	r5,r5,119
10104bb8:	003f9506 	br	10104a10 <__alt_data_end+0xfffe4a10>
10104bbc:	00c15504 	movi	r3,1364
10104bc0:	19400536 	bltu	r3,r5,10104bd8 <_free_r+0x2f0>
10104bc4:	100ad4ba 	srli	r5,r2,18
10104bc8:	28c01f44 	addi	r3,r5,125
10104bcc:	18c7883a 	add	r3,r3,r3
10104bd0:	29401f04 	addi	r5,r5,124
10104bd4:	003f8e06 	br	10104a10 <__alt_data_end+0xfffe4a10>
10104bd8:	00c03f84 	movi	r3,254
10104bdc:	01401f84 	movi	r5,126
10104be0:	003f8b06 	br	10104a10 <__alt_data_end+0xfffe4a10>
10104be4:	10c00054 	ori	r3,r2,1
10104be8:	30c00115 	stw	r3,4(r6)
10104bec:	308d883a 	add	r6,r6,r2
10104bf0:	30800015 	stw	r2,0(r6)
10104bf4:	003f7806 	br	101049d8 <__alt_data_end+0xfffe49d8>

10104bf8 <_fwalk>:
10104bf8:	defff704 	addi	sp,sp,-36
10104bfc:	dd000415 	stw	r20,16(sp)
10104c00:	dfc00815 	stw	ra,32(sp)
10104c04:	ddc00715 	stw	r23,28(sp)
10104c08:	dd800615 	stw	r22,24(sp)
10104c0c:	dd400515 	stw	r21,20(sp)
10104c10:	dcc00315 	stw	r19,12(sp)
10104c14:	dc800215 	stw	r18,8(sp)
10104c18:	dc400115 	stw	r17,4(sp)
10104c1c:	dc000015 	stw	r16,0(sp)
10104c20:	2500b804 	addi	r20,r4,736
10104c24:	a0002326 	beq	r20,zero,10104cb4 <_fwalk+0xbc>
10104c28:	282b883a 	mov	r21,r5
10104c2c:	002f883a 	mov	r23,zero
10104c30:	05800044 	movi	r22,1
10104c34:	04ffffc4 	movi	r19,-1
10104c38:	a4400117 	ldw	r17,4(r20)
10104c3c:	a4800217 	ldw	r18,8(r20)
10104c40:	8c7fffc4 	addi	r17,r17,-1
10104c44:	88000d16 	blt	r17,zero,10104c7c <_fwalk+0x84>
10104c48:	94000304 	addi	r16,r18,12
10104c4c:	94800384 	addi	r18,r18,14
10104c50:	8080000b 	ldhu	r2,0(r16)
10104c54:	8c7fffc4 	addi	r17,r17,-1
10104c58:	813ffd04 	addi	r4,r16,-12
10104c5c:	b080042e 	bgeu	r22,r2,10104c70 <_fwalk+0x78>
10104c60:	9080000f 	ldh	r2,0(r18)
10104c64:	14c00226 	beq	r2,r19,10104c70 <_fwalk+0x78>
10104c68:	a83ee83a 	callr	r21
10104c6c:	b8aeb03a 	or	r23,r23,r2
10104c70:	84001a04 	addi	r16,r16,104
10104c74:	94801a04 	addi	r18,r18,104
10104c78:	8cfff51e 	bne	r17,r19,10104c50 <__alt_data_end+0xfffe4c50>
10104c7c:	a5000017 	ldw	r20,0(r20)
10104c80:	a03fed1e 	bne	r20,zero,10104c38 <__alt_data_end+0xfffe4c38>
10104c84:	b805883a 	mov	r2,r23
10104c88:	dfc00817 	ldw	ra,32(sp)
10104c8c:	ddc00717 	ldw	r23,28(sp)
10104c90:	dd800617 	ldw	r22,24(sp)
10104c94:	dd400517 	ldw	r21,20(sp)
10104c98:	dd000417 	ldw	r20,16(sp)
10104c9c:	dcc00317 	ldw	r19,12(sp)
10104ca0:	dc800217 	ldw	r18,8(sp)
10104ca4:	dc400117 	ldw	r17,4(sp)
10104ca8:	dc000017 	ldw	r16,0(sp)
10104cac:	dec00904 	addi	sp,sp,36
10104cb0:	f800283a 	ret
10104cb4:	002f883a 	mov	r23,zero
10104cb8:	003ff206 	br	10104c84 <__alt_data_end+0xfffe4c84>

10104cbc <_fwalk_reent>:
10104cbc:	defff704 	addi	sp,sp,-36
10104cc0:	dd000415 	stw	r20,16(sp)
10104cc4:	dfc00815 	stw	ra,32(sp)
10104cc8:	ddc00715 	stw	r23,28(sp)
10104ccc:	dd800615 	stw	r22,24(sp)
10104cd0:	dd400515 	stw	r21,20(sp)
10104cd4:	dcc00315 	stw	r19,12(sp)
10104cd8:	dc800215 	stw	r18,8(sp)
10104cdc:	dc400115 	stw	r17,4(sp)
10104ce0:	dc000015 	stw	r16,0(sp)
10104ce4:	2500b804 	addi	r20,r4,736
10104ce8:	a0002326 	beq	r20,zero,10104d78 <_fwalk_reent+0xbc>
10104cec:	282b883a 	mov	r21,r5
10104cf0:	2027883a 	mov	r19,r4
10104cf4:	002f883a 	mov	r23,zero
10104cf8:	05800044 	movi	r22,1
10104cfc:	04bfffc4 	movi	r18,-1
10104d00:	a4400117 	ldw	r17,4(r20)
10104d04:	a4000217 	ldw	r16,8(r20)
10104d08:	8c7fffc4 	addi	r17,r17,-1
10104d0c:	88000c16 	blt	r17,zero,10104d40 <_fwalk_reent+0x84>
10104d10:	84000304 	addi	r16,r16,12
10104d14:	8080000b 	ldhu	r2,0(r16)
10104d18:	8c7fffc4 	addi	r17,r17,-1
10104d1c:	817ffd04 	addi	r5,r16,-12
10104d20:	b080052e 	bgeu	r22,r2,10104d38 <_fwalk_reent+0x7c>
10104d24:	8080008f 	ldh	r2,2(r16)
10104d28:	9809883a 	mov	r4,r19
10104d2c:	14800226 	beq	r2,r18,10104d38 <_fwalk_reent+0x7c>
10104d30:	a83ee83a 	callr	r21
10104d34:	b8aeb03a 	or	r23,r23,r2
10104d38:	84001a04 	addi	r16,r16,104
10104d3c:	8cbff51e 	bne	r17,r18,10104d14 <__alt_data_end+0xfffe4d14>
10104d40:	a5000017 	ldw	r20,0(r20)
10104d44:	a03fee1e 	bne	r20,zero,10104d00 <__alt_data_end+0xfffe4d00>
10104d48:	b805883a 	mov	r2,r23
10104d4c:	dfc00817 	ldw	ra,32(sp)
10104d50:	ddc00717 	ldw	r23,28(sp)
10104d54:	dd800617 	ldw	r22,24(sp)
10104d58:	dd400517 	ldw	r21,20(sp)
10104d5c:	dd000417 	ldw	r20,16(sp)
10104d60:	dcc00317 	ldw	r19,12(sp)
10104d64:	dc800217 	ldw	r18,8(sp)
10104d68:	dc400117 	ldw	r17,4(sp)
10104d6c:	dc000017 	ldw	r16,0(sp)
10104d70:	dec00904 	addi	sp,sp,36
10104d74:	f800283a 	ret
10104d78:	002f883a 	mov	r23,zero
10104d7c:	003ff206 	br	10104d48 <__alt_data_end+0xfffe4d48>

10104d80 <_setlocale_r>:
10104d80:	30001b26 	beq	r6,zero,10104df0 <_setlocale_r+0x70>
10104d84:	01440474 	movhi	r5,4113
10104d88:	defffe04 	addi	sp,sp,-8
10104d8c:	297e3904 	addi	r5,r5,-1820
10104d90:	3009883a 	mov	r4,r6
10104d94:	dc000015 	stw	r16,0(sp)
10104d98:	dfc00115 	stw	ra,4(sp)
10104d9c:	3021883a 	mov	r16,r6
10104da0:	010707c0 	call	1010707c <strcmp>
10104da4:	1000061e 	bne	r2,zero,10104dc0 <_setlocale_r+0x40>
10104da8:	00840474 	movhi	r2,4113
10104dac:	10be1b04 	addi	r2,r2,-1940
10104db0:	dfc00117 	ldw	ra,4(sp)
10104db4:	dc000017 	ldw	r16,0(sp)
10104db8:	dec00204 	addi	sp,sp,8
10104dbc:	f800283a 	ret
10104dc0:	01440474 	movhi	r5,4113
10104dc4:	297e1b04 	addi	r5,r5,-1940
10104dc8:	8009883a 	mov	r4,r16
10104dcc:	010707c0 	call	1010707c <strcmp>
10104dd0:	103ff526 	beq	r2,zero,10104da8 <__alt_data_end+0xfffe4da8>
10104dd4:	01440474 	movhi	r5,4113
10104dd8:	297e0e04 	addi	r5,r5,-1992
10104ddc:	8009883a 	mov	r4,r16
10104de0:	010707c0 	call	1010707c <strcmp>
10104de4:	103ff026 	beq	r2,zero,10104da8 <__alt_data_end+0xfffe4da8>
10104de8:	0005883a 	mov	r2,zero
10104dec:	003ff006 	br	10104db0 <__alt_data_end+0xfffe4db0>
10104df0:	00840474 	movhi	r2,4113
10104df4:	10be1b04 	addi	r2,r2,-1940
10104df8:	f800283a 	ret

10104dfc <__locale_charset>:
10104dfc:	00840474 	movhi	r2,4113
10104e00:	10bfeb04 	addi	r2,r2,-84
10104e04:	f800283a 	ret

10104e08 <__locale_mb_cur_max>:
10104e08:	00840474 	movhi	r2,4113
10104e0c:	10858904 	addi	r2,r2,5668
10104e10:	10800017 	ldw	r2,0(r2)
10104e14:	f800283a 	ret

10104e18 <__locale_msgcharset>:
10104e18:	00840474 	movhi	r2,4113
10104e1c:	10bfe304 	addi	r2,r2,-116
10104e20:	f800283a 	ret

10104e24 <__locale_cjk_lang>:
10104e24:	0005883a 	mov	r2,zero
10104e28:	f800283a 	ret

10104e2c <_localeconv_r>:
10104e2c:	00840474 	movhi	r2,4113
10104e30:	10bff304 	addi	r2,r2,-52
10104e34:	f800283a 	ret

10104e38 <setlocale>:
10104e38:	00840474 	movhi	r2,4113
10104e3c:	10858804 	addi	r2,r2,5664
10104e40:	280d883a 	mov	r6,r5
10104e44:	200b883a 	mov	r5,r4
10104e48:	11000017 	ldw	r4,0(r2)
10104e4c:	0104d801 	jmpi	10104d80 <_setlocale_r>

10104e50 <localeconv>:
10104e50:	00840474 	movhi	r2,4113
10104e54:	10bff304 	addi	r2,r2,-52
10104e58:	f800283a 	ret

10104e5c <__smakebuf_r>:
10104e5c:	2880030b 	ldhu	r2,12(r5)
10104e60:	10c0008c 	andi	r3,r2,2
10104e64:	1800411e 	bne	r3,zero,10104f6c <__smakebuf_r+0x110>
10104e68:	deffec04 	addi	sp,sp,-80
10104e6c:	dc000f15 	stw	r16,60(sp)
10104e70:	2821883a 	mov	r16,r5
10104e74:	2940038f 	ldh	r5,14(r5)
10104e78:	dc401015 	stw	r17,64(sp)
10104e7c:	dfc01315 	stw	ra,76(sp)
10104e80:	dcc01215 	stw	r19,72(sp)
10104e84:	dc801115 	stw	r18,68(sp)
10104e88:	2023883a 	mov	r17,r4
10104e8c:	28001c16 	blt	r5,zero,10104f00 <__smakebuf_r+0xa4>
10104e90:	d80d883a 	mov	r6,sp
10104e94:	0108cbc0 	call	10108cbc <_fstat_r>
10104e98:	10001816 	blt	r2,zero,10104efc <__smakebuf_r+0xa0>
10104e9c:	d8800117 	ldw	r2,4(sp)
10104ea0:	00e00014 	movui	r3,32768
10104ea4:	10bc000c 	andi	r2,r2,61440
10104ea8:	14c80020 	cmpeqi	r19,r2,8192
10104eac:	10c03726 	beq	r2,r3,10104f8c <__smakebuf_r+0x130>
10104eb0:	80c0030b 	ldhu	r3,12(r16)
10104eb4:	18c20014 	ori	r3,r3,2048
10104eb8:	80c0030d 	sth	r3,12(r16)
10104ebc:	00c80004 	movi	r3,8192
10104ec0:	10c0521e 	bne	r2,r3,1010500c <__smakebuf_r+0x1b0>
10104ec4:	8140038f 	ldh	r5,14(r16)
10104ec8:	8809883a 	mov	r4,r17
10104ecc:	01091d40 	call	101091d4 <_isatty_r>
10104ed0:	10004c26 	beq	r2,zero,10105004 <__smakebuf_r+0x1a8>
10104ed4:	8080030b 	ldhu	r2,12(r16)
10104ed8:	80c010c4 	addi	r3,r16,67
10104edc:	80c00015 	stw	r3,0(r16)
10104ee0:	10800054 	ori	r2,r2,1
10104ee4:	8080030d 	sth	r2,12(r16)
10104ee8:	00800044 	movi	r2,1
10104eec:	80c00415 	stw	r3,16(r16)
10104ef0:	80800515 	stw	r2,20(r16)
10104ef4:	04810004 	movi	r18,1024
10104ef8:	00000706 	br	10104f18 <__smakebuf_r+0xbc>
10104efc:	8080030b 	ldhu	r2,12(r16)
10104f00:	10c0200c 	andi	r3,r2,128
10104f04:	18001f1e 	bne	r3,zero,10104f84 <__smakebuf_r+0x128>
10104f08:	04810004 	movi	r18,1024
10104f0c:	10820014 	ori	r2,r2,2048
10104f10:	8080030d 	sth	r2,12(r16)
10104f14:	0027883a 	mov	r19,zero
10104f18:	900b883a 	mov	r5,r18
10104f1c:	8809883a 	mov	r4,r17
10104f20:	01050180 	call	10105018 <_malloc_r>
10104f24:	10002c26 	beq	r2,zero,10104fd8 <__smakebuf_r+0x17c>
10104f28:	80c0030b 	ldhu	r3,12(r16)
10104f2c:	01040434 	movhi	r4,4112
10104f30:	21110b04 	addi	r4,r4,17452
10104f34:	89000f15 	stw	r4,60(r17)
10104f38:	18c02014 	ori	r3,r3,128
10104f3c:	80c0030d 	sth	r3,12(r16)
10104f40:	80800015 	stw	r2,0(r16)
10104f44:	80800415 	stw	r2,16(r16)
10104f48:	84800515 	stw	r18,20(r16)
10104f4c:	98001a1e 	bne	r19,zero,10104fb8 <__smakebuf_r+0x15c>
10104f50:	dfc01317 	ldw	ra,76(sp)
10104f54:	dcc01217 	ldw	r19,72(sp)
10104f58:	dc801117 	ldw	r18,68(sp)
10104f5c:	dc401017 	ldw	r17,64(sp)
10104f60:	dc000f17 	ldw	r16,60(sp)
10104f64:	dec01404 	addi	sp,sp,80
10104f68:	f800283a 	ret
10104f6c:	288010c4 	addi	r2,r5,67
10104f70:	28800015 	stw	r2,0(r5)
10104f74:	28800415 	stw	r2,16(r5)
10104f78:	00800044 	movi	r2,1
10104f7c:	28800515 	stw	r2,20(r5)
10104f80:	f800283a 	ret
10104f84:	04801004 	movi	r18,64
10104f88:	003fe006 	br	10104f0c <__alt_data_end+0xfffe4f0c>
10104f8c:	81000a17 	ldw	r4,40(r16)
10104f90:	00c40434 	movhi	r3,4112
10104f94:	18dc0604 	addi	r3,r3,28696
10104f98:	20ffc51e 	bne	r4,r3,10104eb0 <__alt_data_end+0xfffe4eb0>
10104f9c:	8080030b 	ldhu	r2,12(r16)
10104fa0:	04810004 	movi	r18,1024
10104fa4:	84801315 	stw	r18,76(r16)
10104fa8:	1484b03a 	or	r2,r2,r18
10104fac:	8080030d 	sth	r2,12(r16)
10104fb0:	0027883a 	mov	r19,zero
10104fb4:	003fd806 	br	10104f18 <__alt_data_end+0xfffe4f18>
10104fb8:	8140038f 	ldh	r5,14(r16)
10104fbc:	8809883a 	mov	r4,r17
10104fc0:	01091d40 	call	101091d4 <_isatty_r>
10104fc4:	103fe226 	beq	r2,zero,10104f50 <__alt_data_end+0xfffe4f50>
10104fc8:	8080030b 	ldhu	r2,12(r16)
10104fcc:	10800054 	ori	r2,r2,1
10104fd0:	8080030d 	sth	r2,12(r16)
10104fd4:	003fde06 	br	10104f50 <__alt_data_end+0xfffe4f50>
10104fd8:	8080030b 	ldhu	r2,12(r16)
10104fdc:	10c0800c 	andi	r3,r2,512
10104fe0:	183fdb1e 	bne	r3,zero,10104f50 <__alt_data_end+0xfffe4f50>
10104fe4:	10800094 	ori	r2,r2,2
10104fe8:	80c010c4 	addi	r3,r16,67
10104fec:	8080030d 	sth	r2,12(r16)
10104ff0:	00800044 	movi	r2,1
10104ff4:	80c00015 	stw	r3,0(r16)
10104ff8:	80c00415 	stw	r3,16(r16)
10104ffc:	80800515 	stw	r2,20(r16)
10105000:	003fd306 	br	10104f50 <__alt_data_end+0xfffe4f50>
10105004:	04810004 	movi	r18,1024
10105008:	003fc306 	br	10104f18 <__alt_data_end+0xfffe4f18>
1010500c:	0027883a 	mov	r19,zero
10105010:	04810004 	movi	r18,1024
10105014:	003fc006 	br	10104f18 <__alt_data_end+0xfffe4f18>

10105018 <_malloc_r>:
10105018:	defff504 	addi	sp,sp,-44
1010501c:	dc800315 	stw	r18,12(sp)
10105020:	dfc00a15 	stw	ra,40(sp)
10105024:	df000915 	stw	fp,36(sp)
10105028:	ddc00815 	stw	r23,32(sp)
1010502c:	dd800715 	stw	r22,28(sp)
10105030:	dd400615 	stw	r21,24(sp)
10105034:	dd000515 	stw	r20,20(sp)
10105038:	dcc00415 	stw	r19,16(sp)
1010503c:	dc400215 	stw	r17,8(sp)
10105040:	dc000115 	stw	r16,4(sp)
10105044:	288002c4 	addi	r2,r5,11
10105048:	00c00584 	movi	r3,22
1010504c:	2025883a 	mov	r18,r4
10105050:	18807f2e 	bgeu	r3,r2,10105250 <_malloc_r+0x238>
10105054:	047ffe04 	movi	r17,-8
10105058:	1462703a 	and	r17,r2,r17
1010505c:	8800a316 	blt	r17,zero,101052ec <_malloc_r+0x2d4>
10105060:	8940a236 	bltu	r17,r5,101052ec <_malloc_r+0x2d4>
10105064:	010d6f00 	call	1010d6f0 <__malloc_lock>
10105068:	00807dc4 	movi	r2,503
1010506c:	1441e92e 	bgeu	r2,r17,10105814 <_malloc_r+0x7fc>
10105070:	8804d27a 	srli	r2,r17,9
10105074:	1000a126 	beq	r2,zero,101052fc <_malloc_r+0x2e4>
10105078:	00c00104 	movi	r3,4
1010507c:	18811e36 	bltu	r3,r2,101054f8 <_malloc_r+0x4e0>
10105080:	8804d1ba 	srli	r2,r17,6
10105084:	12000e44 	addi	r8,r2,57
10105088:	11c00e04 	addi	r7,r2,56
1010508c:	4209883a 	add	r4,r8,r8
10105090:	04c40474 	movhi	r19,4113
10105094:	2109883a 	add	r4,r4,r4
10105098:	9cc00104 	addi	r19,r19,4
1010509c:	2109883a 	add	r4,r4,r4
101050a0:	9909883a 	add	r4,r19,r4
101050a4:	24000117 	ldw	r16,4(r4)
101050a8:	213ffe04 	addi	r4,r4,-8
101050ac:	24009726 	beq	r4,r16,1010530c <_malloc_r+0x2f4>
101050b0:	80800117 	ldw	r2,4(r16)
101050b4:	01bfff04 	movi	r6,-4
101050b8:	014003c4 	movi	r5,15
101050bc:	1184703a 	and	r2,r2,r6
101050c0:	1447c83a 	sub	r3,r2,r17
101050c4:	28c00716 	blt	r5,r3,101050e4 <_malloc_r+0xcc>
101050c8:	1800920e 	bge	r3,zero,10105314 <_malloc_r+0x2fc>
101050cc:	84000317 	ldw	r16,12(r16)
101050d0:	24008e26 	beq	r4,r16,1010530c <_malloc_r+0x2f4>
101050d4:	80800117 	ldw	r2,4(r16)
101050d8:	1184703a 	and	r2,r2,r6
101050dc:	1447c83a 	sub	r3,r2,r17
101050e0:	28fff90e 	bge	r5,r3,101050c8 <__alt_data_end+0xfffe50c8>
101050e4:	3809883a 	mov	r4,r7
101050e8:	01840474 	movhi	r6,4113
101050ec:	9c000417 	ldw	r16,16(r19)
101050f0:	31800104 	addi	r6,r6,4
101050f4:	32000204 	addi	r8,r6,8
101050f8:	82013426 	beq	r16,r8,101055cc <_malloc_r+0x5b4>
101050fc:	80c00117 	ldw	r3,4(r16)
10105100:	00bfff04 	movi	r2,-4
10105104:	188e703a 	and	r7,r3,r2
10105108:	3c45c83a 	sub	r2,r7,r17
1010510c:	00c003c4 	movi	r3,15
10105110:	18811f16 	blt	r3,r2,10105590 <_malloc_r+0x578>
10105114:	32000515 	stw	r8,20(r6)
10105118:	32000415 	stw	r8,16(r6)
1010511c:	10007f0e 	bge	r2,zero,1010531c <_malloc_r+0x304>
10105120:	00807fc4 	movi	r2,511
10105124:	11c0fd36 	bltu	r2,r7,1010551c <_malloc_r+0x504>
10105128:	3806d0fa 	srli	r3,r7,3
1010512c:	01c00044 	movi	r7,1
10105130:	30800117 	ldw	r2,4(r6)
10105134:	19400044 	addi	r5,r3,1
10105138:	294b883a 	add	r5,r5,r5
1010513c:	1807d0ba 	srai	r3,r3,2
10105140:	294b883a 	add	r5,r5,r5
10105144:	294b883a 	add	r5,r5,r5
10105148:	298b883a 	add	r5,r5,r6
1010514c:	38c6983a 	sll	r3,r7,r3
10105150:	29c00017 	ldw	r7,0(r5)
10105154:	2a7ffe04 	addi	r9,r5,-8
10105158:	1886b03a 	or	r3,r3,r2
1010515c:	82400315 	stw	r9,12(r16)
10105160:	81c00215 	stw	r7,8(r16)
10105164:	30c00115 	stw	r3,4(r6)
10105168:	2c000015 	stw	r16,0(r5)
1010516c:	3c000315 	stw	r16,12(r7)
10105170:	2005d0ba 	srai	r2,r4,2
10105174:	01400044 	movi	r5,1
10105178:	288a983a 	sll	r5,r5,r2
1010517c:	19406f36 	bltu	r3,r5,1010533c <_malloc_r+0x324>
10105180:	28c4703a 	and	r2,r5,r3
10105184:	10000a1e 	bne	r2,zero,101051b0 <_malloc_r+0x198>
10105188:	00bfff04 	movi	r2,-4
1010518c:	294b883a 	add	r5,r5,r5
10105190:	2088703a 	and	r4,r4,r2
10105194:	28c4703a 	and	r2,r5,r3
10105198:	21000104 	addi	r4,r4,4
1010519c:	1000041e 	bne	r2,zero,101051b0 <_malloc_r+0x198>
101051a0:	294b883a 	add	r5,r5,r5
101051a4:	28c4703a 	and	r2,r5,r3
101051a8:	21000104 	addi	r4,r4,4
101051ac:	103ffc26 	beq	r2,zero,101051a0 <__alt_data_end+0xfffe51a0>
101051b0:	02bfff04 	movi	r10,-4
101051b4:	024003c4 	movi	r9,15
101051b8:	21800044 	addi	r6,r4,1
101051bc:	318d883a 	add	r6,r6,r6
101051c0:	318d883a 	add	r6,r6,r6
101051c4:	318d883a 	add	r6,r6,r6
101051c8:	998d883a 	add	r6,r19,r6
101051cc:	333ffe04 	addi	r12,r6,-8
101051d0:	2017883a 	mov	r11,r4
101051d4:	31800104 	addi	r6,r6,4
101051d8:	34000017 	ldw	r16,0(r6)
101051dc:	31fffd04 	addi	r7,r6,-12
101051e0:	81c0041e 	bne	r16,r7,101051f4 <_malloc_r+0x1dc>
101051e4:	0000fb06 	br	101055d4 <_malloc_r+0x5bc>
101051e8:	1801030e 	bge	r3,zero,101055f8 <_malloc_r+0x5e0>
101051ec:	84000317 	ldw	r16,12(r16)
101051f0:	81c0f826 	beq	r16,r7,101055d4 <_malloc_r+0x5bc>
101051f4:	80800117 	ldw	r2,4(r16)
101051f8:	1284703a 	and	r2,r2,r10
101051fc:	1447c83a 	sub	r3,r2,r17
10105200:	48fff90e 	bge	r9,r3,101051e8 <__alt_data_end+0xfffe51e8>
10105204:	80800317 	ldw	r2,12(r16)
10105208:	81000217 	ldw	r4,8(r16)
1010520c:	89400054 	ori	r5,r17,1
10105210:	81400115 	stw	r5,4(r16)
10105214:	20800315 	stw	r2,12(r4)
10105218:	11000215 	stw	r4,8(r2)
1010521c:	8463883a 	add	r17,r16,r17
10105220:	9c400515 	stw	r17,20(r19)
10105224:	9c400415 	stw	r17,16(r19)
10105228:	18800054 	ori	r2,r3,1
1010522c:	88800115 	stw	r2,4(r17)
10105230:	8a000315 	stw	r8,12(r17)
10105234:	8a000215 	stw	r8,8(r17)
10105238:	88e3883a 	add	r17,r17,r3
1010523c:	88c00015 	stw	r3,0(r17)
10105240:	9009883a 	mov	r4,r18
10105244:	010d7140 	call	1010d714 <__malloc_unlock>
10105248:	80800204 	addi	r2,r16,8
1010524c:	00001b06 	br	101052bc <_malloc_r+0x2a4>
10105250:	04400404 	movi	r17,16
10105254:	89402536 	bltu	r17,r5,101052ec <_malloc_r+0x2d4>
10105258:	010d6f00 	call	1010d6f0 <__malloc_lock>
1010525c:	00800184 	movi	r2,6
10105260:	01000084 	movi	r4,2
10105264:	04c40474 	movhi	r19,4113
10105268:	1085883a 	add	r2,r2,r2
1010526c:	9cc00104 	addi	r19,r19,4
10105270:	1085883a 	add	r2,r2,r2
10105274:	9885883a 	add	r2,r19,r2
10105278:	14000117 	ldw	r16,4(r2)
1010527c:	10fffe04 	addi	r3,r2,-8
10105280:	80c0d926 	beq	r16,r3,101055e8 <_malloc_r+0x5d0>
10105284:	80c00117 	ldw	r3,4(r16)
10105288:	81000317 	ldw	r4,12(r16)
1010528c:	00bfff04 	movi	r2,-4
10105290:	1884703a 	and	r2,r3,r2
10105294:	81400217 	ldw	r5,8(r16)
10105298:	8085883a 	add	r2,r16,r2
1010529c:	10c00117 	ldw	r3,4(r2)
101052a0:	29000315 	stw	r4,12(r5)
101052a4:	21400215 	stw	r5,8(r4)
101052a8:	18c00054 	ori	r3,r3,1
101052ac:	10c00115 	stw	r3,4(r2)
101052b0:	9009883a 	mov	r4,r18
101052b4:	010d7140 	call	1010d714 <__malloc_unlock>
101052b8:	80800204 	addi	r2,r16,8
101052bc:	dfc00a17 	ldw	ra,40(sp)
101052c0:	df000917 	ldw	fp,36(sp)
101052c4:	ddc00817 	ldw	r23,32(sp)
101052c8:	dd800717 	ldw	r22,28(sp)
101052cc:	dd400617 	ldw	r21,24(sp)
101052d0:	dd000517 	ldw	r20,20(sp)
101052d4:	dcc00417 	ldw	r19,16(sp)
101052d8:	dc800317 	ldw	r18,12(sp)
101052dc:	dc400217 	ldw	r17,8(sp)
101052e0:	dc000117 	ldw	r16,4(sp)
101052e4:	dec00b04 	addi	sp,sp,44
101052e8:	f800283a 	ret
101052ec:	00800304 	movi	r2,12
101052f0:	90800015 	stw	r2,0(r18)
101052f4:	0005883a 	mov	r2,zero
101052f8:	003ff006 	br	101052bc <__alt_data_end+0xfffe52bc>
101052fc:	01002004 	movi	r4,128
10105300:	02001004 	movi	r8,64
10105304:	01c00fc4 	movi	r7,63
10105308:	003f6106 	br	10105090 <__alt_data_end+0xfffe5090>
1010530c:	4009883a 	mov	r4,r8
10105310:	003f7506 	br	101050e8 <__alt_data_end+0xfffe50e8>
10105314:	81000317 	ldw	r4,12(r16)
10105318:	003fde06 	br	10105294 <__alt_data_end+0xfffe5294>
1010531c:	81c5883a 	add	r2,r16,r7
10105320:	11400117 	ldw	r5,4(r2)
10105324:	9009883a 	mov	r4,r18
10105328:	29400054 	ori	r5,r5,1
1010532c:	11400115 	stw	r5,4(r2)
10105330:	010d7140 	call	1010d714 <__malloc_unlock>
10105334:	80800204 	addi	r2,r16,8
10105338:	003fe006 	br	101052bc <__alt_data_end+0xfffe52bc>
1010533c:	9c000217 	ldw	r16,8(r19)
10105340:	00bfff04 	movi	r2,-4
10105344:	85800117 	ldw	r22,4(r16)
10105348:	b0ac703a 	and	r22,r22,r2
1010534c:	b4400336 	bltu	r22,r17,1010535c <_malloc_r+0x344>
10105350:	b445c83a 	sub	r2,r22,r17
10105354:	00c003c4 	movi	r3,15
10105358:	18805d16 	blt	r3,r2,101054d0 <_malloc_r+0x4b8>
1010535c:	05c40474 	movhi	r23,4113
10105360:	00840474 	movhi	r2,4113
10105364:	108c5904 	addi	r2,r2,12644
10105368:	bdc58a04 	addi	r23,r23,5672
1010536c:	15400017 	ldw	r21,0(r2)
10105370:	b8c00017 	ldw	r3,0(r23)
10105374:	00bfffc4 	movi	r2,-1
10105378:	858d883a 	add	r6,r16,r22
1010537c:	8d6b883a 	add	r21,r17,r21
10105380:	1880ea26 	beq	r3,r2,1010572c <_malloc_r+0x714>
10105384:	ad4403c4 	addi	r21,r21,4111
10105388:	00bc0004 	movi	r2,-4096
1010538c:	a8aa703a 	and	r21,r21,r2
10105390:	a80b883a 	mov	r5,r21
10105394:	9009883a 	mov	r4,r18
10105398:	d9800015 	stw	r6,0(sp)
1010539c:	0106be80 	call	10106be8 <_sbrk_r>
101053a0:	1029883a 	mov	r20,r2
101053a4:	00bfffc4 	movi	r2,-1
101053a8:	d9800017 	ldw	r6,0(sp)
101053ac:	a080e826 	beq	r20,r2,10105750 <_malloc_r+0x738>
101053b0:	a180a636 	bltu	r20,r6,1010564c <_malloc_r+0x634>
101053b4:	07040474 	movhi	fp,4113
101053b8:	e70c6204 	addi	fp,fp,12680
101053bc:	e0800017 	ldw	r2,0(fp)
101053c0:	a887883a 	add	r3,r21,r2
101053c4:	e0c00015 	stw	r3,0(fp)
101053c8:	3500e626 	beq	r6,r20,10105764 <_malloc_r+0x74c>
101053cc:	b9000017 	ldw	r4,0(r23)
101053d0:	00bfffc4 	movi	r2,-1
101053d4:	2080ee26 	beq	r4,r2,10105790 <_malloc_r+0x778>
101053d8:	a185c83a 	sub	r2,r20,r6
101053dc:	10c5883a 	add	r2,r2,r3
101053e0:	e0800015 	stw	r2,0(fp)
101053e4:	a0c001cc 	andi	r3,r20,7
101053e8:	1800bc26 	beq	r3,zero,101056dc <_malloc_r+0x6c4>
101053ec:	a0e9c83a 	sub	r20,r20,r3
101053f0:	00840204 	movi	r2,4104
101053f4:	a5000204 	addi	r20,r20,8
101053f8:	10c7c83a 	sub	r3,r2,r3
101053fc:	a545883a 	add	r2,r20,r21
10105400:	1083ffcc 	andi	r2,r2,4095
10105404:	18abc83a 	sub	r21,r3,r2
10105408:	a80b883a 	mov	r5,r21
1010540c:	9009883a 	mov	r4,r18
10105410:	0106be80 	call	10106be8 <_sbrk_r>
10105414:	00ffffc4 	movi	r3,-1
10105418:	10c0e126 	beq	r2,r3,101057a0 <_malloc_r+0x788>
1010541c:	1505c83a 	sub	r2,r2,r20
10105420:	1545883a 	add	r2,r2,r21
10105424:	10800054 	ori	r2,r2,1
10105428:	e0c00017 	ldw	r3,0(fp)
1010542c:	9d000215 	stw	r20,8(r19)
10105430:	a0800115 	stw	r2,4(r20)
10105434:	a8c7883a 	add	r3,r21,r3
10105438:	e0c00015 	stw	r3,0(fp)
1010543c:	84c00e26 	beq	r16,r19,10105478 <_malloc_r+0x460>
10105440:	018003c4 	movi	r6,15
10105444:	3580a72e 	bgeu	r6,r22,101056e4 <_malloc_r+0x6cc>
10105448:	81400117 	ldw	r5,4(r16)
1010544c:	013ffe04 	movi	r4,-8
10105450:	b0bffd04 	addi	r2,r22,-12
10105454:	1104703a 	and	r2,r2,r4
10105458:	2900004c 	andi	r4,r5,1
1010545c:	2088b03a 	or	r4,r4,r2
10105460:	81000115 	stw	r4,4(r16)
10105464:	01400144 	movi	r5,5
10105468:	8089883a 	add	r4,r16,r2
1010546c:	21400115 	stw	r5,4(r4)
10105470:	21400215 	stw	r5,8(r4)
10105474:	3080cd36 	bltu	r6,r2,101057ac <_malloc_r+0x794>
10105478:	00840474 	movhi	r2,4113
1010547c:	108c5804 	addi	r2,r2,12640
10105480:	11000017 	ldw	r4,0(r2)
10105484:	20c0012e 	bgeu	r4,r3,1010548c <_malloc_r+0x474>
10105488:	10c00015 	stw	r3,0(r2)
1010548c:	00840474 	movhi	r2,4113
10105490:	108c5704 	addi	r2,r2,12636
10105494:	11000017 	ldw	r4,0(r2)
10105498:	9c000217 	ldw	r16,8(r19)
1010549c:	20c0012e 	bgeu	r4,r3,101054a4 <_malloc_r+0x48c>
101054a0:	10c00015 	stw	r3,0(r2)
101054a4:	80c00117 	ldw	r3,4(r16)
101054a8:	00bfff04 	movi	r2,-4
101054ac:	1886703a 	and	r3,r3,r2
101054b0:	1c45c83a 	sub	r2,r3,r17
101054b4:	1c400236 	bltu	r3,r17,101054c0 <_malloc_r+0x4a8>
101054b8:	00c003c4 	movi	r3,15
101054bc:	18800416 	blt	r3,r2,101054d0 <_malloc_r+0x4b8>
101054c0:	9009883a 	mov	r4,r18
101054c4:	010d7140 	call	1010d714 <__malloc_unlock>
101054c8:	0005883a 	mov	r2,zero
101054cc:	003f7b06 	br	101052bc <__alt_data_end+0xfffe52bc>
101054d0:	88c00054 	ori	r3,r17,1
101054d4:	80c00115 	stw	r3,4(r16)
101054d8:	8463883a 	add	r17,r16,r17
101054dc:	10800054 	ori	r2,r2,1
101054e0:	9c400215 	stw	r17,8(r19)
101054e4:	88800115 	stw	r2,4(r17)
101054e8:	9009883a 	mov	r4,r18
101054ec:	010d7140 	call	1010d714 <__malloc_unlock>
101054f0:	80800204 	addi	r2,r16,8
101054f4:	003f7106 	br	101052bc <__alt_data_end+0xfffe52bc>
101054f8:	00c00504 	movi	r3,20
101054fc:	18804a2e 	bgeu	r3,r2,10105628 <_malloc_r+0x610>
10105500:	00c01504 	movi	r3,84
10105504:	18806e36 	bltu	r3,r2,101056c0 <_malloc_r+0x6a8>
10105508:	8804d33a 	srli	r2,r17,12
1010550c:	12001bc4 	addi	r8,r2,111
10105510:	11c01b84 	addi	r7,r2,110
10105514:	4209883a 	add	r4,r8,r8
10105518:	003edd06 	br	10105090 <__alt_data_end+0xfffe5090>
1010551c:	3804d27a 	srli	r2,r7,9
10105520:	00c00104 	movi	r3,4
10105524:	1880442e 	bgeu	r3,r2,10105638 <_malloc_r+0x620>
10105528:	00c00504 	movi	r3,20
1010552c:	18808136 	bltu	r3,r2,10105734 <_malloc_r+0x71c>
10105530:	11401704 	addi	r5,r2,92
10105534:	10c016c4 	addi	r3,r2,91
10105538:	294b883a 	add	r5,r5,r5
1010553c:	294b883a 	add	r5,r5,r5
10105540:	294b883a 	add	r5,r5,r5
10105544:	994b883a 	add	r5,r19,r5
10105548:	28800017 	ldw	r2,0(r5)
1010554c:	01840474 	movhi	r6,4113
10105550:	297ffe04 	addi	r5,r5,-8
10105554:	31800104 	addi	r6,r6,4
10105558:	28806526 	beq	r5,r2,101056f0 <_malloc_r+0x6d8>
1010555c:	01bfff04 	movi	r6,-4
10105560:	10c00117 	ldw	r3,4(r2)
10105564:	1986703a 	and	r3,r3,r6
10105568:	38c0022e 	bgeu	r7,r3,10105574 <_malloc_r+0x55c>
1010556c:	10800217 	ldw	r2,8(r2)
10105570:	28bffb1e 	bne	r5,r2,10105560 <__alt_data_end+0xfffe5560>
10105574:	11400317 	ldw	r5,12(r2)
10105578:	98c00117 	ldw	r3,4(r19)
1010557c:	81400315 	stw	r5,12(r16)
10105580:	80800215 	stw	r2,8(r16)
10105584:	2c000215 	stw	r16,8(r5)
10105588:	14000315 	stw	r16,12(r2)
1010558c:	003ef806 	br	10105170 <__alt_data_end+0xfffe5170>
10105590:	88c00054 	ori	r3,r17,1
10105594:	80c00115 	stw	r3,4(r16)
10105598:	8463883a 	add	r17,r16,r17
1010559c:	34400515 	stw	r17,20(r6)
101055a0:	34400415 	stw	r17,16(r6)
101055a4:	10c00054 	ori	r3,r2,1
101055a8:	8a000315 	stw	r8,12(r17)
101055ac:	8a000215 	stw	r8,8(r17)
101055b0:	88c00115 	stw	r3,4(r17)
101055b4:	88a3883a 	add	r17,r17,r2
101055b8:	88800015 	stw	r2,0(r17)
101055bc:	9009883a 	mov	r4,r18
101055c0:	010d7140 	call	1010d714 <__malloc_unlock>
101055c4:	80800204 	addi	r2,r16,8
101055c8:	003f3c06 	br	101052bc <__alt_data_end+0xfffe52bc>
101055cc:	30c00117 	ldw	r3,4(r6)
101055d0:	003ee706 	br	10105170 <__alt_data_end+0xfffe5170>
101055d4:	5ac00044 	addi	r11,r11,1
101055d8:	588000cc 	andi	r2,r11,3
101055dc:	31800204 	addi	r6,r6,8
101055e0:	103efd1e 	bne	r2,zero,101051d8 <__alt_data_end+0xfffe51d8>
101055e4:	00002406 	br	10105678 <_malloc_r+0x660>
101055e8:	14000317 	ldw	r16,12(r2)
101055ec:	143f251e 	bne	r2,r16,10105284 <__alt_data_end+0xfffe5284>
101055f0:	21000084 	addi	r4,r4,2
101055f4:	003ebc06 	br	101050e8 <__alt_data_end+0xfffe50e8>
101055f8:	8085883a 	add	r2,r16,r2
101055fc:	10c00117 	ldw	r3,4(r2)
10105600:	81000317 	ldw	r4,12(r16)
10105604:	81400217 	ldw	r5,8(r16)
10105608:	18c00054 	ori	r3,r3,1
1010560c:	10c00115 	stw	r3,4(r2)
10105610:	29000315 	stw	r4,12(r5)
10105614:	21400215 	stw	r5,8(r4)
10105618:	9009883a 	mov	r4,r18
1010561c:	010d7140 	call	1010d714 <__malloc_unlock>
10105620:	80800204 	addi	r2,r16,8
10105624:	003f2506 	br	101052bc <__alt_data_end+0xfffe52bc>
10105628:	12001704 	addi	r8,r2,92
1010562c:	11c016c4 	addi	r7,r2,91
10105630:	4209883a 	add	r4,r8,r8
10105634:	003e9606 	br	10105090 <__alt_data_end+0xfffe5090>
10105638:	3804d1ba 	srli	r2,r7,6
1010563c:	11400e44 	addi	r5,r2,57
10105640:	10c00e04 	addi	r3,r2,56
10105644:	294b883a 	add	r5,r5,r5
10105648:	003fbc06 	br	1010553c <__alt_data_end+0xfffe553c>
1010564c:	84ff5926 	beq	r16,r19,101053b4 <__alt_data_end+0xfffe53b4>
10105650:	00840474 	movhi	r2,4113
10105654:	10800104 	addi	r2,r2,4
10105658:	14000217 	ldw	r16,8(r2)
1010565c:	00bfff04 	movi	r2,-4
10105660:	80c00117 	ldw	r3,4(r16)
10105664:	1886703a 	and	r3,r3,r2
10105668:	003f9106 	br	101054b0 <__alt_data_end+0xfffe54b0>
1010566c:	60800217 	ldw	r2,8(r12)
10105670:	213fffc4 	addi	r4,r4,-1
10105674:	1300651e 	bne	r2,r12,1010580c <_malloc_r+0x7f4>
10105678:	208000cc 	andi	r2,r4,3
1010567c:	633ffe04 	addi	r12,r12,-8
10105680:	103ffa1e 	bne	r2,zero,1010566c <__alt_data_end+0xfffe566c>
10105684:	98800117 	ldw	r2,4(r19)
10105688:	0146303a 	nor	r3,zero,r5
1010568c:	1884703a 	and	r2,r3,r2
10105690:	98800115 	stw	r2,4(r19)
10105694:	294b883a 	add	r5,r5,r5
10105698:	117f2836 	bltu	r2,r5,1010533c <__alt_data_end+0xfffe533c>
1010569c:	283f2726 	beq	r5,zero,1010533c <__alt_data_end+0xfffe533c>
101056a0:	2886703a 	and	r3,r5,r2
101056a4:	5809883a 	mov	r4,r11
101056a8:	183ec31e 	bne	r3,zero,101051b8 <__alt_data_end+0xfffe51b8>
101056ac:	294b883a 	add	r5,r5,r5
101056b0:	2886703a 	and	r3,r5,r2
101056b4:	21000104 	addi	r4,r4,4
101056b8:	183ffc26 	beq	r3,zero,101056ac <__alt_data_end+0xfffe56ac>
101056bc:	003ebe06 	br	101051b8 <__alt_data_end+0xfffe51b8>
101056c0:	00c05504 	movi	r3,340
101056c4:	18801236 	bltu	r3,r2,10105710 <_malloc_r+0x6f8>
101056c8:	8804d3fa 	srli	r2,r17,15
101056cc:	12001e04 	addi	r8,r2,120
101056d0:	11c01dc4 	addi	r7,r2,119
101056d4:	4209883a 	add	r4,r8,r8
101056d8:	003e6d06 	br	10105090 <__alt_data_end+0xfffe5090>
101056dc:	00c40004 	movi	r3,4096
101056e0:	003f4606 	br	101053fc <__alt_data_end+0xfffe53fc>
101056e4:	00800044 	movi	r2,1
101056e8:	a0800115 	stw	r2,4(r20)
101056ec:	003f7406 	br	101054c0 <__alt_data_end+0xfffe54c0>
101056f0:	1805d0ba 	srai	r2,r3,2
101056f4:	01c00044 	movi	r7,1
101056f8:	30c00117 	ldw	r3,4(r6)
101056fc:	388e983a 	sll	r7,r7,r2
10105700:	2805883a 	mov	r2,r5
10105704:	38c6b03a 	or	r3,r7,r3
10105708:	30c00115 	stw	r3,4(r6)
1010570c:	003f9b06 	br	1010557c <__alt_data_end+0xfffe557c>
10105710:	00c15504 	movi	r3,1364
10105714:	18801a36 	bltu	r3,r2,10105780 <_malloc_r+0x768>
10105718:	8804d4ba 	srli	r2,r17,18
1010571c:	12001f44 	addi	r8,r2,125
10105720:	11c01f04 	addi	r7,r2,124
10105724:	4209883a 	add	r4,r8,r8
10105728:	003e5906 	br	10105090 <__alt_data_end+0xfffe5090>
1010572c:	ad400404 	addi	r21,r21,16
10105730:	003f1706 	br	10105390 <__alt_data_end+0xfffe5390>
10105734:	00c01504 	movi	r3,84
10105738:	18802336 	bltu	r3,r2,101057c8 <_malloc_r+0x7b0>
1010573c:	3804d33a 	srli	r2,r7,12
10105740:	11401bc4 	addi	r5,r2,111
10105744:	10c01b84 	addi	r3,r2,110
10105748:	294b883a 	add	r5,r5,r5
1010574c:	003f7b06 	br	1010553c <__alt_data_end+0xfffe553c>
10105750:	9c000217 	ldw	r16,8(r19)
10105754:	00bfff04 	movi	r2,-4
10105758:	80c00117 	ldw	r3,4(r16)
1010575c:	1886703a 	and	r3,r3,r2
10105760:	003f5306 	br	101054b0 <__alt_data_end+0xfffe54b0>
10105764:	3083ffcc 	andi	r2,r6,4095
10105768:	103f181e 	bne	r2,zero,101053cc <__alt_data_end+0xfffe53cc>
1010576c:	99000217 	ldw	r4,8(r19)
10105770:	b545883a 	add	r2,r22,r21
10105774:	10800054 	ori	r2,r2,1
10105778:	20800115 	stw	r2,4(r4)
1010577c:	003f3e06 	br	10105478 <__alt_data_end+0xfffe5478>
10105780:	01003f84 	movi	r4,254
10105784:	02001fc4 	movi	r8,127
10105788:	01c01f84 	movi	r7,126
1010578c:	003e4006 	br	10105090 <__alt_data_end+0xfffe5090>
10105790:	00840474 	movhi	r2,4113
10105794:	10858a04 	addi	r2,r2,5672
10105798:	15000015 	stw	r20,0(r2)
1010579c:	003f1106 	br	101053e4 <__alt_data_end+0xfffe53e4>
101057a0:	00800044 	movi	r2,1
101057a4:	002b883a 	mov	r21,zero
101057a8:	003f1f06 	br	10105428 <__alt_data_end+0xfffe5428>
101057ac:	81400204 	addi	r5,r16,8
101057b0:	9009883a 	mov	r4,r18
101057b4:	01048e80 	call	101048e8 <_free_r>
101057b8:	00840474 	movhi	r2,4113
101057bc:	108c6204 	addi	r2,r2,12680
101057c0:	10c00017 	ldw	r3,0(r2)
101057c4:	003f2c06 	br	10105478 <__alt_data_end+0xfffe5478>
101057c8:	00c05504 	movi	r3,340
101057cc:	18800536 	bltu	r3,r2,101057e4 <_malloc_r+0x7cc>
101057d0:	3804d3fa 	srli	r2,r7,15
101057d4:	11401e04 	addi	r5,r2,120
101057d8:	10c01dc4 	addi	r3,r2,119
101057dc:	294b883a 	add	r5,r5,r5
101057e0:	003f5606 	br	1010553c <__alt_data_end+0xfffe553c>
101057e4:	00c15504 	movi	r3,1364
101057e8:	18800536 	bltu	r3,r2,10105800 <_malloc_r+0x7e8>
101057ec:	3804d4ba 	srli	r2,r7,18
101057f0:	11401f44 	addi	r5,r2,125
101057f4:	10c01f04 	addi	r3,r2,124
101057f8:	294b883a 	add	r5,r5,r5
101057fc:	003f4f06 	br	1010553c <__alt_data_end+0xfffe553c>
10105800:	01403f84 	movi	r5,254
10105804:	00c01f84 	movi	r3,126
10105808:	003f4c06 	br	1010553c <__alt_data_end+0xfffe553c>
1010580c:	98800117 	ldw	r2,4(r19)
10105810:	003fa006 	br	10105694 <__alt_data_end+0xfffe5694>
10105814:	8808d0fa 	srli	r4,r17,3
10105818:	20800044 	addi	r2,r4,1
1010581c:	1085883a 	add	r2,r2,r2
10105820:	003e9006 	br	10105264 <__alt_data_end+0xfffe5264>

10105824 <memchr>:
10105824:	208000cc 	andi	r2,r4,3
10105828:	280f883a 	mov	r7,r5
1010582c:	10003426 	beq	r2,zero,10105900 <memchr+0xdc>
10105830:	30bfffc4 	addi	r2,r6,-1
10105834:	30001a26 	beq	r6,zero,101058a0 <memchr+0x7c>
10105838:	20c00003 	ldbu	r3,0(r4)
1010583c:	29803fcc 	andi	r6,r5,255
10105840:	30c0051e 	bne	r6,r3,10105858 <memchr+0x34>
10105844:	00001806 	br	101058a8 <memchr+0x84>
10105848:	10001526 	beq	r2,zero,101058a0 <memchr+0x7c>
1010584c:	20c00003 	ldbu	r3,0(r4)
10105850:	10bfffc4 	addi	r2,r2,-1
10105854:	30c01426 	beq	r6,r3,101058a8 <memchr+0x84>
10105858:	21000044 	addi	r4,r4,1
1010585c:	20c000cc 	andi	r3,r4,3
10105860:	183ff91e 	bne	r3,zero,10105848 <__alt_data_end+0xfffe5848>
10105864:	020000c4 	movi	r8,3
10105868:	40801136 	bltu	r8,r2,101058b0 <memchr+0x8c>
1010586c:	10000c26 	beq	r2,zero,101058a0 <memchr+0x7c>
10105870:	20c00003 	ldbu	r3,0(r4)
10105874:	29403fcc 	andi	r5,r5,255
10105878:	28c00b26 	beq	r5,r3,101058a8 <memchr+0x84>
1010587c:	20c00044 	addi	r3,r4,1
10105880:	39803fcc 	andi	r6,r7,255
10105884:	2089883a 	add	r4,r4,r2
10105888:	00000306 	br	10105898 <memchr+0x74>
1010588c:	18c00044 	addi	r3,r3,1
10105890:	197fffc3 	ldbu	r5,-1(r3)
10105894:	31400526 	beq	r6,r5,101058ac <memchr+0x88>
10105898:	1805883a 	mov	r2,r3
1010589c:	20fffb1e 	bne	r4,r3,1010588c <__alt_data_end+0xfffe588c>
101058a0:	0005883a 	mov	r2,zero
101058a4:	f800283a 	ret
101058a8:	2005883a 	mov	r2,r4
101058ac:	f800283a 	ret
101058b0:	28c03fcc 	andi	r3,r5,255
101058b4:	1812923a 	slli	r9,r3,8
101058b8:	02ffbff4 	movhi	r11,65279
101058bc:	02a02074 	movhi	r10,32897
101058c0:	48d2b03a 	or	r9,r9,r3
101058c4:	4806943a 	slli	r3,r9,16
101058c8:	5affbfc4 	addi	r11,r11,-257
101058cc:	52a02004 	addi	r10,r10,-32640
101058d0:	48d2b03a 	or	r9,r9,r3
101058d4:	20c00017 	ldw	r3,0(r4)
101058d8:	48c6f03a 	xor	r3,r9,r3
101058dc:	1acd883a 	add	r6,r3,r11
101058e0:	00c6303a 	nor	r3,zero,r3
101058e4:	30c6703a 	and	r3,r6,r3
101058e8:	1a86703a 	and	r3,r3,r10
101058ec:	183fe01e 	bne	r3,zero,10105870 <__alt_data_end+0xfffe5870>
101058f0:	10bfff04 	addi	r2,r2,-4
101058f4:	21000104 	addi	r4,r4,4
101058f8:	40bff636 	bltu	r8,r2,101058d4 <__alt_data_end+0xfffe58d4>
101058fc:	003fdb06 	br	1010586c <__alt_data_end+0xfffe586c>
10105900:	3005883a 	mov	r2,r6
10105904:	003fd706 	br	10105864 <__alt_data_end+0xfffe5864>

10105908 <memcpy>:
10105908:	defffd04 	addi	sp,sp,-12
1010590c:	dfc00215 	stw	ra,8(sp)
10105910:	dc400115 	stw	r17,4(sp)
10105914:	dc000015 	stw	r16,0(sp)
10105918:	00c003c4 	movi	r3,15
1010591c:	2005883a 	mov	r2,r4
10105920:	1980452e 	bgeu	r3,r6,10105a38 <memcpy+0x130>
10105924:	2906b03a 	or	r3,r5,r4
10105928:	18c000cc 	andi	r3,r3,3
1010592c:	1800441e 	bne	r3,zero,10105a40 <memcpy+0x138>
10105930:	347ffc04 	addi	r17,r6,-16
10105934:	8822d13a 	srli	r17,r17,4
10105938:	28c00104 	addi	r3,r5,4
1010593c:	23400104 	addi	r13,r4,4
10105940:	8820913a 	slli	r16,r17,4
10105944:	2b000204 	addi	r12,r5,8
10105948:	22c00204 	addi	r11,r4,8
1010594c:	84000504 	addi	r16,r16,20
10105950:	2a800304 	addi	r10,r5,12
10105954:	22400304 	addi	r9,r4,12
10105958:	2c21883a 	add	r16,r5,r16
1010595c:	2811883a 	mov	r8,r5
10105960:	200f883a 	mov	r7,r4
10105964:	41000017 	ldw	r4,0(r8)
10105968:	1fc00017 	ldw	ra,0(r3)
1010596c:	63c00017 	ldw	r15,0(r12)
10105970:	39000015 	stw	r4,0(r7)
10105974:	53800017 	ldw	r14,0(r10)
10105978:	6fc00015 	stw	ra,0(r13)
1010597c:	5bc00015 	stw	r15,0(r11)
10105980:	4b800015 	stw	r14,0(r9)
10105984:	18c00404 	addi	r3,r3,16
10105988:	39c00404 	addi	r7,r7,16
1010598c:	42000404 	addi	r8,r8,16
10105990:	6b400404 	addi	r13,r13,16
10105994:	63000404 	addi	r12,r12,16
10105998:	5ac00404 	addi	r11,r11,16
1010599c:	52800404 	addi	r10,r10,16
101059a0:	4a400404 	addi	r9,r9,16
101059a4:	1c3fef1e 	bne	r3,r16,10105964 <__alt_data_end+0xfffe5964>
101059a8:	89c00044 	addi	r7,r17,1
101059ac:	380e913a 	slli	r7,r7,4
101059b0:	310003cc 	andi	r4,r6,15
101059b4:	02c000c4 	movi	r11,3
101059b8:	11c7883a 	add	r3,r2,r7
101059bc:	29cb883a 	add	r5,r5,r7
101059c0:	5900212e 	bgeu	r11,r4,10105a48 <memcpy+0x140>
101059c4:	1813883a 	mov	r9,r3
101059c8:	2811883a 	mov	r8,r5
101059cc:	200f883a 	mov	r7,r4
101059d0:	42800017 	ldw	r10,0(r8)
101059d4:	4a400104 	addi	r9,r9,4
101059d8:	39ffff04 	addi	r7,r7,-4
101059dc:	4abfff15 	stw	r10,-4(r9)
101059e0:	42000104 	addi	r8,r8,4
101059e4:	59fffa36 	bltu	r11,r7,101059d0 <__alt_data_end+0xfffe59d0>
101059e8:	213fff04 	addi	r4,r4,-4
101059ec:	2008d0ba 	srli	r4,r4,2
101059f0:	318000cc 	andi	r6,r6,3
101059f4:	21000044 	addi	r4,r4,1
101059f8:	2109883a 	add	r4,r4,r4
101059fc:	2109883a 	add	r4,r4,r4
10105a00:	1907883a 	add	r3,r3,r4
10105a04:	290b883a 	add	r5,r5,r4
10105a08:	30000626 	beq	r6,zero,10105a24 <memcpy+0x11c>
10105a0c:	198d883a 	add	r6,r3,r6
10105a10:	29c00003 	ldbu	r7,0(r5)
10105a14:	18c00044 	addi	r3,r3,1
10105a18:	29400044 	addi	r5,r5,1
10105a1c:	19ffffc5 	stb	r7,-1(r3)
10105a20:	19bffb1e 	bne	r3,r6,10105a10 <__alt_data_end+0xfffe5a10>
10105a24:	dfc00217 	ldw	ra,8(sp)
10105a28:	dc400117 	ldw	r17,4(sp)
10105a2c:	dc000017 	ldw	r16,0(sp)
10105a30:	dec00304 	addi	sp,sp,12
10105a34:	f800283a 	ret
10105a38:	2007883a 	mov	r3,r4
10105a3c:	003ff206 	br	10105a08 <__alt_data_end+0xfffe5a08>
10105a40:	2007883a 	mov	r3,r4
10105a44:	003ff106 	br	10105a0c <__alt_data_end+0xfffe5a0c>
10105a48:	200d883a 	mov	r6,r4
10105a4c:	003fee06 	br	10105a08 <__alt_data_end+0xfffe5a08>

10105a50 <memset>:
10105a50:	20c000cc 	andi	r3,r4,3
10105a54:	2005883a 	mov	r2,r4
10105a58:	18004426 	beq	r3,zero,10105b6c <memset+0x11c>
10105a5c:	31ffffc4 	addi	r7,r6,-1
10105a60:	30004026 	beq	r6,zero,10105b64 <memset+0x114>
10105a64:	2813883a 	mov	r9,r5
10105a68:	200d883a 	mov	r6,r4
10105a6c:	2007883a 	mov	r3,r4
10105a70:	00000406 	br	10105a84 <memset+0x34>
10105a74:	3a3fffc4 	addi	r8,r7,-1
10105a78:	31800044 	addi	r6,r6,1
10105a7c:	38003926 	beq	r7,zero,10105b64 <memset+0x114>
10105a80:	400f883a 	mov	r7,r8
10105a84:	18c00044 	addi	r3,r3,1
10105a88:	32400005 	stb	r9,0(r6)
10105a8c:	1a0000cc 	andi	r8,r3,3
10105a90:	403ff81e 	bne	r8,zero,10105a74 <__alt_data_end+0xfffe5a74>
10105a94:	010000c4 	movi	r4,3
10105a98:	21c02d2e 	bgeu	r4,r7,10105b50 <memset+0x100>
10105a9c:	29003fcc 	andi	r4,r5,255
10105aa0:	200c923a 	slli	r6,r4,8
10105aa4:	3108b03a 	or	r4,r6,r4
10105aa8:	200c943a 	slli	r6,r4,16
10105aac:	218cb03a 	or	r6,r4,r6
10105ab0:	010003c4 	movi	r4,15
10105ab4:	21c0182e 	bgeu	r4,r7,10105b18 <memset+0xc8>
10105ab8:	3b3ffc04 	addi	r12,r7,-16
10105abc:	6018d13a 	srli	r12,r12,4
10105ac0:	1a000104 	addi	r8,r3,4
10105ac4:	1ac00204 	addi	r11,r3,8
10105ac8:	6008913a 	slli	r4,r12,4
10105acc:	1a800304 	addi	r10,r3,12
10105ad0:	1813883a 	mov	r9,r3
10105ad4:	21000504 	addi	r4,r4,20
10105ad8:	1909883a 	add	r4,r3,r4
10105adc:	49800015 	stw	r6,0(r9)
10105ae0:	41800015 	stw	r6,0(r8)
10105ae4:	59800015 	stw	r6,0(r11)
10105ae8:	51800015 	stw	r6,0(r10)
10105aec:	42000404 	addi	r8,r8,16
10105af0:	4a400404 	addi	r9,r9,16
10105af4:	5ac00404 	addi	r11,r11,16
10105af8:	52800404 	addi	r10,r10,16
10105afc:	413ff71e 	bne	r8,r4,10105adc <__alt_data_end+0xfffe5adc>
10105b00:	63000044 	addi	r12,r12,1
10105b04:	6018913a 	slli	r12,r12,4
10105b08:	39c003cc 	andi	r7,r7,15
10105b0c:	010000c4 	movi	r4,3
10105b10:	1b07883a 	add	r3,r3,r12
10105b14:	21c00e2e 	bgeu	r4,r7,10105b50 <memset+0x100>
10105b18:	1813883a 	mov	r9,r3
10105b1c:	3811883a 	mov	r8,r7
10105b20:	010000c4 	movi	r4,3
10105b24:	49800015 	stw	r6,0(r9)
10105b28:	423fff04 	addi	r8,r8,-4
10105b2c:	4a400104 	addi	r9,r9,4
10105b30:	223ffc36 	bltu	r4,r8,10105b24 <__alt_data_end+0xfffe5b24>
10105b34:	393fff04 	addi	r4,r7,-4
10105b38:	2008d0ba 	srli	r4,r4,2
10105b3c:	39c000cc 	andi	r7,r7,3
10105b40:	21000044 	addi	r4,r4,1
10105b44:	2109883a 	add	r4,r4,r4
10105b48:	2109883a 	add	r4,r4,r4
10105b4c:	1907883a 	add	r3,r3,r4
10105b50:	38000526 	beq	r7,zero,10105b68 <memset+0x118>
10105b54:	19cf883a 	add	r7,r3,r7
10105b58:	19400005 	stb	r5,0(r3)
10105b5c:	18c00044 	addi	r3,r3,1
10105b60:	38fffd1e 	bne	r7,r3,10105b58 <__alt_data_end+0xfffe5b58>
10105b64:	f800283a 	ret
10105b68:	f800283a 	ret
10105b6c:	2007883a 	mov	r3,r4
10105b70:	300f883a 	mov	r7,r6
10105b74:	003fc706 	br	10105a94 <__alt_data_end+0xfffe5a94>

10105b78 <_Balloc>:
10105b78:	20801317 	ldw	r2,76(r4)
10105b7c:	defffc04 	addi	sp,sp,-16
10105b80:	dc400115 	stw	r17,4(sp)
10105b84:	dc000015 	stw	r16,0(sp)
10105b88:	dfc00315 	stw	ra,12(sp)
10105b8c:	dc800215 	stw	r18,8(sp)
10105b90:	2023883a 	mov	r17,r4
10105b94:	2821883a 	mov	r16,r5
10105b98:	10000f26 	beq	r2,zero,10105bd8 <_Balloc+0x60>
10105b9c:	8407883a 	add	r3,r16,r16
10105ba0:	18c7883a 	add	r3,r3,r3
10105ba4:	10c7883a 	add	r3,r2,r3
10105ba8:	18800017 	ldw	r2,0(r3)
10105bac:	10001126 	beq	r2,zero,10105bf4 <_Balloc+0x7c>
10105bb0:	11000017 	ldw	r4,0(r2)
10105bb4:	19000015 	stw	r4,0(r3)
10105bb8:	10000415 	stw	zero,16(r2)
10105bbc:	10000315 	stw	zero,12(r2)
10105bc0:	dfc00317 	ldw	ra,12(sp)
10105bc4:	dc800217 	ldw	r18,8(sp)
10105bc8:	dc400117 	ldw	r17,4(sp)
10105bcc:	dc000017 	ldw	r16,0(sp)
10105bd0:	dec00404 	addi	sp,sp,16
10105bd4:	f800283a 	ret
10105bd8:	01800844 	movi	r6,33
10105bdc:	01400104 	movi	r5,4
10105be0:	01088ec0 	call	101088ec <_calloc_r>
10105be4:	88801315 	stw	r2,76(r17)
10105be8:	103fec1e 	bne	r2,zero,10105b9c <__alt_data_end+0xfffe5b9c>
10105bec:	0005883a 	mov	r2,zero
10105bf0:	003ff306 	br	10105bc0 <__alt_data_end+0xfffe5bc0>
10105bf4:	01400044 	movi	r5,1
10105bf8:	2c24983a 	sll	r18,r5,r16
10105bfc:	8809883a 	mov	r4,r17
10105c00:	91800144 	addi	r6,r18,5
10105c04:	318d883a 	add	r6,r6,r6
10105c08:	318d883a 	add	r6,r6,r6
10105c0c:	01088ec0 	call	101088ec <_calloc_r>
10105c10:	103ff626 	beq	r2,zero,10105bec <__alt_data_end+0xfffe5bec>
10105c14:	14000115 	stw	r16,4(r2)
10105c18:	14800215 	stw	r18,8(r2)
10105c1c:	003fe606 	br	10105bb8 <__alt_data_end+0xfffe5bb8>

10105c20 <_Bfree>:
10105c20:	28000826 	beq	r5,zero,10105c44 <_Bfree+0x24>
10105c24:	28c00117 	ldw	r3,4(r5)
10105c28:	20801317 	ldw	r2,76(r4)
10105c2c:	18c7883a 	add	r3,r3,r3
10105c30:	18c7883a 	add	r3,r3,r3
10105c34:	10c5883a 	add	r2,r2,r3
10105c38:	10c00017 	ldw	r3,0(r2)
10105c3c:	28c00015 	stw	r3,0(r5)
10105c40:	11400015 	stw	r5,0(r2)
10105c44:	f800283a 	ret

10105c48 <__multadd>:
10105c48:	defffa04 	addi	sp,sp,-24
10105c4c:	dc800315 	stw	r18,12(sp)
10105c50:	dc400215 	stw	r17,8(sp)
10105c54:	dc000115 	stw	r16,4(sp)
10105c58:	2823883a 	mov	r17,r5
10105c5c:	2c000417 	ldw	r16,16(r5)
10105c60:	dfc00515 	stw	ra,20(sp)
10105c64:	dcc00415 	stw	r19,16(sp)
10105c68:	2025883a 	mov	r18,r4
10105c6c:	29400504 	addi	r5,r5,20
10105c70:	0011883a 	mov	r8,zero
10105c74:	28c00017 	ldw	r3,0(r5)
10105c78:	29400104 	addi	r5,r5,4
10105c7c:	42000044 	addi	r8,r8,1
10105c80:	18bfffcc 	andi	r2,r3,65535
10105c84:	1185383a 	mul	r2,r2,r6
10105c88:	1806d43a 	srli	r3,r3,16
10105c8c:	11cf883a 	add	r7,r2,r7
10105c90:	3808d43a 	srli	r4,r7,16
10105c94:	1987383a 	mul	r3,r3,r6
10105c98:	38bfffcc 	andi	r2,r7,65535
10105c9c:	1907883a 	add	r3,r3,r4
10105ca0:	1808943a 	slli	r4,r3,16
10105ca4:	180ed43a 	srli	r7,r3,16
10105ca8:	2085883a 	add	r2,r4,r2
10105cac:	28bfff15 	stw	r2,-4(r5)
10105cb0:	443ff016 	blt	r8,r16,10105c74 <__alt_data_end+0xfffe5c74>
10105cb4:	38000926 	beq	r7,zero,10105cdc <__multadd+0x94>
10105cb8:	88800217 	ldw	r2,8(r17)
10105cbc:	80800f0e 	bge	r16,r2,10105cfc <__multadd+0xb4>
10105cc0:	80800144 	addi	r2,r16,5
10105cc4:	1085883a 	add	r2,r2,r2
10105cc8:	1085883a 	add	r2,r2,r2
10105ccc:	8885883a 	add	r2,r17,r2
10105cd0:	11c00015 	stw	r7,0(r2)
10105cd4:	84000044 	addi	r16,r16,1
10105cd8:	8c000415 	stw	r16,16(r17)
10105cdc:	8805883a 	mov	r2,r17
10105ce0:	dfc00517 	ldw	ra,20(sp)
10105ce4:	dcc00417 	ldw	r19,16(sp)
10105ce8:	dc800317 	ldw	r18,12(sp)
10105cec:	dc400217 	ldw	r17,8(sp)
10105cf0:	dc000117 	ldw	r16,4(sp)
10105cf4:	dec00604 	addi	sp,sp,24
10105cf8:	f800283a 	ret
10105cfc:	89400117 	ldw	r5,4(r17)
10105d00:	9009883a 	mov	r4,r18
10105d04:	d9c00015 	stw	r7,0(sp)
10105d08:	29400044 	addi	r5,r5,1
10105d0c:	0105b780 	call	10105b78 <_Balloc>
10105d10:	89800417 	ldw	r6,16(r17)
10105d14:	89400304 	addi	r5,r17,12
10105d18:	11000304 	addi	r4,r2,12
10105d1c:	31800084 	addi	r6,r6,2
10105d20:	318d883a 	add	r6,r6,r6
10105d24:	318d883a 	add	r6,r6,r6
10105d28:	1027883a 	mov	r19,r2
10105d2c:	01059080 	call	10105908 <memcpy>
10105d30:	d9c00017 	ldw	r7,0(sp)
10105d34:	88000a26 	beq	r17,zero,10105d60 <__multadd+0x118>
10105d38:	88c00117 	ldw	r3,4(r17)
10105d3c:	90801317 	ldw	r2,76(r18)
10105d40:	18c7883a 	add	r3,r3,r3
10105d44:	18c7883a 	add	r3,r3,r3
10105d48:	10c5883a 	add	r2,r2,r3
10105d4c:	10c00017 	ldw	r3,0(r2)
10105d50:	88c00015 	stw	r3,0(r17)
10105d54:	14400015 	stw	r17,0(r2)
10105d58:	9823883a 	mov	r17,r19
10105d5c:	003fd806 	br	10105cc0 <__alt_data_end+0xfffe5cc0>
10105d60:	9823883a 	mov	r17,r19
10105d64:	003fd606 	br	10105cc0 <__alt_data_end+0xfffe5cc0>

10105d68 <__s2b>:
10105d68:	defff904 	addi	sp,sp,-28
10105d6c:	dc400115 	stw	r17,4(sp)
10105d70:	dc000015 	stw	r16,0(sp)
10105d74:	2023883a 	mov	r17,r4
10105d78:	2821883a 	mov	r16,r5
10105d7c:	39000204 	addi	r4,r7,8
10105d80:	01400244 	movi	r5,9
10105d84:	dcc00315 	stw	r19,12(sp)
10105d88:	dc800215 	stw	r18,8(sp)
10105d8c:	dfc00615 	stw	ra,24(sp)
10105d90:	dd400515 	stw	r21,20(sp)
10105d94:	dd000415 	stw	r20,16(sp)
10105d98:	3825883a 	mov	r18,r7
10105d9c:	3027883a 	mov	r19,r6
10105da0:	010a7980 	call	1010a798 <__divsi3>
10105da4:	00c00044 	movi	r3,1
10105da8:	000b883a 	mov	r5,zero
10105dac:	1880030e 	bge	r3,r2,10105dbc <__s2b+0x54>
10105db0:	18c7883a 	add	r3,r3,r3
10105db4:	29400044 	addi	r5,r5,1
10105db8:	18bffd16 	blt	r3,r2,10105db0 <__alt_data_end+0xfffe5db0>
10105dbc:	8809883a 	mov	r4,r17
10105dc0:	0105b780 	call	10105b78 <_Balloc>
10105dc4:	d8c00717 	ldw	r3,28(sp)
10105dc8:	10c00515 	stw	r3,20(r2)
10105dcc:	00c00044 	movi	r3,1
10105dd0:	10c00415 	stw	r3,16(r2)
10105dd4:	00c00244 	movi	r3,9
10105dd8:	1cc0210e 	bge	r3,r19,10105e60 <__s2b+0xf8>
10105ddc:	80eb883a 	add	r21,r16,r3
10105de0:	a829883a 	mov	r20,r21
10105de4:	84e1883a 	add	r16,r16,r19
10105de8:	a1c00007 	ldb	r7,0(r20)
10105dec:	01800284 	movi	r6,10
10105df0:	a5000044 	addi	r20,r20,1
10105df4:	100b883a 	mov	r5,r2
10105df8:	39fff404 	addi	r7,r7,-48
10105dfc:	8809883a 	mov	r4,r17
10105e00:	0105c480 	call	10105c48 <__multadd>
10105e04:	a43ff81e 	bne	r20,r16,10105de8 <__alt_data_end+0xfffe5de8>
10105e08:	ace1883a 	add	r16,r21,r19
10105e0c:	843ffe04 	addi	r16,r16,-8
10105e10:	9c800a0e 	bge	r19,r18,10105e3c <__s2b+0xd4>
10105e14:	94e5c83a 	sub	r18,r18,r19
10105e18:	84a5883a 	add	r18,r16,r18
10105e1c:	81c00007 	ldb	r7,0(r16)
10105e20:	01800284 	movi	r6,10
10105e24:	84000044 	addi	r16,r16,1
10105e28:	100b883a 	mov	r5,r2
10105e2c:	39fff404 	addi	r7,r7,-48
10105e30:	8809883a 	mov	r4,r17
10105e34:	0105c480 	call	10105c48 <__multadd>
10105e38:	84bff81e 	bne	r16,r18,10105e1c <__alt_data_end+0xfffe5e1c>
10105e3c:	dfc00617 	ldw	ra,24(sp)
10105e40:	dd400517 	ldw	r21,20(sp)
10105e44:	dd000417 	ldw	r20,16(sp)
10105e48:	dcc00317 	ldw	r19,12(sp)
10105e4c:	dc800217 	ldw	r18,8(sp)
10105e50:	dc400117 	ldw	r17,4(sp)
10105e54:	dc000017 	ldw	r16,0(sp)
10105e58:	dec00704 	addi	sp,sp,28
10105e5c:	f800283a 	ret
10105e60:	84000284 	addi	r16,r16,10
10105e64:	1827883a 	mov	r19,r3
10105e68:	003fe906 	br	10105e10 <__alt_data_end+0xfffe5e10>

10105e6c <__hi0bits>:
10105e6c:	20bfffec 	andhi	r2,r4,65535
10105e70:	1000141e 	bne	r2,zero,10105ec4 <__hi0bits+0x58>
10105e74:	2008943a 	slli	r4,r4,16
10105e78:	00800404 	movi	r2,16
10105e7c:	20ffc02c 	andhi	r3,r4,65280
10105e80:	1800021e 	bne	r3,zero,10105e8c <__hi0bits+0x20>
10105e84:	2008923a 	slli	r4,r4,8
10105e88:	10800204 	addi	r2,r2,8
10105e8c:	20fc002c 	andhi	r3,r4,61440
10105e90:	1800021e 	bne	r3,zero,10105e9c <__hi0bits+0x30>
10105e94:	2008913a 	slli	r4,r4,4
10105e98:	10800104 	addi	r2,r2,4
10105e9c:	20f0002c 	andhi	r3,r4,49152
10105ea0:	1800031e 	bne	r3,zero,10105eb0 <__hi0bits+0x44>
10105ea4:	2109883a 	add	r4,r4,r4
10105ea8:	10800084 	addi	r2,r2,2
10105eac:	2109883a 	add	r4,r4,r4
10105eb0:	20000316 	blt	r4,zero,10105ec0 <__hi0bits+0x54>
10105eb4:	2110002c 	andhi	r4,r4,16384
10105eb8:	2000041e 	bne	r4,zero,10105ecc <__hi0bits+0x60>
10105ebc:	00800804 	movi	r2,32
10105ec0:	f800283a 	ret
10105ec4:	0005883a 	mov	r2,zero
10105ec8:	003fec06 	br	10105e7c <__alt_data_end+0xfffe5e7c>
10105ecc:	10800044 	addi	r2,r2,1
10105ed0:	f800283a 	ret

10105ed4 <__lo0bits>:
10105ed4:	20c00017 	ldw	r3,0(r4)
10105ed8:	188001cc 	andi	r2,r3,7
10105edc:	10000826 	beq	r2,zero,10105f00 <__lo0bits+0x2c>
10105ee0:	1880004c 	andi	r2,r3,1
10105ee4:	1000211e 	bne	r2,zero,10105f6c <__lo0bits+0x98>
10105ee8:	1880008c 	andi	r2,r3,2
10105eec:	1000211e 	bne	r2,zero,10105f74 <__lo0bits+0xa0>
10105ef0:	1806d0ba 	srli	r3,r3,2
10105ef4:	00800084 	movi	r2,2
10105ef8:	20c00015 	stw	r3,0(r4)
10105efc:	f800283a 	ret
10105f00:	18bfffcc 	andi	r2,r3,65535
10105f04:	10001326 	beq	r2,zero,10105f54 <__lo0bits+0x80>
10105f08:	0005883a 	mov	r2,zero
10105f0c:	19403fcc 	andi	r5,r3,255
10105f10:	2800021e 	bne	r5,zero,10105f1c <__lo0bits+0x48>
10105f14:	1806d23a 	srli	r3,r3,8
10105f18:	10800204 	addi	r2,r2,8
10105f1c:	194003cc 	andi	r5,r3,15
10105f20:	2800021e 	bne	r5,zero,10105f2c <__lo0bits+0x58>
10105f24:	1806d13a 	srli	r3,r3,4
10105f28:	10800104 	addi	r2,r2,4
10105f2c:	194000cc 	andi	r5,r3,3
10105f30:	2800021e 	bne	r5,zero,10105f3c <__lo0bits+0x68>
10105f34:	1806d0ba 	srli	r3,r3,2
10105f38:	10800084 	addi	r2,r2,2
10105f3c:	1940004c 	andi	r5,r3,1
10105f40:	2800081e 	bne	r5,zero,10105f64 <__lo0bits+0x90>
10105f44:	1806d07a 	srli	r3,r3,1
10105f48:	1800051e 	bne	r3,zero,10105f60 <__lo0bits+0x8c>
10105f4c:	00800804 	movi	r2,32
10105f50:	f800283a 	ret
10105f54:	1806d43a 	srli	r3,r3,16
10105f58:	00800404 	movi	r2,16
10105f5c:	003feb06 	br	10105f0c <__alt_data_end+0xfffe5f0c>
10105f60:	10800044 	addi	r2,r2,1
10105f64:	20c00015 	stw	r3,0(r4)
10105f68:	f800283a 	ret
10105f6c:	0005883a 	mov	r2,zero
10105f70:	f800283a 	ret
10105f74:	1806d07a 	srli	r3,r3,1
10105f78:	00800044 	movi	r2,1
10105f7c:	20c00015 	stw	r3,0(r4)
10105f80:	f800283a 	ret

10105f84 <__i2b>:
10105f84:	defffd04 	addi	sp,sp,-12
10105f88:	dc000015 	stw	r16,0(sp)
10105f8c:	04000044 	movi	r16,1
10105f90:	dc400115 	stw	r17,4(sp)
10105f94:	2823883a 	mov	r17,r5
10105f98:	800b883a 	mov	r5,r16
10105f9c:	dfc00215 	stw	ra,8(sp)
10105fa0:	0105b780 	call	10105b78 <_Balloc>
10105fa4:	14400515 	stw	r17,20(r2)
10105fa8:	14000415 	stw	r16,16(r2)
10105fac:	dfc00217 	ldw	ra,8(sp)
10105fb0:	dc400117 	ldw	r17,4(sp)
10105fb4:	dc000017 	ldw	r16,0(sp)
10105fb8:	dec00304 	addi	sp,sp,12
10105fbc:	f800283a 	ret

10105fc0 <__multiply>:
10105fc0:	defffa04 	addi	sp,sp,-24
10105fc4:	dcc00315 	stw	r19,12(sp)
10105fc8:	dc800215 	stw	r18,8(sp)
10105fcc:	34c00417 	ldw	r19,16(r6)
10105fd0:	2c800417 	ldw	r18,16(r5)
10105fd4:	dd000415 	stw	r20,16(sp)
10105fd8:	dc400115 	stw	r17,4(sp)
10105fdc:	dfc00515 	stw	ra,20(sp)
10105fe0:	dc000015 	stw	r16,0(sp)
10105fe4:	2829883a 	mov	r20,r5
10105fe8:	3023883a 	mov	r17,r6
10105fec:	94c0050e 	bge	r18,r19,10106004 <__multiply+0x44>
10105ff0:	9007883a 	mov	r3,r18
10105ff4:	3029883a 	mov	r20,r6
10105ff8:	9825883a 	mov	r18,r19
10105ffc:	2823883a 	mov	r17,r5
10106000:	1827883a 	mov	r19,r3
10106004:	a0800217 	ldw	r2,8(r20)
10106008:	94e1883a 	add	r16,r18,r19
1010600c:	a1400117 	ldw	r5,4(r20)
10106010:	1400010e 	bge	r2,r16,10106018 <__multiply+0x58>
10106014:	29400044 	addi	r5,r5,1
10106018:	0105b780 	call	10105b78 <_Balloc>
1010601c:	8415883a 	add	r10,r16,r16
10106020:	12c00504 	addi	r11,r2,20
10106024:	5295883a 	add	r10,r10,r10
10106028:	5a95883a 	add	r10,r11,r10
1010602c:	5807883a 	mov	r3,r11
10106030:	5a80032e 	bgeu	r11,r10,10106040 <__multiply+0x80>
10106034:	18000015 	stw	zero,0(r3)
10106038:	18c00104 	addi	r3,r3,4
1010603c:	1abffd36 	bltu	r3,r10,10106034 <__alt_data_end+0xfffe6034>
10106040:	9ce7883a 	add	r19,r19,r19
10106044:	94a5883a 	add	r18,r18,r18
10106048:	89800504 	addi	r6,r17,20
1010604c:	9ce7883a 	add	r19,r19,r19
10106050:	a3400504 	addi	r13,r20,20
10106054:	94a5883a 	add	r18,r18,r18
10106058:	34d9883a 	add	r12,r6,r19
1010605c:	6c93883a 	add	r9,r13,r18
10106060:	3300422e 	bgeu	r6,r12,1010616c <__multiply+0x1ac>
10106064:	37c00017 	ldw	ra,0(r6)
10106068:	fbffffcc 	andi	r15,ra,65535
1010606c:	78001b26 	beq	r15,zero,101060dc <__multiply+0x11c>
10106070:	5811883a 	mov	r8,r11
10106074:	681d883a 	mov	r14,r13
10106078:	000f883a 	mov	r7,zero
1010607c:	71000017 	ldw	r4,0(r14)
10106080:	40c00017 	ldw	r3,0(r8)
10106084:	73800104 	addi	r14,r14,4
10106088:	217fffcc 	andi	r5,r4,65535
1010608c:	2bcb383a 	mul	r5,r5,r15
10106090:	2008d43a 	srli	r4,r4,16
10106094:	1c7fffcc 	andi	r17,r3,65535
10106098:	2c4b883a 	add	r5,r5,r17
1010609c:	29cb883a 	add	r5,r5,r7
101060a0:	23c9383a 	mul	r4,r4,r15
101060a4:	1806d43a 	srli	r3,r3,16
101060a8:	280ed43a 	srli	r7,r5,16
101060ac:	297fffcc 	andi	r5,r5,65535
101060b0:	20c7883a 	add	r3,r4,r3
101060b4:	19c7883a 	add	r3,r3,r7
101060b8:	1808943a 	slli	r4,r3,16
101060bc:	4023883a 	mov	r17,r8
101060c0:	180ed43a 	srli	r7,r3,16
101060c4:	214ab03a 	or	r5,r4,r5
101060c8:	41400015 	stw	r5,0(r8)
101060cc:	42000104 	addi	r8,r8,4
101060d0:	727fea36 	bltu	r14,r9,1010607c <__alt_data_end+0xfffe607c>
101060d4:	89c00115 	stw	r7,4(r17)
101060d8:	37c00017 	ldw	ra,0(r6)
101060dc:	f83ed43a 	srli	ra,ra,16
101060e0:	f8001f26 	beq	ra,zero,10106160 <__multiply+0x1a0>
101060e4:	58c00017 	ldw	r3,0(r11)
101060e8:	681d883a 	mov	r14,r13
101060ec:	581f883a 	mov	r15,r11
101060f0:	1811883a 	mov	r8,r3
101060f4:	5825883a 	mov	r18,r11
101060f8:	000f883a 	mov	r7,zero
101060fc:	00000106 	br	10106104 <__multiply+0x144>
10106100:	8825883a 	mov	r18,r17
10106104:	7140000b 	ldhu	r5,0(r14)
10106108:	4010d43a 	srli	r8,r8,16
1010610c:	193fffcc 	andi	r4,r3,65535
10106110:	2fcb383a 	mul	r5,r5,ra
10106114:	7bc00104 	addi	r15,r15,4
10106118:	73800104 	addi	r14,r14,4
1010611c:	2a0b883a 	add	r5,r5,r8
10106120:	29cb883a 	add	r5,r5,r7
10106124:	2806943a 	slli	r3,r5,16
10106128:	94400104 	addi	r17,r18,4
1010612c:	280ad43a 	srli	r5,r5,16
10106130:	1908b03a 	or	r4,r3,r4
10106134:	793fff15 	stw	r4,-4(r15)
10106138:	70ffff17 	ldw	r3,-4(r14)
1010613c:	8a000017 	ldw	r8,0(r17)
10106140:	1806d43a 	srli	r3,r3,16
10106144:	413fffcc 	andi	r4,r8,65535
10106148:	1fc7383a 	mul	r3,r3,ra
1010614c:	1907883a 	add	r3,r3,r4
10106150:	1947883a 	add	r3,r3,r5
10106154:	180ed43a 	srli	r7,r3,16
10106158:	727fe936 	bltu	r14,r9,10106100 <__alt_data_end+0xfffe6100>
1010615c:	90c00115 	stw	r3,4(r18)
10106160:	31800104 	addi	r6,r6,4
10106164:	5ac00104 	addi	r11,r11,4
10106168:	333fbe36 	bltu	r6,r12,10106064 <__alt_data_end+0xfffe6064>
1010616c:	0400090e 	bge	zero,r16,10106194 <__multiply+0x1d4>
10106170:	50ffff17 	ldw	r3,-4(r10)
10106174:	52bfff04 	addi	r10,r10,-4
10106178:	18000326 	beq	r3,zero,10106188 <__multiply+0x1c8>
1010617c:	00000506 	br	10106194 <__multiply+0x1d4>
10106180:	50c00017 	ldw	r3,0(r10)
10106184:	1800031e 	bne	r3,zero,10106194 <__multiply+0x1d4>
10106188:	843fffc4 	addi	r16,r16,-1
1010618c:	52bfff04 	addi	r10,r10,-4
10106190:	803ffb1e 	bne	r16,zero,10106180 <__alt_data_end+0xfffe6180>
10106194:	14000415 	stw	r16,16(r2)
10106198:	dfc00517 	ldw	ra,20(sp)
1010619c:	dd000417 	ldw	r20,16(sp)
101061a0:	dcc00317 	ldw	r19,12(sp)
101061a4:	dc800217 	ldw	r18,8(sp)
101061a8:	dc400117 	ldw	r17,4(sp)
101061ac:	dc000017 	ldw	r16,0(sp)
101061b0:	dec00604 	addi	sp,sp,24
101061b4:	f800283a 	ret

101061b8 <__pow5mult>:
101061b8:	defffa04 	addi	sp,sp,-24
101061bc:	dcc00315 	stw	r19,12(sp)
101061c0:	dc000015 	stw	r16,0(sp)
101061c4:	dfc00515 	stw	ra,20(sp)
101061c8:	dd000415 	stw	r20,16(sp)
101061cc:	dc800215 	stw	r18,8(sp)
101061d0:	dc400115 	stw	r17,4(sp)
101061d4:	308000cc 	andi	r2,r6,3
101061d8:	3021883a 	mov	r16,r6
101061dc:	2027883a 	mov	r19,r4
101061e0:	10002f1e 	bne	r2,zero,101062a0 <__pow5mult+0xe8>
101061e4:	2825883a 	mov	r18,r5
101061e8:	8021d0ba 	srai	r16,r16,2
101061ec:	80001a26 	beq	r16,zero,10106258 <__pow5mult+0xa0>
101061f0:	9c401217 	ldw	r17,72(r19)
101061f4:	8800061e 	bne	r17,zero,10106210 <__pow5mult+0x58>
101061f8:	00003406 	br	101062cc <__pow5mult+0x114>
101061fc:	8021d07a 	srai	r16,r16,1
10106200:	80001526 	beq	r16,zero,10106258 <__pow5mult+0xa0>
10106204:	88800017 	ldw	r2,0(r17)
10106208:	10001c26 	beq	r2,zero,1010627c <__pow5mult+0xc4>
1010620c:	1023883a 	mov	r17,r2
10106210:	8080004c 	andi	r2,r16,1
10106214:	103ff926 	beq	r2,zero,101061fc <__alt_data_end+0xfffe61fc>
10106218:	880d883a 	mov	r6,r17
1010621c:	900b883a 	mov	r5,r18
10106220:	9809883a 	mov	r4,r19
10106224:	0105fc00 	call	10105fc0 <__multiply>
10106228:	90001b26 	beq	r18,zero,10106298 <__pow5mult+0xe0>
1010622c:	91000117 	ldw	r4,4(r18)
10106230:	98c01317 	ldw	r3,76(r19)
10106234:	8021d07a 	srai	r16,r16,1
10106238:	2109883a 	add	r4,r4,r4
1010623c:	2109883a 	add	r4,r4,r4
10106240:	1907883a 	add	r3,r3,r4
10106244:	19000017 	ldw	r4,0(r3)
10106248:	91000015 	stw	r4,0(r18)
1010624c:	1c800015 	stw	r18,0(r3)
10106250:	1025883a 	mov	r18,r2
10106254:	803feb1e 	bne	r16,zero,10106204 <__alt_data_end+0xfffe6204>
10106258:	9005883a 	mov	r2,r18
1010625c:	dfc00517 	ldw	ra,20(sp)
10106260:	dd000417 	ldw	r20,16(sp)
10106264:	dcc00317 	ldw	r19,12(sp)
10106268:	dc800217 	ldw	r18,8(sp)
1010626c:	dc400117 	ldw	r17,4(sp)
10106270:	dc000017 	ldw	r16,0(sp)
10106274:	dec00604 	addi	sp,sp,24
10106278:	f800283a 	ret
1010627c:	880d883a 	mov	r6,r17
10106280:	880b883a 	mov	r5,r17
10106284:	9809883a 	mov	r4,r19
10106288:	0105fc00 	call	10105fc0 <__multiply>
1010628c:	88800015 	stw	r2,0(r17)
10106290:	10000015 	stw	zero,0(r2)
10106294:	003fdd06 	br	1010620c <__alt_data_end+0xfffe620c>
10106298:	1025883a 	mov	r18,r2
1010629c:	003fd706 	br	101061fc <__alt_data_end+0xfffe61fc>
101062a0:	10bfffc4 	addi	r2,r2,-1
101062a4:	1085883a 	add	r2,r2,r2
101062a8:	00c40474 	movhi	r3,4113
101062ac:	18fe3c04 	addi	r3,r3,-1808
101062b0:	1085883a 	add	r2,r2,r2
101062b4:	1885883a 	add	r2,r3,r2
101062b8:	11800017 	ldw	r6,0(r2)
101062bc:	000f883a 	mov	r7,zero
101062c0:	0105c480 	call	10105c48 <__multadd>
101062c4:	1025883a 	mov	r18,r2
101062c8:	003fc706 	br	101061e8 <__alt_data_end+0xfffe61e8>
101062cc:	05000044 	movi	r20,1
101062d0:	a00b883a 	mov	r5,r20
101062d4:	9809883a 	mov	r4,r19
101062d8:	0105b780 	call	10105b78 <_Balloc>
101062dc:	1023883a 	mov	r17,r2
101062e0:	00809c44 	movi	r2,625
101062e4:	88800515 	stw	r2,20(r17)
101062e8:	8d000415 	stw	r20,16(r17)
101062ec:	9c401215 	stw	r17,72(r19)
101062f0:	88000015 	stw	zero,0(r17)
101062f4:	003fc606 	br	10106210 <__alt_data_end+0xfffe6210>

101062f8 <__lshift>:
101062f8:	defff904 	addi	sp,sp,-28
101062fc:	dd400515 	stw	r21,20(sp)
10106300:	dcc00315 	stw	r19,12(sp)
10106304:	302bd17a 	srai	r21,r6,5
10106308:	2cc00417 	ldw	r19,16(r5)
1010630c:	28800217 	ldw	r2,8(r5)
10106310:	dd000415 	stw	r20,16(sp)
10106314:	ace7883a 	add	r19,r21,r19
10106318:	dc800215 	stw	r18,8(sp)
1010631c:	dc400115 	stw	r17,4(sp)
10106320:	dc000015 	stw	r16,0(sp)
10106324:	dfc00615 	stw	ra,24(sp)
10106328:	9c000044 	addi	r16,r19,1
1010632c:	2823883a 	mov	r17,r5
10106330:	3029883a 	mov	r20,r6
10106334:	2025883a 	mov	r18,r4
10106338:	29400117 	ldw	r5,4(r5)
1010633c:	1400030e 	bge	r2,r16,1010634c <__lshift+0x54>
10106340:	1085883a 	add	r2,r2,r2
10106344:	29400044 	addi	r5,r5,1
10106348:	143ffd16 	blt	r2,r16,10106340 <__alt_data_end+0xfffe6340>
1010634c:	9009883a 	mov	r4,r18
10106350:	0105b780 	call	10105b78 <_Balloc>
10106354:	10c00504 	addi	r3,r2,20
10106358:	0540070e 	bge	zero,r21,10106378 <__lshift+0x80>
1010635c:	ad6b883a 	add	r21,r21,r21
10106360:	ad6b883a 	add	r21,r21,r21
10106364:	1809883a 	mov	r4,r3
10106368:	1d47883a 	add	r3,r3,r21
1010636c:	20000015 	stw	zero,0(r4)
10106370:	21000104 	addi	r4,r4,4
10106374:	193ffd1e 	bne	r3,r4,1010636c <__alt_data_end+0xfffe636c>
10106378:	8a000417 	ldw	r8,16(r17)
1010637c:	89000504 	addi	r4,r17,20
10106380:	a18007cc 	andi	r6,r20,31
10106384:	4211883a 	add	r8,r8,r8
10106388:	4211883a 	add	r8,r8,r8
1010638c:	2211883a 	add	r8,r4,r8
10106390:	30002326 	beq	r6,zero,10106420 <__lshift+0x128>
10106394:	02400804 	movi	r9,32
10106398:	4993c83a 	sub	r9,r9,r6
1010639c:	000b883a 	mov	r5,zero
101063a0:	21c00017 	ldw	r7,0(r4)
101063a4:	1815883a 	mov	r10,r3
101063a8:	18c00104 	addi	r3,r3,4
101063ac:	398e983a 	sll	r7,r7,r6
101063b0:	21000104 	addi	r4,r4,4
101063b4:	394ab03a 	or	r5,r7,r5
101063b8:	197fff15 	stw	r5,-4(r3)
101063bc:	217fff17 	ldw	r5,-4(r4)
101063c0:	2a4ad83a 	srl	r5,r5,r9
101063c4:	223ff636 	bltu	r4,r8,101063a0 <__alt_data_end+0xfffe63a0>
101063c8:	51400115 	stw	r5,4(r10)
101063cc:	28001a1e 	bne	r5,zero,10106438 <__lshift+0x140>
101063d0:	843fffc4 	addi	r16,r16,-1
101063d4:	14000415 	stw	r16,16(r2)
101063d8:	88000826 	beq	r17,zero,101063fc <__lshift+0x104>
101063dc:	89000117 	ldw	r4,4(r17)
101063e0:	90c01317 	ldw	r3,76(r18)
101063e4:	2109883a 	add	r4,r4,r4
101063e8:	2109883a 	add	r4,r4,r4
101063ec:	1907883a 	add	r3,r3,r4
101063f0:	19000017 	ldw	r4,0(r3)
101063f4:	89000015 	stw	r4,0(r17)
101063f8:	1c400015 	stw	r17,0(r3)
101063fc:	dfc00617 	ldw	ra,24(sp)
10106400:	dd400517 	ldw	r21,20(sp)
10106404:	dd000417 	ldw	r20,16(sp)
10106408:	dcc00317 	ldw	r19,12(sp)
1010640c:	dc800217 	ldw	r18,8(sp)
10106410:	dc400117 	ldw	r17,4(sp)
10106414:	dc000017 	ldw	r16,0(sp)
10106418:	dec00704 	addi	sp,sp,28
1010641c:	f800283a 	ret
10106420:	21400017 	ldw	r5,0(r4)
10106424:	18c00104 	addi	r3,r3,4
10106428:	21000104 	addi	r4,r4,4
1010642c:	197fff15 	stw	r5,-4(r3)
10106430:	223ffb36 	bltu	r4,r8,10106420 <__alt_data_end+0xfffe6420>
10106434:	003fe606 	br	101063d0 <__alt_data_end+0xfffe63d0>
10106438:	9c000084 	addi	r16,r19,2
1010643c:	003fe406 	br	101063d0 <__alt_data_end+0xfffe63d0>

10106440 <__mcmp>:
10106440:	20800417 	ldw	r2,16(r4)
10106444:	28c00417 	ldw	r3,16(r5)
10106448:	10c5c83a 	sub	r2,r2,r3
1010644c:	1000111e 	bne	r2,zero,10106494 <__mcmp+0x54>
10106450:	18c7883a 	add	r3,r3,r3
10106454:	18c7883a 	add	r3,r3,r3
10106458:	21000504 	addi	r4,r4,20
1010645c:	29400504 	addi	r5,r5,20
10106460:	20c5883a 	add	r2,r4,r3
10106464:	28cb883a 	add	r5,r5,r3
10106468:	00000106 	br	10106470 <__mcmp+0x30>
1010646c:	20800a2e 	bgeu	r4,r2,10106498 <__mcmp+0x58>
10106470:	10bfff04 	addi	r2,r2,-4
10106474:	297fff04 	addi	r5,r5,-4
10106478:	11800017 	ldw	r6,0(r2)
1010647c:	28c00017 	ldw	r3,0(r5)
10106480:	30fffa26 	beq	r6,r3,1010646c <__alt_data_end+0xfffe646c>
10106484:	30c00236 	bltu	r6,r3,10106490 <__mcmp+0x50>
10106488:	00800044 	movi	r2,1
1010648c:	f800283a 	ret
10106490:	00bfffc4 	movi	r2,-1
10106494:	f800283a 	ret
10106498:	0005883a 	mov	r2,zero
1010649c:	f800283a 	ret

101064a0 <__mdiff>:
101064a0:	28c00417 	ldw	r3,16(r5)
101064a4:	30800417 	ldw	r2,16(r6)
101064a8:	defffa04 	addi	sp,sp,-24
101064ac:	dcc00315 	stw	r19,12(sp)
101064b0:	dc800215 	stw	r18,8(sp)
101064b4:	dfc00515 	stw	ra,20(sp)
101064b8:	dd000415 	stw	r20,16(sp)
101064bc:	dc400115 	stw	r17,4(sp)
101064c0:	dc000015 	stw	r16,0(sp)
101064c4:	1887c83a 	sub	r3,r3,r2
101064c8:	2825883a 	mov	r18,r5
101064cc:	3027883a 	mov	r19,r6
101064d0:	1800141e 	bne	r3,zero,10106524 <__mdiff+0x84>
101064d4:	1085883a 	add	r2,r2,r2
101064d8:	1085883a 	add	r2,r2,r2
101064dc:	2a000504 	addi	r8,r5,20
101064e0:	34000504 	addi	r16,r6,20
101064e4:	4087883a 	add	r3,r8,r2
101064e8:	8085883a 	add	r2,r16,r2
101064ec:	00000106 	br	101064f4 <__mdiff+0x54>
101064f0:	40c0592e 	bgeu	r8,r3,10106658 <__mdiff+0x1b8>
101064f4:	18ffff04 	addi	r3,r3,-4
101064f8:	10bfff04 	addi	r2,r2,-4
101064fc:	19c00017 	ldw	r7,0(r3)
10106500:	11400017 	ldw	r5,0(r2)
10106504:	397ffa26 	beq	r7,r5,101064f0 <__alt_data_end+0xfffe64f0>
10106508:	3940592e 	bgeu	r7,r5,10106670 <__mdiff+0x1d0>
1010650c:	9005883a 	mov	r2,r18
10106510:	4023883a 	mov	r17,r8
10106514:	9825883a 	mov	r18,r19
10106518:	05000044 	movi	r20,1
1010651c:	1027883a 	mov	r19,r2
10106520:	00000406 	br	10106534 <__mdiff+0x94>
10106524:	18005616 	blt	r3,zero,10106680 <__mdiff+0x1e0>
10106528:	34400504 	addi	r17,r6,20
1010652c:	2c000504 	addi	r16,r5,20
10106530:	0029883a 	mov	r20,zero
10106534:	91400117 	ldw	r5,4(r18)
10106538:	0105b780 	call	10105b78 <_Balloc>
1010653c:	92400417 	ldw	r9,16(r18)
10106540:	9b000417 	ldw	r12,16(r19)
10106544:	12c00504 	addi	r11,r2,20
10106548:	4a51883a 	add	r8,r9,r9
1010654c:	6319883a 	add	r12,r12,r12
10106550:	4211883a 	add	r8,r8,r8
10106554:	6319883a 	add	r12,r12,r12
10106558:	15000315 	stw	r20,12(r2)
1010655c:	8211883a 	add	r8,r16,r8
10106560:	8b19883a 	add	r12,r17,r12
10106564:	0007883a 	mov	r3,zero
10106568:	81400017 	ldw	r5,0(r16)
1010656c:	89c00017 	ldw	r7,0(r17)
10106570:	59800104 	addi	r6,r11,4
10106574:	293fffcc 	andi	r4,r5,65535
10106578:	20c7883a 	add	r3,r4,r3
1010657c:	393fffcc 	andi	r4,r7,65535
10106580:	1909c83a 	sub	r4,r3,r4
10106584:	280ad43a 	srli	r5,r5,16
10106588:	380ed43a 	srli	r7,r7,16
1010658c:	2007d43a 	srai	r3,r4,16
10106590:	213fffcc 	andi	r4,r4,65535
10106594:	29cbc83a 	sub	r5,r5,r7
10106598:	28c7883a 	add	r3,r5,r3
1010659c:	180a943a 	slli	r5,r3,16
101065a0:	8c400104 	addi	r17,r17,4
101065a4:	84000104 	addi	r16,r16,4
101065a8:	2908b03a 	or	r4,r5,r4
101065ac:	59000015 	stw	r4,0(r11)
101065b0:	1807d43a 	srai	r3,r3,16
101065b4:	3015883a 	mov	r10,r6
101065b8:	3017883a 	mov	r11,r6
101065bc:	8b3fea36 	bltu	r17,r12,10106568 <__alt_data_end+0xfffe6568>
101065c0:	8200162e 	bgeu	r16,r8,1010661c <__mdiff+0x17c>
101065c4:	8017883a 	mov	r11,r16
101065c8:	59400017 	ldw	r5,0(r11)
101065cc:	31800104 	addi	r6,r6,4
101065d0:	5ac00104 	addi	r11,r11,4
101065d4:	293fffcc 	andi	r4,r5,65535
101065d8:	20c7883a 	add	r3,r4,r3
101065dc:	280ed43a 	srli	r7,r5,16
101065e0:	180bd43a 	srai	r5,r3,16
101065e4:	193fffcc 	andi	r4,r3,65535
101065e8:	3947883a 	add	r3,r7,r5
101065ec:	180a943a 	slli	r5,r3,16
101065f0:	1807d43a 	srai	r3,r3,16
101065f4:	2908b03a 	or	r4,r5,r4
101065f8:	313fff15 	stw	r4,-4(r6)
101065fc:	5a3ff236 	bltu	r11,r8,101065c8 <__alt_data_end+0xfffe65c8>
10106600:	0406303a 	nor	r3,zero,r16
10106604:	1a07883a 	add	r3,r3,r8
10106608:	1806d0ba 	srli	r3,r3,2
1010660c:	18c00044 	addi	r3,r3,1
10106610:	18c7883a 	add	r3,r3,r3
10106614:	18c7883a 	add	r3,r3,r3
10106618:	50d5883a 	add	r10,r10,r3
1010661c:	50ffff04 	addi	r3,r10,-4
10106620:	2000041e 	bne	r4,zero,10106634 <__mdiff+0x194>
10106624:	18ffff04 	addi	r3,r3,-4
10106628:	19000017 	ldw	r4,0(r3)
1010662c:	4a7fffc4 	addi	r9,r9,-1
10106630:	203ffc26 	beq	r4,zero,10106624 <__alt_data_end+0xfffe6624>
10106634:	12400415 	stw	r9,16(r2)
10106638:	dfc00517 	ldw	ra,20(sp)
1010663c:	dd000417 	ldw	r20,16(sp)
10106640:	dcc00317 	ldw	r19,12(sp)
10106644:	dc800217 	ldw	r18,8(sp)
10106648:	dc400117 	ldw	r17,4(sp)
1010664c:	dc000017 	ldw	r16,0(sp)
10106650:	dec00604 	addi	sp,sp,24
10106654:	f800283a 	ret
10106658:	000b883a 	mov	r5,zero
1010665c:	0105b780 	call	10105b78 <_Balloc>
10106660:	00c00044 	movi	r3,1
10106664:	10c00415 	stw	r3,16(r2)
10106668:	10000515 	stw	zero,20(r2)
1010666c:	003ff206 	br	10106638 <__alt_data_end+0xfffe6638>
10106670:	8023883a 	mov	r17,r16
10106674:	0029883a 	mov	r20,zero
10106678:	4021883a 	mov	r16,r8
1010667c:	003fad06 	br	10106534 <__alt_data_end+0xfffe6534>
10106680:	9005883a 	mov	r2,r18
10106684:	94400504 	addi	r17,r18,20
10106688:	9c000504 	addi	r16,r19,20
1010668c:	9825883a 	mov	r18,r19
10106690:	05000044 	movi	r20,1
10106694:	1027883a 	mov	r19,r2
10106698:	003fa606 	br	10106534 <__alt_data_end+0xfffe6534>

1010669c <__ulp>:
1010669c:	295ffc2c 	andhi	r5,r5,32752
101066a0:	00bf3034 	movhi	r2,64704
101066a4:	2887883a 	add	r3,r5,r2
101066a8:	00c0020e 	bge	zero,r3,101066b4 <__ulp+0x18>
101066ac:	0005883a 	mov	r2,zero
101066b0:	f800283a 	ret
101066b4:	00c7c83a 	sub	r3,zero,r3
101066b8:	1807d53a 	srai	r3,r3,20
101066bc:	008004c4 	movi	r2,19
101066c0:	10c00b0e 	bge	r2,r3,101066f0 <__ulp+0x54>
101066c4:	18bffb04 	addi	r2,r3,-20
101066c8:	01000784 	movi	r4,30
101066cc:	0007883a 	mov	r3,zero
101066d0:	20800516 	blt	r4,r2,101066e8 <__ulp+0x4c>
101066d4:	010007c4 	movi	r4,31
101066d8:	2089c83a 	sub	r4,r4,r2
101066dc:	00800044 	movi	r2,1
101066e0:	1104983a 	sll	r2,r2,r4
101066e4:	f800283a 	ret
101066e8:	00800044 	movi	r2,1
101066ec:	f800283a 	ret
101066f0:	01400234 	movhi	r5,8
101066f4:	28c7d83a 	sra	r3,r5,r3
101066f8:	0005883a 	mov	r2,zero
101066fc:	f800283a 	ret

10106700 <__b2d>:
10106700:	defffa04 	addi	sp,sp,-24
10106704:	dc000015 	stw	r16,0(sp)
10106708:	24000417 	ldw	r16,16(r4)
1010670c:	dc400115 	stw	r17,4(sp)
10106710:	24400504 	addi	r17,r4,20
10106714:	8421883a 	add	r16,r16,r16
10106718:	8421883a 	add	r16,r16,r16
1010671c:	8c21883a 	add	r16,r17,r16
10106720:	dc800215 	stw	r18,8(sp)
10106724:	84bfff17 	ldw	r18,-4(r16)
10106728:	dd000415 	stw	r20,16(sp)
1010672c:	dcc00315 	stw	r19,12(sp)
10106730:	9009883a 	mov	r4,r18
10106734:	2829883a 	mov	r20,r5
10106738:	dfc00515 	stw	ra,20(sp)
1010673c:	0105e6c0 	call	10105e6c <__hi0bits>
10106740:	00c00804 	movi	r3,32
10106744:	1889c83a 	sub	r4,r3,r2
10106748:	a1000015 	stw	r4,0(r20)
1010674c:	01000284 	movi	r4,10
10106750:	84ffff04 	addi	r19,r16,-4
10106754:	20801216 	blt	r4,r2,101067a0 <__b2d+0xa0>
10106758:	018002c4 	movi	r6,11
1010675c:	308dc83a 	sub	r6,r6,r2
10106760:	9186d83a 	srl	r3,r18,r6
10106764:	18cffc34 	orhi	r3,r3,16368
10106768:	8cc0212e 	bgeu	r17,r19,101067f0 <__b2d+0xf0>
1010676c:	813ffe17 	ldw	r4,-8(r16)
10106770:	218cd83a 	srl	r6,r4,r6
10106774:	10800544 	addi	r2,r2,21
10106778:	9084983a 	sll	r2,r18,r2
1010677c:	1184b03a 	or	r2,r2,r6
10106780:	dfc00517 	ldw	ra,20(sp)
10106784:	dd000417 	ldw	r20,16(sp)
10106788:	dcc00317 	ldw	r19,12(sp)
1010678c:	dc800217 	ldw	r18,8(sp)
10106790:	dc400117 	ldw	r17,4(sp)
10106794:	dc000017 	ldw	r16,0(sp)
10106798:	dec00604 	addi	sp,sp,24
1010679c:	f800283a 	ret
101067a0:	8cc00f2e 	bgeu	r17,r19,101067e0 <__b2d+0xe0>
101067a4:	117ffd44 	addi	r5,r2,-11
101067a8:	80bffe17 	ldw	r2,-8(r16)
101067ac:	28000e26 	beq	r5,zero,101067e8 <__b2d+0xe8>
101067b0:	1949c83a 	sub	r4,r3,r5
101067b4:	9164983a 	sll	r18,r18,r5
101067b8:	1106d83a 	srl	r3,r2,r4
101067bc:	81bffe04 	addi	r6,r16,-8
101067c0:	948ffc34 	orhi	r18,r18,16368
101067c4:	90c6b03a 	or	r3,r18,r3
101067c8:	89800e2e 	bgeu	r17,r6,10106804 <__b2d+0x104>
101067cc:	81bffd17 	ldw	r6,-12(r16)
101067d0:	1144983a 	sll	r2,r2,r5
101067d4:	310ad83a 	srl	r5,r6,r4
101067d8:	2884b03a 	or	r2,r5,r2
101067dc:	003fe806 	br	10106780 <__alt_data_end+0xfffe6780>
101067e0:	10bffd44 	addi	r2,r2,-11
101067e4:	1000041e 	bne	r2,zero,101067f8 <__b2d+0xf8>
101067e8:	90cffc34 	orhi	r3,r18,16368
101067ec:	003fe406 	br	10106780 <__alt_data_end+0xfffe6780>
101067f0:	000d883a 	mov	r6,zero
101067f4:	003fdf06 	br	10106774 <__alt_data_end+0xfffe6774>
101067f8:	90a4983a 	sll	r18,r18,r2
101067fc:	0005883a 	mov	r2,zero
10106800:	003ff906 	br	101067e8 <__alt_data_end+0xfffe67e8>
10106804:	1144983a 	sll	r2,r2,r5
10106808:	003fdd06 	br	10106780 <__alt_data_end+0xfffe6780>

1010680c <__d2b>:
1010680c:	defff804 	addi	sp,sp,-32
10106810:	dc000215 	stw	r16,8(sp)
10106814:	3021883a 	mov	r16,r6
10106818:	dc400315 	stw	r17,12(sp)
1010681c:	8022907a 	slli	r17,r16,1
10106820:	dd000615 	stw	r20,24(sp)
10106824:	2829883a 	mov	r20,r5
10106828:	01400044 	movi	r5,1
1010682c:	dcc00515 	stw	r19,20(sp)
10106830:	dc800415 	stw	r18,16(sp)
10106834:	dfc00715 	stw	ra,28(sp)
10106838:	3825883a 	mov	r18,r7
1010683c:	8822d57a 	srli	r17,r17,21
10106840:	0105b780 	call	10105b78 <_Balloc>
10106844:	1027883a 	mov	r19,r2
10106848:	00800434 	movhi	r2,16
1010684c:	10bfffc4 	addi	r2,r2,-1
10106850:	808c703a 	and	r6,r16,r2
10106854:	88000126 	beq	r17,zero,1010685c <__d2b+0x50>
10106858:	31800434 	orhi	r6,r6,16
1010685c:	d9800015 	stw	r6,0(sp)
10106860:	a0002426 	beq	r20,zero,101068f4 <__d2b+0xe8>
10106864:	d9000104 	addi	r4,sp,4
10106868:	dd000115 	stw	r20,4(sp)
1010686c:	0105ed40 	call	10105ed4 <__lo0bits>
10106870:	d8c00017 	ldw	r3,0(sp)
10106874:	10002f1e 	bne	r2,zero,10106934 <__d2b+0x128>
10106878:	d9000117 	ldw	r4,4(sp)
1010687c:	99000515 	stw	r4,20(r19)
10106880:	1821003a 	cmpeq	r16,r3,zero
10106884:	01000084 	movi	r4,2
10106888:	2421c83a 	sub	r16,r4,r16
1010688c:	98c00615 	stw	r3,24(r19)
10106890:	9c000415 	stw	r16,16(r19)
10106894:	88001f1e 	bne	r17,zero,10106914 <__d2b+0x108>
10106898:	10bef384 	addi	r2,r2,-1074
1010689c:	90800015 	stw	r2,0(r18)
101068a0:	00900034 	movhi	r2,16384
101068a4:	10bfffc4 	addi	r2,r2,-1
101068a8:	8085883a 	add	r2,r16,r2
101068ac:	1085883a 	add	r2,r2,r2
101068b0:	1085883a 	add	r2,r2,r2
101068b4:	9885883a 	add	r2,r19,r2
101068b8:	11000517 	ldw	r4,20(r2)
101068bc:	8020917a 	slli	r16,r16,5
101068c0:	0105e6c0 	call	10105e6c <__hi0bits>
101068c4:	d8c00817 	ldw	r3,32(sp)
101068c8:	8085c83a 	sub	r2,r16,r2
101068cc:	18800015 	stw	r2,0(r3)
101068d0:	9805883a 	mov	r2,r19
101068d4:	dfc00717 	ldw	ra,28(sp)
101068d8:	dd000617 	ldw	r20,24(sp)
101068dc:	dcc00517 	ldw	r19,20(sp)
101068e0:	dc800417 	ldw	r18,16(sp)
101068e4:	dc400317 	ldw	r17,12(sp)
101068e8:	dc000217 	ldw	r16,8(sp)
101068ec:	dec00804 	addi	sp,sp,32
101068f0:	f800283a 	ret
101068f4:	d809883a 	mov	r4,sp
101068f8:	0105ed40 	call	10105ed4 <__lo0bits>
101068fc:	d8c00017 	ldw	r3,0(sp)
10106900:	04000044 	movi	r16,1
10106904:	9c000415 	stw	r16,16(r19)
10106908:	98c00515 	stw	r3,20(r19)
1010690c:	10800804 	addi	r2,r2,32
10106910:	883fe126 	beq	r17,zero,10106898 <__alt_data_end+0xfffe6898>
10106914:	00c00d44 	movi	r3,53
10106918:	8c7ef344 	addi	r17,r17,-1075
1010691c:	88a3883a 	add	r17,r17,r2
10106920:	1885c83a 	sub	r2,r3,r2
10106924:	d8c00817 	ldw	r3,32(sp)
10106928:	94400015 	stw	r17,0(r18)
1010692c:	18800015 	stw	r2,0(r3)
10106930:	003fe706 	br	101068d0 <__alt_data_end+0xfffe68d0>
10106934:	01000804 	movi	r4,32
10106938:	2089c83a 	sub	r4,r4,r2
1010693c:	1908983a 	sll	r4,r3,r4
10106940:	d9400117 	ldw	r5,4(sp)
10106944:	1886d83a 	srl	r3,r3,r2
10106948:	2148b03a 	or	r4,r4,r5
1010694c:	99000515 	stw	r4,20(r19)
10106950:	d8c00015 	stw	r3,0(sp)
10106954:	003fca06 	br	10106880 <__alt_data_end+0xfffe6880>

10106958 <__ratio>:
10106958:	defff904 	addi	sp,sp,-28
1010695c:	dc400315 	stw	r17,12(sp)
10106960:	2823883a 	mov	r17,r5
10106964:	d9400104 	addi	r5,sp,4
10106968:	dfc00615 	stw	ra,24(sp)
1010696c:	dcc00515 	stw	r19,20(sp)
10106970:	dc800415 	stw	r18,16(sp)
10106974:	2027883a 	mov	r19,r4
10106978:	dc000215 	stw	r16,8(sp)
1010697c:	01067000 	call	10106700 <__b2d>
10106980:	d80b883a 	mov	r5,sp
10106984:	8809883a 	mov	r4,r17
10106988:	1025883a 	mov	r18,r2
1010698c:	1821883a 	mov	r16,r3
10106990:	01067000 	call	10106700 <__b2d>
10106994:	8a000417 	ldw	r8,16(r17)
10106998:	99000417 	ldw	r4,16(r19)
1010699c:	d9400117 	ldw	r5,4(sp)
101069a0:	2209c83a 	sub	r4,r4,r8
101069a4:	2010917a 	slli	r8,r4,5
101069a8:	d9000017 	ldw	r4,0(sp)
101069ac:	2909c83a 	sub	r4,r5,r4
101069b0:	4109883a 	add	r4,r8,r4
101069b4:	01000e0e 	bge	zero,r4,101069f0 <__ratio+0x98>
101069b8:	2008953a 	slli	r4,r4,20
101069bc:	2421883a 	add	r16,r4,r16
101069c0:	100d883a 	mov	r6,r2
101069c4:	180f883a 	mov	r7,r3
101069c8:	9009883a 	mov	r4,r18
101069cc:	800b883a 	mov	r5,r16
101069d0:	010b1f80 	call	1010b1f8 <__divdf3>
101069d4:	dfc00617 	ldw	ra,24(sp)
101069d8:	dcc00517 	ldw	r19,20(sp)
101069dc:	dc800417 	ldw	r18,16(sp)
101069e0:	dc400317 	ldw	r17,12(sp)
101069e4:	dc000217 	ldw	r16,8(sp)
101069e8:	dec00704 	addi	sp,sp,28
101069ec:	f800283a 	ret
101069f0:	2008953a 	slli	r4,r4,20
101069f4:	1907c83a 	sub	r3,r3,r4
101069f8:	003ff106 	br	101069c0 <__alt_data_end+0xfffe69c0>

101069fc <_mprec_log10>:
101069fc:	defffe04 	addi	sp,sp,-8
10106a00:	dc000015 	stw	r16,0(sp)
10106a04:	dfc00115 	stw	ra,4(sp)
10106a08:	008005c4 	movi	r2,23
10106a0c:	2021883a 	mov	r16,r4
10106a10:	11000d0e 	bge	r2,r4,10106a48 <_mprec_log10+0x4c>
10106a14:	0005883a 	mov	r2,zero
10106a18:	00cffc34 	movhi	r3,16368
10106a1c:	843fffc4 	addi	r16,r16,-1
10106a20:	000d883a 	mov	r6,zero
10106a24:	01d00934 	movhi	r7,16420
10106a28:	1009883a 	mov	r4,r2
10106a2c:	180b883a 	mov	r5,r3
10106a30:	010bd380 	call	1010bd38 <__muldf3>
10106a34:	803ff91e 	bne	r16,zero,10106a1c <__alt_data_end+0xfffe6a1c>
10106a38:	dfc00117 	ldw	ra,4(sp)
10106a3c:	dc000017 	ldw	r16,0(sp)
10106a40:	dec00204 	addi	sp,sp,8
10106a44:	f800283a 	ret
10106a48:	202090fa 	slli	r16,r4,3
10106a4c:	00840474 	movhi	r2,4113
10106a50:	10be5304 	addi	r2,r2,-1716
10106a54:	1421883a 	add	r16,r2,r16
10106a58:	80800017 	ldw	r2,0(r16)
10106a5c:	80c00117 	ldw	r3,4(r16)
10106a60:	dfc00117 	ldw	ra,4(sp)
10106a64:	dc000017 	ldw	r16,0(sp)
10106a68:	dec00204 	addi	sp,sp,8
10106a6c:	f800283a 	ret

10106a70 <__copybits>:
10106a70:	297fffc4 	addi	r5,r5,-1
10106a74:	280fd17a 	srai	r7,r5,5
10106a78:	30c00417 	ldw	r3,16(r6)
10106a7c:	30800504 	addi	r2,r6,20
10106a80:	39c00044 	addi	r7,r7,1
10106a84:	18c7883a 	add	r3,r3,r3
10106a88:	39cf883a 	add	r7,r7,r7
10106a8c:	18c7883a 	add	r3,r3,r3
10106a90:	39cf883a 	add	r7,r7,r7
10106a94:	10c7883a 	add	r3,r2,r3
10106a98:	21cf883a 	add	r7,r4,r7
10106a9c:	10c00d2e 	bgeu	r2,r3,10106ad4 <__copybits+0x64>
10106aa0:	200b883a 	mov	r5,r4
10106aa4:	12000017 	ldw	r8,0(r2)
10106aa8:	29400104 	addi	r5,r5,4
10106aac:	10800104 	addi	r2,r2,4
10106ab0:	2a3fff15 	stw	r8,-4(r5)
10106ab4:	10fffb36 	bltu	r2,r3,10106aa4 <__alt_data_end+0xfffe6aa4>
10106ab8:	1985c83a 	sub	r2,r3,r6
10106abc:	10bffac4 	addi	r2,r2,-21
10106ac0:	1004d0ba 	srli	r2,r2,2
10106ac4:	10800044 	addi	r2,r2,1
10106ac8:	1085883a 	add	r2,r2,r2
10106acc:	1085883a 	add	r2,r2,r2
10106ad0:	2089883a 	add	r4,r4,r2
10106ad4:	21c0032e 	bgeu	r4,r7,10106ae4 <__copybits+0x74>
10106ad8:	20000015 	stw	zero,0(r4)
10106adc:	21000104 	addi	r4,r4,4
10106ae0:	21fffd36 	bltu	r4,r7,10106ad8 <__alt_data_end+0xfffe6ad8>
10106ae4:	f800283a 	ret

10106ae8 <__any_on>:
10106ae8:	20c00417 	ldw	r3,16(r4)
10106aec:	2805d17a 	srai	r2,r5,5
10106af0:	21000504 	addi	r4,r4,20
10106af4:	18800d0e 	bge	r3,r2,10106b2c <__any_on+0x44>
10106af8:	18c7883a 	add	r3,r3,r3
10106afc:	18c7883a 	add	r3,r3,r3
10106b00:	20c7883a 	add	r3,r4,r3
10106b04:	20c0192e 	bgeu	r4,r3,10106b6c <__any_on+0x84>
10106b08:	18bfff17 	ldw	r2,-4(r3)
10106b0c:	18ffff04 	addi	r3,r3,-4
10106b10:	1000041e 	bne	r2,zero,10106b24 <__any_on+0x3c>
10106b14:	20c0142e 	bgeu	r4,r3,10106b68 <__any_on+0x80>
10106b18:	18ffff04 	addi	r3,r3,-4
10106b1c:	19400017 	ldw	r5,0(r3)
10106b20:	283ffc26 	beq	r5,zero,10106b14 <__alt_data_end+0xfffe6b14>
10106b24:	00800044 	movi	r2,1
10106b28:	f800283a 	ret
10106b2c:	10c00a0e 	bge	r2,r3,10106b58 <__any_on+0x70>
10106b30:	1085883a 	add	r2,r2,r2
10106b34:	1085883a 	add	r2,r2,r2
10106b38:	294007cc 	andi	r5,r5,31
10106b3c:	2087883a 	add	r3,r4,r2
10106b40:	283ff026 	beq	r5,zero,10106b04 <__alt_data_end+0xfffe6b04>
10106b44:	19800017 	ldw	r6,0(r3)
10106b48:	3144d83a 	srl	r2,r6,r5
10106b4c:	114a983a 	sll	r5,r2,r5
10106b50:	317ff41e 	bne	r6,r5,10106b24 <__alt_data_end+0xfffe6b24>
10106b54:	003feb06 	br	10106b04 <__alt_data_end+0xfffe6b04>
10106b58:	1085883a 	add	r2,r2,r2
10106b5c:	1085883a 	add	r2,r2,r2
10106b60:	2087883a 	add	r3,r4,r2
10106b64:	003fe706 	br	10106b04 <__alt_data_end+0xfffe6b04>
10106b68:	f800283a 	ret
10106b6c:	0005883a 	mov	r2,zero
10106b70:	f800283a 	ret

10106b74 <__fpclassifyd>:
10106b74:	00a00034 	movhi	r2,32768
10106b78:	10bfffc4 	addi	r2,r2,-1
10106b7c:	2884703a 	and	r2,r5,r2
10106b80:	10000726 	beq	r2,zero,10106ba0 <__fpclassifyd+0x2c>
10106b84:	00fffc34 	movhi	r3,65520
10106b88:	019ff834 	movhi	r6,32736
10106b8c:	28c7883a 	add	r3,r5,r3
10106b90:	31bfffc4 	addi	r6,r6,-1
10106b94:	30c00536 	bltu	r6,r3,10106bac <__fpclassifyd+0x38>
10106b98:	00800104 	movi	r2,4
10106b9c:	f800283a 	ret
10106ba0:	2000021e 	bne	r4,zero,10106bac <__fpclassifyd+0x38>
10106ba4:	00800084 	movi	r2,2
10106ba8:	f800283a 	ret
10106bac:	00dffc34 	movhi	r3,32752
10106bb0:	019ff834 	movhi	r6,32736
10106bb4:	28cb883a 	add	r5,r5,r3
10106bb8:	31bfffc4 	addi	r6,r6,-1
10106bbc:	317ff62e 	bgeu	r6,r5,10106b98 <__alt_data_end+0xfffe6b98>
10106bc0:	01400434 	movhi	r5,16
10106bc4:	297fffc4 	addi	r5,r5,-1
10106bc8:	28800236 	bltu	r5,r2,10106bd4 <__fpclassifyd+0x60>
10106bcc:	008000c4 	movi	r2,3
10106bd0:	f800283a 	ret
10106bd4:	10c00226 	beq	r2,r3,10106be0 <__fpclassifyd+0x6c>
10106bd8:	0005883a 	mov	r2,zero
10106bdc:	f800283a 	ret
10106be0:	2005003a 	cmpeq	r2,r4,zero
10106be4:	f800283a 	ret

10106be8 <_sbrk_r>:
10106be8:	defffd04 	addi	sp,sp,-12
10106bec:	dc000015 	stw	r16,0(sp)
10106bf0:	04040474 	movhi	r16,4113
10106bf4:	dc400115 	stw	r17,4(sp)
10106bf8:	840c5a04 	addi	r16,r16,12648
10106bfc:	2023883a 	mov	r17,r4
10106c00:	2809883a 	mov	r4,r5
10106c04:	dfc00215 	stw	ra,8(sp)
10106c08:	80000015 	stw	zero,0(r16)
10106c0c:	010d8d40 	call	1010d8d4 <sbrk>
10106c10:	00ffffc4 	movi	r3,-1
10106c14:	10c00526 	beq	r2,r3,10106c2c <_sbrk_r+0x44>
10106c18:	dfc00217 	ldw	ra,8(sp)
10106c1c:	dc400117 	ldw	r17,4(sp)
10106c20:	dc000017 	ldw	r16,0(sp)
10106c24:	dec00304 	addi	sp,sp,12
10106c28:	f800283a 	ret
10106c2c:	80c00017 	ldw	r3,0(r16)
10106c30:	183ff926 	beq	r3,zero,10106c18 <__alt_data_end+0xfffe6c18>
10106c34:	88c00015 	stw	r3,0(r17)
10106c38:	003ff706 	br	10106c18 <__alt_data_end+0xfffe6c18>

10106c3c <_init_signal_r>:
10106c3c:	2080b717 	ldw	r2,732(r4)
10106c40:	10000226 	beq	r2,zero,10106c4c <_init_signal_r+0x10>
10106c44:	0005883a 	mov	r2,zero
10106c48:	f800283a 	ret
10106c4c:	defffe04 	addi	sp,sp,-8
10106c50:	01402004 	movi	r5,128
10106c54:	dc000015 	stw	r16,0(sp)
10106c58:	dfc00115 	stw	ra,4(sp)
10106c5c:	2021883a 	mov	r16,r4
10106c60:	01050180 	call	10105018 <_malloc_r>
10106c64:	8080b715 	stw	r2,732(r16)
10106c68:	10000d26 	beq	r2,zero,10106ca0 <_init_signal_r+0x64>
10106c6c:	0007883a 	mov	r3,zero
10106c70:	01002004 	movi	r4,128
10106c74:	00000106 	br	10106c7c <_init_signal_r+0x40>
10106c78:	8080b717 	ldw	r2,732(r16)
10106c7c:	10c5883a 	add	r2,r2,r3
10106c80:	10000015 	stw	zero,0(r2)
10106c84:	18c00104 	addi	r3,r3,4
10106c88:	193ffb1e 	bne	r3,r4,10106c78 <__alt_data_end+0xfffe6c78>
10106c8c:	0005883a 	mov	r2,zero
10106c90:	dfc00117 	ldw	ra,4(sp)
10106c94:	dc000017 	ldw	r16,0(sp)
10106c98:	dec00204 	addi	sp,sp,8
10106c9c:	f800283a 	ret
10106ca0:	00bfffc4 	movi	r2,-1
10106ca4:	003ffa06 	br	10106c90 <__alt_data_end+0xfffe6c90>

10106ca8 <_signal_r>:
10106ca8:	00c007c4 	movi	r3,31
10106cac:	19401536 	bltu	r3,r5,10106d04 <_signal_r+0x5c>
10106cb0:	2080b717 	ldw	r2,732(r4)
10106cb4:	defffc04 	addi	sp,sp,-16
10106cb8:	dc800215 	stw	r18,8(sp)
10106cbc:	dc400115 	stw	r17,4(sp)
10106cc0:	dc000015 	stw	r16,0(sp)
10106cc4:	dfc00315 	stw	ra,12(sp)
10106cc8:	3023883a 	mov	r17,r6
10106ccc:	2021883a 	mov	r16,r4
10106cd0:	2825883a 	mov	r18,r5
10106cd4:	10000f26 	beq	r2,zero,10106d14 <_signal_r+0x6c>
10106cd8:	948b883a 	add	r5,r18,r18
10106cdc:	294b883a 	add	r5,r5,r5
10106ce0:	114b883a 	add	r5,r2,r5
10106ce4:	28800017 	ldw	r2,0(r5)
10106ce8:	2c400015 	stw	r17,0(r5)
10106cec:	dfc00317 	ldw	ra,12(sp)
10106cf0:	dc800217 	ldw	r18,8(sp)
10106cf4:	dc400117 	ldw	r17,4(sp)
10106cf8:	dc000017 	ldw	r16,0(sp)
10106cfc:	dec00404 	addi	sp,sp,16
10106d00:	f800283a 	ret
10106d04:	00c00584 	movi	r3,22
10106d08:	20c00015 	stw	r3,0(r4)
10106d0c:	00bfffc4 	movi	r2,-1
10106d10:	f800283a 	ret
10106d14:	0106c3c0 	call	10106c3c <_init_signal_r>
10106d18:	1000021e 	bne	r2,zero,10106d24 <_signal_r+0x7c>
10106d1c:	8080b717 	ldw	r2,732(r16)
10106d20:	003fed06 	br	10106cd8 <__alt_data_end+0xfffe6cd8>
10106d24:	00bfffc4 	movi	r2,-1
10106d28:	003ff006 	br	10106cec <__alt_data_end+0xfffe6cec>

10106d2c <_raise_r>:
10106d2c:	008007c4 	movi	r2,31
10106d30:	11402936 	bltu	r2,r5,10106dd8 <_raise_r+0xac>
10106d34:	20c0b717 	ldw	r3,732(r4)
10106d38:	defffd04 	addi	sp,sp,-12
10106d3c:	dc400115 	stw	r17,4(sp)
10106d40:	dc000015 	stw	r16,0(sp)
10106d44:	dfc00215 	stw	ra,8(sp)
10106d48:	2021883a 	mov	r16,r4
10106d4c:	2823883a 	mov	r17,r5
10106d50:	18001726 	beq	r3,zero,10106db0 <_raise_r+0x84>
10106d54:	2945883a 	add	r2,r5,r5
10106d58:	1085883a 	add	r2,r2,r2
10106d5c:	1887883a 	add	r3,r3,r2
10106d60:	19800017 	ldw	r6,0(r3)
10106d64:	30001226 	beq	r6,zero,10106db0 <_raise_r+0x84>
10106d68:	00800044 	movi	r2,1
10106d6c:	30800e26 	beq	r6,r2,10106da8 <_raise_r+0x7c>
10106d70:	013fffc4 	movi	r4,-1
10106d74:	31000926 	beq	r6,r4,10106d9c <_raise_r+0x70>
10106d78:	18000015 	stw	zero,0(r3)
10106d7c:	2809883a 	mov	r4,r5
10106d80:	303ee83a 	callr	r6
10106d84:	0005883a 	mov	r2,zero
10106d88:	dfc00217 	ldw	ra,8(sp)
10106d8c:	dc400117 	ldw	r17,4(sp)
10106d90:	dc000017 	ldw	r16,0(sp)
10106d94:	dec00304 	addi	sp,sp,12
10106d98:	f800283a 	ret
10106d9c:	00c00584 	movi	r3,22
10106da0:	80c00015 	stw	r3,0(r16)
10106da4:	003ff806 	br	10106d88 <__alt_data_end+0xfffe6d88>
10106da8:	0005883a 	mov	r2,zero
10106dac:	003ff606 	br	10106d88 <__alt_data_end+0xfffe6d88>
10106db0:	8009883a 	mov	r4,r16
10106db4:	0106f3c0 	call	10106f3c <_getpid_r>
10106db8:	880d883a 	mov	r6,r17
10106dbc:	100b883a 	mov	r5,r2
10106dc0:	8009883a 	mov	r4,r16
10106dc4:	dfc00217 	ldw	ra,8(sp)
10106dc8:	dc400117 	ldw	r17,4(sp)
10106dcc:	dc000017 	ldw	r16,0(sp)
10106dd0:	dec00304 	addi	sp,sp,12
10106dd4:	0106ee01 	jmpi	10106ee0 <_kill_r>
10106dd8:	00800584 	movi	r2,22
10106ddc:	20800015 	stw	r2,0(r4)
10106de0:	00bfffc4 	movi	r2,-1
10106de4:	f800283a 	ret

10106de8 <__sigtramp_r>:
10106de8:	008007c4 	movi	r2,31
10106dec:	11402436 	bltu	r2,r5,10106e80 <__sigtramp_r+0x98>
10106df0:	20c0b717 	ldw	r3,732(r4)
10106df4:	defffd04 	addi	sp,sp,-12
10106df8:	dc400115 	stw	r17,4(sp)
10106dfc:	dc000015 	stw	r16,0(sp)
10106e00:	dfc00215 	stw	ra,8(sp)
10106e04:	2021883a 	mov	r16,r4
10106e08:	2823883a 	mov	r17,r5
10106e0c:	18001826 	beq	r3,zero,10106e70 <__sigtramp_r+0x88>
10106e10:	8c45883a 	add	r2,r17,r17
10106e14:	1085883a 	add	r2,r2,r2
10106e18:	1885883a 	add	r2,r3,r2
10106e1c:	10c00017 	ldw	r3,0(r2)
10106e20:	18001126 	beq	r3,zero,10106e68 <__sigtramp_r+0x80>
10106e24:	013fffc4 	movi	r4,-1
10106e28:	19000d26 	beq	r3,r4,10106e60 <__sigtramp_r+0x78>
10106e2c:	01000044 	movi	r4,1
10106e30:	19000926 	beq	r3,r4,10106e58 <__sigtramp_r+0x70>
10106e34:	10000015 	stw	zero,0(r2)
10106e38:	8809883a 	mov	r4,r17
10106e3c:	183ee83a 	callr	r3
10106e40:	0005883a 	mov	r2,zero
10106e44:	dfc00217 	ldw	ra,8(sp)
10106e48:	dc400117 	ldw	r17,4(sp)
10106e4c:	dc000017 	ldw	r16,0(sp)
10106e50:	dec00304 	addi	sp,sp,12
10106e54:	f800283a 	ret
10106e58:	008000c4 	movi	r2,3
10106e5c:	003ff906 	br	10106e44 <__alt_data_end+0xfffe6e44>
10106e60:	00800084 	movi	r2,2
10106e64:	003ff706 	br	10106e44 <__alt_data_end+0xfffe6e44>
10106e68:	00800044 	movi	r2,1
10106e6c:	003ff506 	br	10106e44 <__alt_data_end+0xfffe6e44>
10106e70:	0106c3c0 	call	10106c3c <_init_signal_r>
10106e74:	1000041e 	bne	r2,zero,10106e88 <__sigtramp_r+0xa0>
10106e78:	80c0b717 	ldw	r3,732(r16)
10106e7c:	003fe406 	br	10106e10 <__alt_data_end+0xfffe6e10>
10106e80:	00bfffc4 	movi	r2,-1
10106e84:	f800283a 	ret
10106e88:	00bfffc4 	movi	r2,-1
10106e8c:	003fed06 	br	10106e44 <__alt_data_end+0xfffe6e44>

10106e90 <raise>:
10106e90:	00840474 	movhi	r2,4113
10106e94:	10858804 	addi	r2,r2,5664
10106e98:	200b883a 	mov	r5,r4
10106e9c:	11000017 	ldw	r4,0(r2)
10106ea0:	0106d2c1 	jmpi	10106d2c <_raise_r>

10106ea4 <signal>:
10106ea4:	00840474 	movhi	r2,4113
10106ea8:	10858804 	addi	r2,r2,5664
10106eac:	280d883a 	mov	r6,r5
10106eb0:	200b883a 	mov	r5,r4
10106eb4:	11000017 	ldw	r4,0(r2)
10106eb8:	0106ca81 	jmpi	10106ca8 <_signal_r>

10106ebc <_init_signal>:
10106ebc:	00840474 	movhi	r2,4113
10106ec0:	10858804 	addi	r2,r2,5664
10106ec4:	11000017 	ldw	r4,0(r2)
10106ec8:	0106c3c1 	jmpi	10106c3c <_init_signal_r>

10106ecc <__sigtramp>:
10106ecc:	00840474 	movhi	r2,4113
10106ed0:	10858804 	addi	r2,r2,5664
10106ed4:	200b883a 	mov	r5,r4
10106ed8:	11000017 	ldw	r4,0(r2)
10106edc:	0106de81 	jmpi	10106de8 <__sigtramp_r>

10106ee0 <_kill_r>:
10106ee0:	defffd04 	addi	sp,sp,-12
10106ee4:	2805883a 	mov	r2,r5
10106ee8:	dc000015 	stw	r16,0(sp)
10106eec:	04040474 	movhi	r16,4113
10106ef0:	dc400115 	stw	r17,4(sp)
10106ef4:	840c5a04 	addi	r16,r16,12648
10106ef8:	2023883a 	mov	r17,r4
10106efc:	300b883a 	mov	r5,r6
10106f00:	1009883a 	mov	r4,r2
10106f04:	dfc00215 	stw	ra,8(sp)
10106f08:	80000015 	stw	zero,0(r16)
10106f0c:	010d3480 	call	1010d348 <kill>
10106f10:	00ffffc4 	movi	r3,-1
10106f14:	10c00526 	beq	r2,r3,10106f2c <_kill_r+0x4c>
10106f18:	dfc00217 	ldw	ra,8(sp)
10106f1c:	dc400117 	ldw	r17,4(sp)
10106f20:	dc000017 	ldw	r16,0(sp)
10106f24:	dec00304 	addi	sp,sp,12
10106f28:	f800283a 	ret
10106f2c:	80c00017 	ldw	r3,0(r16)
10106f30:	183ff926 	beq	r3,zero,10106f18 <__alt_data_end+0xfffe6f18>
10106f34:	88c00015 	stw	r3,0(r17)
10106f38:	003ff706 	br	10106f18 <__alt_data_end+0xfffe6f18>

10106f3c <_getpid_r>:
10106f3c:	010d20c1 	jmpi	1010d20c <getpid>

10106f40 <__sread>:
10106f40:	defffe04 	addi	sp,sp,-8
10106f44:	dc000015 	stw	r16,0(sp)
10106f48:	2821883a 	mov	r16,r5
10106f4c:	2940038f 	ldh	r5,14(r5)
10106f50:	dfc00115 	stw	ra,4(sp)
10106f54:	01093e40 	call	101093e4 <_read_r>
10106f58:	10000716 	blt	r2,zero,10106f78 <__sread+0x38>
10106f5c:	80c01417 	ldw	r3,80(r16)
10106f60:	1887883a 	add	r3,r3,r2
10106f64:	80c01415 	stw	r3,80(r16)
10106f68:	dfc00117 	ldw	ra,4(sp)
10106f6c:	dc000017 	ldw	r16,0(sp)
10106f70:	dec00204 	addi	sp,sp,8
10106f74:	f800283a 	ret
10106f78:	80c0030b 	ldhu	r3,12(r16)
10106f7c:	18fbffcc 	andi	r3,r3,61439
10106f80:	80c0030d 	sth	r3,12(r16)
10106f84:	dfc00117 	ldw	ra,4(sp)
10106f88:	dc000017 	ldw	r16,0(sp)
10106f8c:	dec00204 	addi	sp,sp,8
10106f90:	f800283a 	ret

10106f94 <__seofread>:
10106f94:	0005883a 	mov	r2,zero
10106f98:	f800283a 	ret

10106f9c <__swrite>:
10106f9c:	2880030b 	ldhu	r2,12(r5)
10106fa0:	defffb04 	addi	sp,sp,-20
10106fa4:	dcc00315 	stw	r19,12(sp)
10106fa8:	dc800215 	stw	r18,8(sp)
10106fac:	dc400115 	stw	r17,4(sp)
10106fb0:	dc000015 	stw	r16,0(sp)
10106fb4:	dfc00415 	stw	ra,16(sp)
10106fb8:	10c0400c 	andi	r3,r2,256
10106fbc:	2821883a 	mov	r16,r5
10106fc0:	2023883a 	mov	r17,r4
10106fc4:	3025883a 	mov	r18,r6
10106fc8:	3827883a 	mov	r19,r7
10106fcc:	18000526 	beq	r3,zero,10106fe4 <__swrite+0x48>
10106fd0:	2940038f 	ldh	r5,14(r5)
10106fd4:	01c00084 	movi	r7,2
10106fd8:	000d883a 	mov	r6,zero
10106fdc:	01092280 	call	10109228 <_lseek_r>
10106fe0:	8080030b 	ldhu	r2,12(r16)
10106fe4:	8140038f 	ldh	r5,14(r16)
10106fe8:	10bbffcc 	andi	r2,r2,61439
10106fec:	980f883a 	mov	r7,r19
10106ff0:	900d883a 	mov	r6,r18
10106ff4:	8809883a 	mov	r4,r17
10106ff8:	8080030d 	sth	r2,12(r16)
10106ffc:	dfc00417 	ldw	ra,16(sp)
10107000:	dcc00317 	ldw	r19,12(sp)
10107004:	dc800217 	ldw	r18,8(sp)
10107008:	dc400117 	ldw	r17,4(sp)
1010700c:	dc000017 	ldw	r16,0(sp)
10107010:	dec00504 	addi	sp,sp,20
10107014:	01088381 	jmpi	10108838 <_write_r>

10107018 <__sseek>:
10107018:	defffe04 	addi	sp,sp,-8
1010701c:	dc000015 	stw	r16,0(sp)
10107020:	2821883a 	mov	r16,r5
10107024:	2940038f 	ldh	r5,14(r5)
10107028:	dfc00115 	stw	ra,4(sp)
1010702c:	01092280 	call	10109228 <_lseek_r>
10107030:	00ffffc4 	movi	r3,-1
10107034:	10c00826 	beq	r2,r3,10107058 <__sseek+0x40>
10107038:	80c0030b 	ldhu	r3,12(r16)
1010703c:	80801415 	stw	r2,80(r16)
10107040:	18c40014 	ori	r3,r3,4096
10107044:	80c0030d 	sth	r3,12(r16)
10107048:	dfc00117 	ldw	ra,4(sp)
1010704c:	dc000017 	ldw	r16,0(sp)
10107050:	dec00204 	addi	sp,sp,8
10107054:	f800283a 	ret
10107058:	80c0030b 	ldhu	r3,12(r16)
1010705c:	18fbffcc 	andi	r3,r3,61439
10107060:	80c0030d 	sth	r3,12(r16)
10107064:	dfc00117 	ldw	ra,4(sp)
10107068:	dc000017 	ldw	r16,0(sp)
1010706c:	dec00204 	addi	sp,sp,8
10107070:	f800283a 	ret

10107074 <__sclose>:
10107074:	2940038f 	ldh	r5,14(r5)
10107078:	01088981 	jmpi	10108898 <_close_r>

1010707c <strcmp>:
1010707c:	2144b03a 	or	r2,r4,r5
10107080:	108000cc 	andi	r2,r2,3
10107084:	1000171e 	bne	r2,zero,101070e4 <strcmp+0x68>
10107088:	20800017 	ldw	r2,0(r4)
1010708c:	28c00017 	ldw	r3,0(r5)
10107090:	10c0141e 	bne	r2,r3,101070e4 <strcmp+0x68>
10107094:	027fbff4 	movhi	r9,65279
10107098:	4a7fbfc4 	addi	r9,r9,-257
1010709c:	0086303a 	nor	r3,zero,r2
101070a0:	02202074 	movhi	r8,32897
101070a4:	1245883a 	add	r2,r2,r9
101070a8:	42202004 	addi	r8,r8,-32640
101070ac:	10c4703a 	and	r2,r2,r3
101070b0:	1204703a 	and	r2,r2,r8
101070b4:	10000226 	beq	r2,zero,101070c0 <strcmp+0x44>
101070b8:	00002306 	br	10107148 <strcmp+0xcc>
101070bc:	1000221e 	bne	r2,zero,10107148 <strcmp+0xcc>
101070c0:	21000104 	addi	r4,r4,4
101070c4:	20c00017 	ldw	r3,0(r4)
101070c8:	29400104 	addi	r5,r5,4
101070cc:	29800017 	ldw	r6,0(r5)
101070d0:	1a4f883a 	add	r7,r3,r9
101070d4:	00c4303a 	nor	r2,zero,r3
101070d8:	3884703a 	and	r2,r7,r2
101070dc:	1204703a 	and	r2,r2,r8
101070e0:	19bff626 	beq	r3,r6,101070bc <__alt_data_end+0xfffe70bc>
101070e4:	20800003 	ldbu	r2,0(r4)
101070e8:	10c03fcc 	andi	r3,r2,255
101070ec:	18c0201c 	xori	r3,r3,128
101070f0:	18ffe004 	addi	r3,r3,-128
101070f4:	18000c26 	beq	r3,zero,10107128 <strcmp+0xac>
101070f8:	29800007 	ldb	r6,0(r5)
101070fc:	19800326 	beq	r3,r6,1010710c <strcmp+0x90>
10107100:	00001306 	br	10107150 <strcmp+0xd4>
10107104:	29800007 	ldb	r6,0(r5)
10107108:	11800b1e 	bne	r2,r6,10107138 <strcmp+0xbc>
1010710c:	21000044 	addi	r4,r4,1
10107110:	20c00003 	ldbu	r3,0(r4)
10107114:	29400044 	addi	r5,r5,1
10107118:	18803fcc 	andi	r2,r3,255
1010711c:	1080201c 	xori	r2,r2,128
10107120:	10bfe004 	addi	r2,r2,-128
10107124:	103ff71e 	bne	r2,zero,10107104 <__alt_data_end+0xfffe7104>
10107128:	0007883a 	mov	r3,zero
1010712c:	28800003 	ldbu	r2,0(r5)
10107130:	1885c83a 	sub	r2,r3,r2
10107134:	f800283a 	ret
10107138:	28800003 	ldbu	r2,0(r5)
1010713c:	18c03fcc 	andi	r3,r3,255
10107140:	1885c83a 	sub	r2,r3,r2
10107144:	f800283a 	ret
10107148:	0005883a 	mov	r2,zero
1010714c:	f800283a 	ret
10107150:	10c03fcc 	andi	r3,r2,255
10107154:	003ff506 	br	1010712c <__alt_data_end+0xfffe712c>

10107158 <strlen>:
10107158:	208000cc 	andi	r2,r4,3
1010715c:	10002026 	beq	r2,zero,101071e0 <strlen+0x88>
10107160:	20800007 	ldb	r2,0(r4)
10107164:	10002026 	beq	r2,zero,101071e8 <strlen+0x90>
10107168:	2005883a 	mov	r2,r4
1010716c:	00000206 	br	10107178 <strlen+0x20>
10107170:	10c00007 	ldb	r3,0(r2)
10107174:	18001826 	beq	r3,zero,101071d8 <strlen+0x80>
10107178:	10800044 	addi	r2,r2,1
1010717c:	10c000cc 	andi	r3,r2,3
10107180:	183ffb1e 	bne	r3,zero,10107170 <__alt_data_end+0xfffe7170>
10107184:	10c00017 	ldw	r3,0(r2)
10107188:	01ffbff4 	movhi	r7,65279
1010718c:	39ffbfc4 	addi	r7,r7,-257
10107190:	00ca303a 	nor	r5,zero,r3
10107194:	01a02074 	movhi	r6,32897
10107198:	19c7883a 	add	r3,r3,r7
1010719c:	31a02004 	addi	r6,r6,-32640
101071a0:	1946703a 	and	r3,r3,r5
101071a4:	1986703a 	and	r3,r3,r6
101071a8:	1800091e 	bne	r3,zero,101071d0 <strlen+0x78>
101071ac:	10800104 	addi	r2,r2,4
101071b0:	10c00017 	ldw	r3,0(r2)
101071b4:	19cb883a 	add	r5,r3,r7
101071b8:	00c6303a 	nor	r3,zero,r3
101071bc:	28c6703a 	and	r3,r5,r3
101071c0:	1986703a 	and	r3,r3,r6
101071c4:	183ff926 	beq	r3,zero,101071ac <__alt_data_end+0xfffe71ac>
101071c8:	00000106 	br	101071d0 <strlen+0x78>
101071cc:	10800044 	addi	r2,r2,1
101071d0:	10c00007 	ldb	r3,0(r2)
101071d4:	183ffd1e 	bne	r3,zero,101071cc <__alt_data_end+0xfffe71cc>
101071d8:	1105c83a 	sub	r2,r2,r4
101071dc:	f800283a 	ret
101071e0:	2005883a 	mov	r2,r4
101071e4:	003fe706 	br	10107184 <__alt_data_end+0xfffe7184>
101071e8:	0005883a 	mov	r2,zero
101071ec:	f800283a 	ret

101071f0 <__sprint_r.part.0>:
101071f0:	28801917 	ldw	r2,100(r5)
101071f4:	defff604 	addi	sp,sp,-40
101071f8:	dd400515 	stw	r21,20(sp)
101071fc:	dfc00915 	stw	ra,36(sp)
10107200:	df000815 	stw	fp,32(sp)
10107204:	ddc00715 	stw	r23,28(sp)
10107208:	dd800615 	stw	r22,24(sp)
1010720c:	dd000415 	stw	r20,16(sp)
10107210:	dcc00315 	stw	r19,12(sp)
10107214:	dc800215 	stw	r18,8(sp)
10107218:	dc400115 	stw	r17,4(sp)
1010721c:	dc000015 	stw	r16,0(sp)
10107220:	1088000c 	andi	r2,r2,8192
10107224:	302b883a 	mov	r21,r6
10107228:	10002e26 	beq	r2,zero,101072e4 <__sprint_r.part.0+0xf4>
1010722c:	30800217 	ldw	r2,8(r6)
10107230:	35800017 	ldw	r22,0(r6)
10107234:	10002926 	beq	r2,zero,101072dc <__sprint_r.part.0+0xec>
10107238:	2827883a 	mov	r19,r5
1010723c:	2029883a 	mov	r20,r4
10107240:	b5c00104 	addi	r23,r22,4
10107244:	04bfffc4 	movi	r18,-1
10107248:	bc400017 	ldw	r17,0(r23)
1010724c:	b4000017 	ldw	r16,0(r22)
10107250:	0039883a 	mov	fp,zero
10107254:	8822d0ba 	srli	r17,r17,2
10107258:	8800031e 	bne	r17,zero,10107268 <__sprint_r.part.0+0x78>
1010725c:	00001806 	br	101072c0 <__sprint_r.part.0+0xd0>
10107260:	84000104 	addi	r16,r16,4
10107264:	8f001526 	beq	r17,fp,101072bc <__sprint_r.part.0+0xcc>
10107268:	81400017 	ldw	r5,0(r16)
1010726c:	980d883a 	mov	r6,r19
10107270:	a009883a 	mov	r4,r20
10107274:	0108c180 	call	10108c18 <_fputwc_r>
10107278:	e7000044 	addi	fp,fp,1
1010727c:	14bff81e 	bne	r2,r18,10107260 <__alt_data_end+0xfffe7260>
10107280:	9005883a 	mov	r2,r18
10107284:	a8000215 	stw	zero,8(r21)
10107288:	a8000115 	stw	zero,4(r21)
1010728c:	dfc00917 	ldw	ra,36(sp)
10107290:	df000817 	ldw	fp,32(sp)
10107294:	ddc00717 	ldw	r23,28(sp)
10107298:	dd800617 	ldw	r22,24(sp)
1010729c:	dd400517 	ldw	r21,20(sp)
101072a0:	dd000417 	ldw	r20,16(sp)
101072a4:	dcc00317 	ldw	r19,12(sp)
101072a8:	dc800217 	ldw	r18,8(sp)
101072ac:	dc400117 	ldw	r17,4(sp)
101072b0:	dc000017 	ldw	r16,0(sp)
101072b4:	dec00a04 	addi	sp,sp,40
101072b8:	f800283a 	ret
101072bc:	a8800217 	ldw	r2,8(r21)
101072c0:	8c63883a 	add	r17,r17,r17
101072c4:	8c63883a 	add	r17,r17,r17
101072c8:	1445c83a 	sub	r2,r2,r17
101072cc:	a8800215 	stw	r2,8(r21)
101072d0:	b5800204 	addi	r22,r22,8
101072d4:	bdc00204 	addi	r23,r23,8
101072d8:	103fdb1e 	bne	r2,zero,10107248 <__alt_data_end+0xfffe7248>
101072dc:	0005883a 	mov	r2,zero
101072e0:	003fe806 	br	10107284 <__alt_data_end+0xfffe7284>
101072e4:	0108d180 	call	10108d18 <__sfvwrite_r>
101072e8:	003fe606 	br	10107284 <__alt_data_end+0xfffe7284>

101072ec <__sprint_r>:
101072ec:	30c00217 	ldw	r3,8(r6)
101072f0:	18000126 	beq	r3,zero,101072f8 <__sprint_r+0xc>
101072f4:	01071f01 	jmpi	101071f0 <__sprint_r.part.0>
101072f8:	30000115 	stw	zero,4(r6)
101072fc:	0005883a 	mov	r2,zero
10107300:	f800283a 	ret

10107304 <___vfiprintf_internal_r>:
10107304:	deffc904 	addi	sp,sp,-220
10107308:	df003515 	stw	fp,212(sp)
1010730c:	dd003115 	stw	r20,196(sp)
10107310:	dfc03615 	stw	ra,216(sp)
10107314:	ddc03415 	stw	r23,208(sp)
10107318:	dd803315 	stw	r22,204(sp)
1010731c:	dd403215 	stw	r21,200(sp)
10107320:	dcc03015 	stw	r19,192(sp)
10107324:	dc802f15 	stw	r18,188(sp)
10107328:	dc402e15 	stw	r17,184(sp)
1010732c:	dc002d15 	stw	r16,180(sp)
10107330:	d9002015 	stw	r4,128(sp)
10107334:	d9c02215 	stw	r7,136(sp)
10107338:	2829883a 	mov	r20,r5
1010733c:	3039883a 	mov	fp,r6
10107340:	20000226 	beq	r4,zero,1010734c <___vfiprintf_internal_r+0x48>
10107344:	20800e17 	ldw	r2,56(r4)
10107348:	1000cf26 	beq	r2,zero,10107688 <___vfiprintf_internal_r+0x384>
1010734c:	a080030b 	ldhu	r2,12(r20)
10107350:	10c8000c 	andi	r3,r2,8192
10107354:	1800061e 	bne	r3,zero,10107370 <___vfiprintf_internal_r+0x6c>
10107358:	a1001917 	ldw	r4,100(r20)
1010735c:	00f7ffc4 	movi	r3,-8193
10107360:	10880014 	ori	r2,r2,8192
10107364:	20c6703a 	and	r3,r4,r3
10107368:	a080030d 	sth	r2,12(r20)
1010736c:	a0c01915 	stw	r3,100(r20)
10107370:	10c0020c 	andi	r3,r2,8
10107374:	1800a926 	beq	r3,zero,1010761c <___vfiprintf_internal_r+0x318>
10107378:	a0c00417 	ldw	r3,16(r20)
1010737c:	1800a726 	beq	r3,zero,1010761c <___vfiprintf_internal_r+0x318>
10107380:	1080068c 	andi	r2,r2,26
10107384:	00c00284 	movi	r3,10
10107388:	10c0ac26 	beq	r2,r3,1010763c <___vfiprintf_internal_r+0x338>
1010738c:	da801a04 	addi	r10,sp,104
10107390:	da801e15 	stw	r10,120(sp)
10107394:	d8801e17 	ldw	r2,120(sp)
10107398:	da8019c4 	addi	r10,sp,103
1010739c:	05840474 	movhi	r22,4113
101073a0:	05c40474 	movhi	r23,4113
101073a4:	da801f15 	stw	r10,124(sp)
101073a8:	1295c83a 	sub	r10,r2,r10
101073ac:	b5be8904 	addi	r22,r22,-1500
101073b0:	bdfe8504 	addi	r23,r23,-1516
101073b4:	dec01a15 	stw	sp,104(sp)
101073b8:	d8001c15 	stw	zero,112(sp)
101073bc:	d8001b15 	stw	zero,108(sp)
101073c0:	d8002615 	stw	zero,152(sp)
101073c4:	d8002315 	stw	zero,140(sp)
101073c8:	da802715 	stw	r10,156(sp)
101073cc:	d811883a 	mov	r8,sp
101073d0:	dd002115 	stw	r20,132(sp)
101073d4:	e021883a 	mov	r16,fp
101073d8:	80800007 	ldb	r2,0(r16)
101073dc:	1003ea26 	beq	r2,zero,10108388 <___vfiprintf_internal_r+0x1084>
101073e0:	00c00944 	movi	r3,37
101073e4:	8025883a 	mov	r18,r16
101073e8:	10c0021e 	bne	r2,r3,101073f4 <___vfiprintf_internal_r+0xf0>
101073ec:	00001606 	br	10107448 <___vfiprintf_internal_r+0x144>
101073f0:	10c00326 	beq	r2,r3,10107400 <___vfiprintf_internal_r+0xfc>
101073f4:	94800044 	addi	r18,r18,1
101073f8:	90800007 	ldb	r2,0(r18)
101073fc:	103ffc1e 	bne	r2,zero,101073f0 <__alt_data_end+0xfffe73f0>
10107400:	9423c83a 	sub	r17,r18,r16
10107404:	88001026 	beq	r17,zero,10107448 <___vfiprintf_internal_r+0x144>
10107408:	d8c01c17 	ldw	r3,112(sp)
1010740c:	d8801b17 	ldw	r2,108(sp)
10107410:	44000015 	stw	r16,0(r8)
10107414:	88c7883a 	add	r3,r17,r3
10107418:	10800044 	addi	r2,r2,1
1010741c:	44400115 	stw	r17,4(r8)
10107420:	d8c01c15 	stw	r3,112(sp)
10107424:	d8801b15 	stw	r2,108(sp)
10107428:	010001c4 	movi	r4,7
1010742c:	2080760e 	bge	r4,r2,10107608 <___vfiprintf_internal_r+0x304>
10107430:	1803821e 	bne	r3,zero,1010823c <___vfiprintf_internal_r+0xf38>
10107434:	da802317 	ldw	r10,140(sp)
10107438:	d8001b15 	stw	zero,108(sp)
1010743c:	d811883a 	mov	r8,sp
10107440:	5455883a 	add	r10,r10,r17
10107444:	da802315 	stw	r10,140(sp)
10107448:	90800007 	ldb	r2,0(r18)
1010744c:	10044626 	beq	r2,zero,10108568 <___vfiprintf_internal_r+0x1264>
10107450:	90c00047 	ldb	r3,1(r18)
10107454:	94000044 	addi	r16,r18,1
10107458:	d8001d85 	stb	zero,118(sp)
1010745c:	0009883a 	mov	r4,zero
10107460:	000f883a 	mov	r7,zero
10107464:	027fffc4 	movi	r9,-1
10107468:	0023883a 	mov	r17,zero
1010746c:	0029883a 	mov	r20,zero
10107470:	01401604 	movi	r5,88
10107474:	01800244 	movi	r6,9
10107478:	03400a84 	movi	r13,42
1010747c:	03001b04 	movi	r12,108
10107480:	84000044 	addi	r16,r16,1
10107484:	18bff804 	addi	r2,r3,-32
10107488:	28827336 	bltu	r5,r2,10107e58 <___vfiprintf_internal_r+0xb54>
1010748c:	100490ba 	slli	r2,r2,2
10107490:	02840434 	movhi	r10,4112
10107494:	529d2904 	addi	r10,r10,29860
10107498:	1285883a 	add	r2,r2,r10
1010749c:	10800017 	ldw	r2,0(r2)
101074a0:	1000683a 	jmp	r2
101074a4:	10107b8c 	andi	zero,r2,16878
101074a8:	10107e58 	cmpnei	zero,r2,16889
101074ac:	10107e58 	cmpnei	zero,r2,16889
101074b0:	10107bac 	andhi	zero,r2,16878
101074b4:	10107e58 	cmpnei	zero,r2,16889
101074b8:	10107e58 	cmpnei	zero,r2,16889
101074bc:	10107e58 	cmpnei	zero,r2,16889
101074c0:	10107e58 	cmpnei	zero,r2,16889
101074c4:	10107e58 	cmpnei	zero,r2,16889
101074c8:	10107e58 	cmpnei	zero,r2,16889
101074cc:	10107d94 	ori	zero,r2,16886
101074d0:	10107db0 	cmpltui	zero,r2,16886
101074d4:	10107e58 	cmpnei	zero,r2,16889
101074d8:	10107698 	cmpnei	zero,r2,16858
101074dc:	10107dc0 	call	110107dc <__alt_data_end+0xef07dc>
101074e0:	10107e58 	cmpnei	zero,r2,16889
101074e4:	10107bb8 	rdprs	zero,r2,16878
101074e8:	10107bc4 	addi	zero,r2,16879
101074ec:	10107bc4 	addi	zero,r2,16879
101074f0:	10107bc4 	addi	zero,r2,16879
101074f4:	10107bc4 	addi	zero,r2,16879
101074f8:	10107bc4 	addi	zero,r2,16879
101074fc:	10107bc4 	addi	zero,r2,16879
10107500:	10107bc4 	addi	zero,r2,16879
10107504:	10107bc4 	addi	zero,r2,16879
10107508:	10107bc4 	addi	zero,r2,16879
1010750c:	10107e58 	cmpnei	zero,r2,16889
10107510:	10107e58 	cmpnei	zero,r2,16889
10107514:	10107e58 	cmpnei	zero,r2,16889
10107518:	10107e58 	cmpnei	zero,r2,16889
1010751c:	10107e58 	cmpnei	zero,r2,16889
10107520:	10107e58 	cmpnei	zero,r2,16889
10107524:	10107e58 	cmpnei	zero,r2,16889
10107528:	10107e58 	cmpnei	zero,r2,16889
1010752c:	10107e58 	cmpnei	zero,r2,16889
10107530:	10107e58 	cmpnei	zero,r2,16889
10107534:	10107bf0 	cmpltui	zero,r2,16879
10107538:	10107e58 	cmpnei	zero,r2,16889
1010753c:	10107e58 	cmpnei	zero,r2,16889
10107540:	10107e58 	cmpnei	zero,r2,16889
10107544:	10107e58 	cmpnei	zero,r2,16889
10107548:	10107e58 	cmpnei	zero,r2,16889
1010754c:	10107e58 	cmpnei	zero,r2,16889
10107550:	10107e58 	cmpnei	zero,r2,16889
10107554:	10107e58 	cmpnei	zero,r2,16889
10107558:	10107e58 	cmpnei	zero,r2,16889
1010755c:	10107e58 	cmpnei	zero,r2,16889
10107560:	10107c28 	cmpgeui	zero,r2,16880
10107564:	10107e58 	cmpnei	zero,r2,16889
10107568:	10107e58 	cmpnei	zero,r2,16889
1010756c:	10107e58 	cmpnei	zero,r2,16889
10107570:	10107e58 	cmpnei	zero,r2,16889
10107574:	10107e58 	cmpnei	zero,r2,16889
10107578:	10107c80 	call	110107c8 <__alt_data_end+0xef07c8>
1010757c:	10107e58 	cmpnei	zero,r2,16889
10107580:	10107e58 	cmpnei	zero,r2,16889
10107584:	10107cf0 	cmpltui	zero,r2,16883
10107588:	10107e58 	cmpnei	zero,r2,16889
1010758c:	10107e58 	cmpnei	zero,r2,16889
10107590:	10107e58 	cmpnei	zero,r2,16889
10107594:	10107e58 	cmpnei	zero,r2,16889
10107598:	10107e58 	cmpnei	zero,r2,16889
1010759c:	10107e58 	cmpnei	zero,r2,16889
101075a0:	10107e58 	cmpnei	zero,r2,16889
101075a4:	10107e58 	cmpnei	zero,r2,16889
101075a8:	10107e58 	cmpnei	zero,r2,16889
101075ac:	10107e58 	cmpnei	zero,r2,16889
101075b0:	10107a9c 	xori	zero,r2,16874
101075b4:	10107ac8 	cmpgei	zero,r2,16875
101075b8:	10107e58 	cmpnei	zero,r2,16889
101075bc:	10107e58 	cmpnei	zero,r2,16889
101075c0:	10107e58 	cmpnei	zero,r2,16889
101075c4:	10107e00 	call	110107e0 <__alt_data_end+0xef07e0>
101075c8:	10107ac8 	cmpgei	zero,r2,16875
101075cc:	10107e58 	cmpnei	zero,r2,16889
101075d0:	10107e58 	cmpnei	zero,r2,16889
101075d4:	1010795c 	xori	zero,r2,16869
101075d8:	10107e58 	cmpnei	zero,r2,16889
101075dc:	1010796c 	andhi	zero,r2,16869
101075e0:	101079a8 	cmpgeui	zero,r2,16870
101075e4:	101076a4 	muli	zero,r2,16858
101075e8:	10107950 	cmplti	zero,r2,16869
101075ec:	10107e58 	cmpnei	zero,r2,16889
101075f0:	10107d2c 	andhi	zero,r2,16884
101075f4:	10107e58 	cmpnei	zero,r2,16889
101075f8:	10107d84 	addi	zero,r2,16886
101075fc:	10107e58 	cmpnei	zero,r2,16889
10107600:	10107e58 	cmpnei	zero,r2,16889
10107604:	10107a48 	cmpgei	zero,r2,16873
10107608:	42000204 	addi	r8,r8,8
1010760c:	da802317 	ldw	r10,140(sp)
10107610:	5455883a 	add	r10,r10,r17
10107614:	da802315 	stw	r10,140(sp)
10107618:	003f8b06 	br	10107448 <__alt_data_end+0xfffe7448>
1010761c:	d9002017 	ldw	r4,128(sp)
10107620:	a00b883a 	mov	r5,r20
10107624:	01027880 	call	10102788 <__swsetup_r>
10107628:	1003b11e 	bne	r2,zero,101084f0 <___vfiprintf_internal_r+0x11ec>
1010762c:	a080030b 	ldhu	r2,12(r20)
10107630:	00c00284 	movi	r3,10
10107634:	1080068c 	andi	r2,r2,26
10107638:	10ff541e 	bne	r2,r3,1010738c <__alt_data_end+0xfffe738c>
1010763c:	a080038f 	ldh	r2,14(r20)
10107640:	103f5216 	blt	r2,zero,1010738c <__alt_data_end+0xfffe738c>
10107644:	d9c02217 	ldw	r7,136(sp)
10107648:	d9002017 	ldw	r4,128(sp)
1010764c:	e00d883a 	mov	r6,fp
10107650:	a00b883a 	mov	r5,r20
10107654:	010877c0 	call	1010877c <__sbprintf>
10107658:	dfc03617 	ldw	ra,216(sp)
1010765c:	df003517 	ldw	fp,212(sp)
10107660:	ddc03417 	ldw	r23,208(sp)
10107664:	dd803317 	ldw	r22,204(sp)
10107668:	dd403217 	ldw	r21,200(sp)
1010766c:	dd003117 	ldw	r20,196(sp)
10107670:	dcc03017 	ldw	r19,192(sp)
10107674:	dc802f17 	ldw	r18,188(sp)
10107678:	dc402e17 	ldw	r17,184(sp)
1010767c:	dc002d17 	ldw	r16,180(sp)
10107680:	dec03704 	addi	sp,sp,220
10107684:	f800283a 	ret
10107688:	01047740 	call	10104774 <__sinit>
1010768c:	003f2f06 	br	1010734c <__alt_data_end+0xfffe734c>
10107690:	0463c83a 	sub	r17,zero,r17
10107694:	d8802215 	stw	r2,136(sp)
10107698:	a5000114 	ori	r20,r20,4
1010769c:	80c00007 	ldb	r3,0(r16)
101076a0:	003f7706 	br	10107480 <__alt_data_end+0xfffe7480>
101076a4:	00800c04 	movi	r2,48
101076a8:	da802217 	ldw	r10,136(sp)
101076ac:	d8801d05 	stb	r2,116(sp)
101076b0:	00801e04 	movi	r2,120
101076b4:	d8801d45 	stb	r2,117(sp)
101076b8:	d8001d85 	stb	zero,118(sp)
101076bc:	50c00104 	addi	r3,r10,4
101076c0:	54800017 	ldw	r18,0(r10)
101076c4:	0027883a 	mov	r19,zero
101076c8:	a0800094 	ori	r2,r20,2
101076cc:	48030b16 	blt	r9,zero,101082fc <___vfiprintf_internal_r+0xff8>
101076d0:	00bfdfc4 	movi	r2,-129
101076d4:	a096703a 	and	r11,r20,r2
101076d8:	d8c02215 	stw	r3,136(sp)
101076dc:	5d000094 	ori	r20,r11,2
101076e0:	90032b1e 	bne	r18,zero,10108390 <___vfiprintf_internal_r+0x108c>
101076e4:	00840474 	movhi	r2,4113
101076e8:	10be2504 	addi	r2,r2,-1900
101076ec:	d8802615 	stw	r2,152(sp)
101076f0:	0039883a 	mov	fp,zero
101076f4:	48017b1e 	bne	r9,zero,10107ce4 <___vfiprintf_internal_r+0x9e0>
101076f8:	0013883a 	mov	r9,zero
101076fc:	0027883a 	mov	r19,zero
10107700:	dd401a04 	addi	r21,sp,104
10107704:	4825883a 	mov	r18,r9
10107708:	4cc0010e 	bge	r9,r19,10107710 <___vfiprintf_internal_r+0x40c>
1010770c:	9825883a 	mov	r18,r19
10107710:	e7003fcc 	andi	fp,fp,255
10107714:	e700201c 	xori	fp,fp,128
10107718:	e73fe004 	addi	fp,fp,-128
1010771c:	e0000126 	beq	fp,zero,10107724 <___vfiprintf_internal_r+0x420>
10107720:	94800044 	addi	r18,r18,1
10107724:	a380008c 	andi	r14,r20,2
10107728:	70000126 	beq	r14,zero,10107730 <___vfiprintf_internal_r+0x42c>
1010772c:	94800084 	addi	r18,r18,2
10107730:	a700210c 	andi	fp,r20,132
10107734:	e001df1e 	bne	fp,zero,10107eb4 <___vfiprintf_internal_r+0xbb0>
10107738:	8c87c83a 	sub	r3,r17,r18
1010773c:	00c1dd0e 	bge	zero,r3,10107eb4 <___vfiprintf_internal_r+0xbb0>
10107740:	01c00404 	movi	r7,16
10107744:	d8801c17 	ldw	r2,112(sp)
10107748:	38c3ad0e 	bge	r7,r3,10108600 <___vfiprintf_internal_r+0x12fc>
1010774c:	02840474 	movhi	r10,4113
10107750:	52be8904 	addi	r10,r10,-1500
10107754:	dc002915 	stw	r16,164(sp)
10107758:	d9801b17 	ldw	r6,108(sp)
1010775c:	da802415 	stw	r10,144(sp)
10107760:	03c001c4 	movi	r15,7
10107764:	da402515 	stw	r9,148(sp)
10107768:	db802815 	stw	r14,160(sp)
1010776c:	1821883a 	mov	r16,r3
10107770:	00000506 	br	10107788 <___vfiprintf_internal_r+0x484>
10107774:	31400084 	addi	r5,r6,2
10107778:	42000204 	addi	r8,r8,8
1010777c:	200d883a 	mov	r6,r4
10107780:	843ffc04 	addi	r16,r16,-16
10107784:	3c000d0e 	bge	r7,r16,101077bc <___vfiprintf_internal_r+0x4b8>
10107788:	10800404 	addi	r2,r2,16
1010778c:	31000044 	addi	r4,r6,1
10107790:	45800015 	stw	r22,0(r8)
10107794:	41c00115 	stw	r7,4(r8)
10107798:	d8801c15 	stw	r2,112(sp)
1010779c:	d9001b15 	stw	r4,108(sp)
101077a0:	793ff40e 	bge	r15,r4,10107774 <__alt_data_end+0xfffe7774>
101077a4:	1001b51e 	bne	r2,zero,10107e7c <___vfiprintf_internal_r+0xb78>
101077a8:	843ffc04 	addi	r16,r16,-16
101077ac:	000d883a 	mov	r6,zero
101077b0:	01400044 	movi	r5,1
101077b4:	d811883a 	mov	r8,sp
101077b8:	3c3ff316 	blt	r7,r16,10107788 <__alt_data_end+0xfffe7788>
101077bc:	8007883a 	mov	r3,r16
101077c0:	da402517 	ldw	r9,148(sp)
101077c4:	db802817 	ldw	r14,160(sp)
101077c8:	dc002917 	ldw	r16,164(sp)
101077cc:	da802417 	ldw	r10,144(sp)
101077d0:	1885883a 	add	r2,r3,r2
101077d4:	40c00115 	stw	r3,4(r8)
101077d8:	42800015 	stw	r10,0(r8)
101077dc:	d8801c15 	stw	r2,112(sp)
101077e0:	d9401b15 	stw	r5,108(sp)
101077e4:	00c001c4 	movi	r3,7
101077e8:	19426016 	blt	r3,r5,1010816c <___vfiprintf_internal_r+0xe68>
101077ec:	d8c01d87 	ldb	r3,118(sp)
101077f0:	42000204 	addi	r8,r8,8
101077f4:	29000044 	addi	r4,r5,1
101077f8:	1801b31e 	bne	r3,zero,10107ec8 <___vfiprintf_internal_r+0xbc4>
101077fc:	7001c026 	beq	r14,zero,10107f00 <___vfiprintf_internal_r+0xbfc>
10107800:	d8c01d04 	addi	r3,sp,116
10107804:	10800084 	addi	r2,r2,2
10107808:	40c00015 	stw	r3,0(r8)
1010780c:	00c00084 	movi	r3,2
10107810:	40c00115 	stw	r3,4(r8)
10107814:	d8801c15 	stw	r2,112(sp)
10107818:	d9001b15 	stw	r4,108(sp)
1010781c:	00c001c4 	movi	r3,7
10107820:	1902650e 	bge	r3,r4,101081b8 <___vfiprintf_internal_r+0xeb4>
10107824:	10029a1e 	bne	r2,zero,10108290 <___vfiprintf_internal_r+0xf8c>
10107828:	00c02004 	movi	r3,128
1010782c:	01000044 	movi	r4,1
10107830:	000b883a 	mov	r5,zero
10107834:	d811883a 	mov	r8,sp
10107838:	e0c1b31e 	bne	fp,r3,10107f08 <___vfiprintf_internal_r+0xc04>
1010783c:	8cb9c83a 	sub	fp,r17,r18
10107840:	0701b10e 	bge	zero,fp,10107f08 <___vfiprintf_internal_r+0xc04>
10107844:	01c00404 	movi	r7,16
10107848:	3f03890e 	bge	r7,fp,10108670 <___vfiprintf_internal_r+0x136c>
1010784c:	00c40474 	movhi	r3,4113
10107850:	18fe8504 	addi	r3,r3,-1516
10107854:	d8c02415 	stw	r3,144(sp)
10107858:	8007883a 	mov	r3,r16
1010785c:	034001c4 	movi	r13,7
10107860:	e021883a 	mov	r16,fp
10107864:	da402515 	stw	r9,148(sp)
10107868:	1839883a 	mov	fp,r3
1010786c:	00000506 	br	10107884 <___vfiprintf_internal_r+0x580>
10107870:	29800084 	addi	r6,r5,2
10107874:	42000204 	addi	r8,r8,8
10107878:	180b883a 	mov	r5,r3
1010787c:	843ffc04 	addi	r16,r16,-16
10107880:	3c000d0e 	bge	r7,r16,101078b8 <___vfiprintf_internal_r+0x5b4>
10107884:	10800404 	addi	r2,r2,16
10107888:	28c00044 	addi	r3,r5,1
1010788c:	45c00015 	stw	r23,0(r8)
10107890:	41c00115 	stw	r7,4(r8)
10107894:	d8801c15 	stw	r2,112(sp)
10107898:	d8c01b15 	stw	r3,108(sp)
1010789c:	68fff40e 	bge	r13,r3,10107870 <__alt_data_end+0xfffe7870>
101078a0:	1002241e 	bne	r2,zero,10108134 <___vfiprintf_internal_r+0xe30>
101078a4:	843ffc04 	addi	r16,r16,-16
101078a8:	01800044 	movi	r6,1
101078ac:	000b883a 	mov	r5,zero
101078b0:	d811883a 	mov	r8,sp
101078b4:	3c3ff316 	blt	r7,r16,10107884 <__alt_data_end+0xfffe7884>
101078b8:	da402517 	ldw	r9,148(sp)
101078bc:	e007883a 	mov	r3,fp
101078c0:	8039883a 	mov	fp,r16
101078c4:	1821883a 	mov	r16,r3
101078c8:	d8c02417 	ldw	r3,144(sp)
101078cc:	1705883a 	add	r2,r2,fp
101078d0:	47000115 	stw	fp,4(r8)
101078d4:	40c00015 	stw	r3,0(r8)
101078d8:	d8801c15 	stw	r2,112(sp)
101078dc:	d9801b15 	stw	r6,108(sp)
101078e0:	00c001c4 	movi	r3,7
101078e4:	19827616 	blt	r3,r6,101082c0 <___vfiprintf_internal_r+0xfbc>
101078e8:	4cf9c83a 	sub	fp,r9,r19
101078ec:	42000204 	addi	r8,r8,8
101078f0:	31000044 	addi	r4,r6,1
101078f4:	300b883a 	mov	r5,r6
101078f8:	07018516 	blt	zero,fp,10107f10 <___vfiprintf_internal_r+0xc0c>
101078fc:	9885883a 	add	r2,r19,r2
10107900:	45400015 	stw	r21,0(r8)
10107904:	44c00115 	stw	r19,4(r8)
10107908:	d8801c15 	stw	r2,112(sp)
1010790c:	d9001b15 	stw	r4,108(sp)
10107910:	00c001c4 	movi	r3,7
10107914:	1901dd0e 	bge	r3,r4,1010808c <___vfiprintf_internal_r+0xd88>
10107918:	1002401e 	bne	r2,zero,1010821c <___vfiprintf_internal_r+0xf18>
1010791c:	d8001b15 	stw	zero,108(sp)
10107920:	a2c0010c 	andi	r11,r20,4
10107924:	58000226 	beq	r11,zero,10107930 <___vfiprintf_internal_r+0x62c>
10107928:	8ca7c83a 	sub	r19,r17,r18
1010792c:	04c2f216 	blt	zero,r19,101084f8 <___vfiprintf_internal_r+0x11f4>
10107930:	8c80010e 	bge	r17,r18,10107938 <___vfiprintf_internal_r+0x634>
10107934:	9023883a 	mov	r17,r18
10107938:	da802317 	ldw	r10,140(sp)
1010793c:	5455883a 	add	r10,r10,r17
10107940:	da802315 	stw	r10,140(sp)
10107944:	d8001b15 	stw	zero,108(sp)
10107948:	d811883a 	mov	r8,sp
1010794c:	003ea206 	br	101073d8 <__alt_data_end+0xfffe73d8>
10107950:	a5000814 	ori	r20,r20,32
10107954:	80c00007 	ldb	r3,0(r16)
10107958:	003ec906 	br	10107480 <__alt_data_end+0xfffe7480>
1010795c:	80c00007 	ldb	r3,0(r16)
10107960:	1b030926 	beq	r3,r12,10108588 <___vfiprintf_internal_r+0x1284>
10107964:	a5000414 	ori	r20,r20,16
10107968:	003ec506 	br	10107480 <__alt_data_end+0xfffe7480>
1010796c:	21003fcc 	andi	r4,r4,255
10107970:	20035e1e 	bne	r4,zero,101086ec <___vfiprintf_internal_r+0x13e8>
10107974:	a080080c 	andi	r2,r20,32
10107978:	1002a526 	beq	r2,zero,10108410 <___vfiprintf_internal_r+0x110c>
1010797c:	da802217 	ldw	r10,136(sp)
10107980:	50800017 	ldw	r2,0(r10)
10107984:	da802317 	ldw	r10,140(sp)
10107988:	5007d7fa 	srai	r3,r10,31
1010798c:	da802217 	ldw	r10,136(sp)
10107990:	10c00115 	stw	r3,4(r2)
10107994:	52800104 	addi	r10,r10,4
10107998:	da802215 	stw	r10,136(sp)
1010799c:	da802317 	ldw	r10,140(sp)
101079a0:	12800015 	stw	r10,0(r2)
101079a4:	003e8c06 	br	101073d8 <__alt_data_end+0xfffe73d8>
101079a8:	21003fcc 	andi	r4,r4,255
101079ac:	2003511e 	bne	r4,zero,101086f4 <___vfiprintf_internal_r+0x13f0>
101079b0:	a080080c 	andi	r2,r20,32
101079b4:	1000a126 	beq	r2,zero,10107c3c <___vfiprintf_internal_r+0x938>
101079b8:	da802217 	ldw	r10,136(sp)
101079bc:	d8001d85 	stb	zero,118(sp)
101079c0:	50800204 	addi	r2,r10,8
101079c4:	54800017 	ldw	r18,0(r10)
101079c8:	54c00117 	ldw	r19,4(r10)
101079cc:	4802b416 	blt	r9,zero,101084a0 <___vfiprintf_internal_r+0x119c>
101079d0:	013fdfc4 	movi	r4,-129
101079d4:	94c6b03a 	or	r3,r18,r19
101079d8:	d8802215 	stw	r2,136(sp)
101079dc:	a128703a 	and	r20,r20,r4
101079e0:	1800a226 	beq	r3,zero,10107c6c <___vfiprintf_internal_r+0x968>
101079e4:	0039883a 	mov	fp,zero
101079e8:	dd401a04 	addi	r21,sp,104
101079ec:	9006d0fa 	srli	r3,r18,3
101079f0:	9808977a 	slli	r4,r19,29
101079f4:	9826d0fa 	srli	r19,r19,3
101079f8:	948001cc 	andi	r18,r18,7
101079fc:	90800c04 	addi	r2,r18,48
10107a00:	ad7fffc4 	addi	r21,r21,-1
10107a04:	20e4b03a 	or	r18,r4,r3
10107a08:	a8800005 	stb	r2,0(r21)
10107a0c:	94c6b03a 	or	r3,r18,r19
10107a10:	183ff61e 	bne	r3,zero,101079ec <__alt_data_end+0xfffe79ec>
10107a14:	a0c0004c 	andi	r3,r20,1
10107a18:	18005926 	beq	r3,zero,10107b80 <___vfiprintf_internal_r+0x87c>
10107a1c:	10803fcc 	andi	r2,r2,255
10107a20:	1080201c 	xori	r2,r2,128
10107a24:	10bfe004 	addi	r2,r2,-128
10107a28:	00c00c04 	movi	r3,48
10107a2c:	10c05426 	beq	r2,r3,10107b80 <___vfiprintf_internal_r+0x87c>
10107a30:	da801e17 	ldw	r10,120(sp)
10107a34:	a8bfffc4 	addi	r2,r21,-1
10107a38:	a8ffffc5 	stb	r3,-1(r21)
10107a3c:	50a7c83a 	sub	r19,r10,r2
10107a40:	102b883a 	mov	r21,r2
10107a44:	003f2f06 	br	10107704 <__alt_data_end+0xfffe7704>
10107a48:	21003fcc 	andi	r4,r4,255
10107a4c:	2003421e 	bne	r4,zero,10108758 <___vfiprintf_internal_r+0x1454>
10107a50:	00840474 	movhi	r2,4113
10107a54:	10be2504 	addi	r2,r2,-1900
10107a58:	d8802615 	stw	r2,152(sp)
10107a5c:	a080080c 	andi	r2,r20,32
10107a60:	1000aa26 	beq	r2,zero,10107d0c <___vfiprintf_internal_r+0xa08>
10107a64:	da802217 	ldw	r10,136(sp)
10107a68:	54800017 	ldw	r18,0(r10)
10107a6c:	54c00117 	ldw	r19,4(r10)
10107a70:	52800204 	addi	r10,r10,8
10107a74:	da802215 	stw	r10,136(sp)
10107a78:	a080004c 	andi	r2,r20,1
10107a7c:	1001d226 	beq	r2,zero,101081c8 <___vfiprintf_internal_r+0xec4>
10107a80:	94c4b03a 	or	r2,r18,r19
10107a84:	1002351e 	bne	r2,zero,1010835c <___vfiprintf_internal_r+0x1058>
10107a88:	d8001d85 	stb	zero,118(sp)
10107a8c:	48022216 	blt	r9,zero,10108318 <___vfiprintf_internal_r+0x1014>
10107a90:	00bfdfc4 	movi	r2,-129
10107a94:	a0a8703a 	and	r20,r20,r2
10107a98:	003f1506 	br	101076f0 <__alt_data_end+0xfffe76f0>
10107a9c:	da802217 	ldw	r10,136(sp)
10107aa0:	04800044 	movi	r18,1
10107aa4:	d8001d85 	stb	zero,118(sp)
10107aa8:	50800017 	ldw	r2,0(r10)
10107aac:	52800104 	addi	r10,r10,4
10107ab0:	da802215 	stw	r10,136(sp)
10107ab4:	d8801005 	stb	r2,64(sp)
10107ab8:	9027883a 	mov	r19,r18
10107abc:	dd401004 	addi	r21,sp,64
10107ac0:	0013883a 	mov	r9,zero
10107ac4:	003f1706 	br	10107724 <__alt_data_end+0xfffe7724>
10107ac8:	21003fcc 	andi	r4,r4,255
10107acc:	2003201e 	bne	r4,zero,10108750 <___vfiprintf_internal_r+0x144c>
10107ad0:	a080080c 	andi	r2,r20,32
10107ad4:	10004b26 	beq	r2,zero,10107c04 <___vfiprintf_internal_r+0x900>
10107ad8:	da802217 	ldw	r10,136(sp)
10107adc:	50800117 	ldw	r2,4(r10)
10107ae0:	54800017 	ldw	r18,0(r10)
10107ae4:	52800204 	addi	r10,r10,8
10107ae8:	da802215 	stw	r10,136(sp)
10107aec:	1027883a 	mov	r19,r2
10107af0:	10022c16 	blt	r2,zero,101083a4 <___vfiprintf_internal_r+0x10a0>
10107af4:	df001d83 	ldbu	fp,118(sp)
10107af8:	48007216 	blt	r9,zero,10107cc4 <___vfiprintf_internal_r+0x9c0>
10107afc:	00ffdfc4 	movi	r3,-129
10107b00:	94c4b03a 	or	r2,r18,r19
10107b04:	a0e8703a 	and	r20,r20,r3
10107b08:	1000cc26 	beq	r2,zero,10107e3c <___vfiprintf_internal_r+0xb38>
10107b0c:	98021026 	beq	r19,zero,10108350 <___vfiprintf_internal_r+0x104c>
10107b10:	dc402415 	stw	r17,144(sp)
10107b14:	dc002515 	stw	r16,148(sp)
10107b18:	9823883a 	mov	r17,r19
10107b1c:	9021883a 	mov	r16,r18
10107b20:	dd401a04 	addi	r21,sp,104
10107b24:	4825883a 	mov	r18,r9
10107b28:	4027883a 	mov	r19,r8
10107b2c:	8009883a 	mov	r4,r16
10107b30:	880b883a 	mov	r5,r17
10107b34:	01800284 	movi	r6,10
10107b38:	000f883a 	mov	r7,zero
10107b3c:	010a2600 	call	1010a260 <__umoddi3>
10107b40:	10800c04 	addi	r2,r2,48
10107b44:	ad7fffc4 	addi	r21,r21,-1
10107b48:	8009883a 	mov	r4,r16
10107b4c:	880b883a 	mov	r5,r17
10107b50:	a8800005 	stb	r2,0(r21)
10107b54:	01800284 	movi	r6,10
10107b58:	000f883a 	mov	r7,zero
10107b5c:	0109ce80 	call	10109ce8 <__udivdi3>
10107b60:	1021883a 	mov	r16,r2
10107b64:	10c4b03a 	or	r2,r2,r3
10107b68:	1823883a 	mov	r17,r3
10107b6c:	103fef1e 	bne	r2,zero,10107b2c <__alt_data_end+0xfffe7b2c>
10107b70:	dc402417 	ldw	r17,144(sp)
10107b74:	dc002517 	ldw	r16,148(sp)
10107b78:	9013883a 	mov	r9,r18
10107b7c:	9811883a 	mov	r8,r19
10107b80:	da801e17 	ldw	r10,120(sp)
10107b84:	5567c83a 	sub	r19,r10,r21
10107b88:	003ede06 	br	10107704 <__alt_data_end+0xfffe7704>
10107b8c:	38803fcc 	andi	r2,r7,255
10107b90:	1080201c 	xori	r2,r2,128
10107b94:	10bfe004 	addi	r2,r2,-128
10107b98:	1002371e 	bne	r2,zero,10108478 <___vfiprintf_internal_r+0x1174>
10107b9c:	01000044 	movi	r4,1
10107ba0:	01c00804 	movi	r7,32
10107ba4:	80c00007 	ldb	r3,0(r16)
10107ba8:	003e3506 	br	10107480 <__alt_data_end+0xfffe7480>
10107bac:	a5000054 	ori	r20,r20,1
10107bb0:	80c00007 	ldb	r3,0(r16)
10107bb4:	003e3206 	br	10107480 <__alt_data_end+0xfffe7480>
10107bb8:	a5002014 	ori	r20,r20,128
10107bbc:	80c00007 	ldb	r3,0(r16)
10107bc0:	003e2f06 	br	10107480 <__alt_data_end+0xfffe7480>
10107bc4:	8015883a 	mov	r10,r16
10107bc8:	0023883a 	mov	r17,zero
10107bcc:	18bff404 	addi	r2,r3,-48
10107bd0:	50c00007 	ldb	r3,0(r10)
10107bd4:	8c4002a4 	muli	r17,r17,10
10107bd8:	84000044 	addi	r16,r16,1
10107bdc:	8015883a 	mov	r10,r16
10107be0:	1463883a 	add	r17,r2,r17
10107be4:	18bff404 	addi	r2,r3,-48
10107be8:	30bff92e 	bgeu	r6,r2,10107bd0 <__alt_data_end+0xfffe7bd0>
10107bec:	003e2506 	br	10107484 <__alt_data_end+0xfffe7484>
10107bf0:	21003fcc 	andi	r4,r4,255
10107bf4:	2002d41e 	bne	r4,zero,10108748 <___vfiprintf_internal_r+0x1444>
10107bf8:	a5000414 	ori	r20,r20,16
10107bfc:	a080080c 	andi	r2,r20,32
10107c00:	103fb51e 	bne	r2,zero,10107ad8 <__alt_data_end+0xfffe7ad8>
10107c04:	a080040c 	andi	r2,r20,16
10107c08:	1001f826 	beq	r2,zero,101083ec <___vfiprintf_internal_r+0x10e8>
10107c0c:	da802217 	ldw	r10,136(sp)
10107c10:	54800017 	ldw	r18,0(r10)
10107c14:	52800104 	addi	r10,r10,4
10107c18:	da802215 	stw	r10,136(sp)
10107c1c:	9027d7fa 	srai	r19,r18,31
10107c20:	9805883a 	mov	r2,r19
10107c24:	003fb206 	br	10107af0 <__alt_data_end+0xfffe7af0>
10107c28:	21003fcc 	andi	r4,r4,255
10107c2c:	2002c41e 	bne	r4,zero,10108740 <___vfiprintf_internal_r+0x143c>
10107c30:	a5000414 	ori	r20,r20,16
10107c34:	a080080c 	andi	r2,r20,32
10107c38:	103f5f1e 	bne	r2,zero,101079b8 <__alt_data_end+0xfffe79b8>
10107c3c:	a080040c 	andi	r2,r20,16
10107c40:	10020f26 	beq	r2,zero,10108480 <___vfiprintf_internal_r+0x117c>
10107c44:	da802217 	ldw	r10,136(sp)
10107c48:	d8001d85 	stb	zero,118(sp)
10107c4c:	0027883a 	mov	r19,zero
10107c50:	50800104 	addi	r2,r10,4
10107c54:	54800017 	ldw	r18,0(r10)
10107c58:	48021116 	blt	r9,zero,101084a0 <___vfiprintf_internal_r+0x119c>
10107c5c:	00ffdfc4 	movi	r3,-129
10107c60:	d8802215 	stw	r2,136(sp)
10107c64:	a0e8703a 	and	r20,r20,r3
10107c68:	903f5e1e 	bne	r18,zero,101079e4 <__alt_data_end+0xfffe79e4>
10107c6c:	0039883a 	mov	fp,zero
10107c70:	4802a626 	beq	r9,zero,1010870c <___vfiprintf_internal_r+0x1408>
10107c74:	0025883a 	mov	r18,zero
10107c78:	0027883a 	mov	r19,zero
10107c7c:	003f5a06 	br	101079e8 <__alt_data_end+0xfffe79e8>
10107c80:	21003fcc 	andi	r4,r4,255
10107c84:	20029f1e 	bne	r4,zero,10108704 <___vfiprintf_internal_r+0x1400>
10107c88:	a5000414 	ori	r20,r20,16
10107c8c:	a080080c 	andi	r2,r20,32
10107c90:	10005e1e 	bne	r2,zero,10107e0c <___vfiprintf_internal_r+0xb08>
10107c94:	a080040c 	andi	r2,r20,16
10107c98:	1001a21e 	bne	r2,zero,10108324 <___vfiprintf_internal_r+0x1020>
10107c9c:	a080100c 	andi	r2,r20,64
10107ca0:	d8001d85 	stb	zero,118(sp)
10107ca4:	da802217 	ldw	r10,136(sp)
10107ca8:	1002231e 	bne	r2,zero,10108538 <___vfiprintf_internal_r+0x1234>
10107cac:	50800104 	addi	r2,r10,4
10107cb0:	54800017 	ldw	r18,0(r10)
10107cb4:	0027883a 	mov	r19,zero
10107cb8:	4801a00e 	bge	r9,zero,1010833c <___vfiprintf_internal_r+0x1038>
10107cbc:	d8802215 	stw	r2,136(sp)
10107cc0:	0039883a 	mov	fp,zero
10107cc4:	94c4b03a 	or	r2,r18,r19
10107cc8:	103f901e 	bne	r2,zero,10107b0c <__alt_data_end+0xfffe7b0c>
10107ccc:	00800044 	movi	r2,1
10107cd0:	10803fcc 	andi	r2,r2,255
10107cd4:	00c00044 	movi	r3,1
10107cd8:	10c05926 	beq	r2,r3,10107e40 <___vfiprintf_internal_r+0xb3c>
10107cdc:	00c00084 	movi	r3,2
10107ce0:	10ffe41e 	bne	r2,r3,10107c74 <__alt_data_end+0xfffe7c74>
10107ce4:	0025883a 	mov	r18,zero
10107ce8:	0027883a 	mov	r19,zero
10107cec:	00013d06 	br	101081e4 <___vfiprintf_internal_r+0xee0>
10107cf0:	21003fcc 	andi	r4,r4,255
10107cf4:	2002811e 	bne	r4,zero,101086fc <___vfiprintf_internal_r+0x13f8>
10107cf8:	00840474 	movhi	r2,4113
10107cfc:	10be2004 	addi	r2,r2,-1920
10107d00:	d8802615 	stw	r2,152(sp)
10107d04:	a080080c 	andi	r2,r20,32
10107d08:	103f561e 	bne	r2,zero,10107a64 <__alt_data_end+0xfffe7a64>
10107d0c:	a080040c 	andi	r2,r20,16
10107d10:	1001d126 	beq	r2,zero,10108458 <___vfiprintf_internal_r+0x1154>
10107d14:	da802217 	ldw	r10,136(sp)
10107d18:	0027883a 	mov	r19,zero
10107d1c:	54800017 	ldw	r18,0(r10)
10107d20:	52800104 	addi	r10,r10,4
10107d24:	da802215 	stw	r10,136(sp)
10107d28:	003f5306 	br	10107a78 <__alt_data_end+0xfffe7a78>
10107d2c:	da802217 	ldw	r10,136(sp)
10107d30:	d8001d85 	stb	zero,118(sp)
10107d34:	55400017 	ldw	r21,0(r10)
10107d38:	50c00104 	addi	r3,r10,4
10107d3c:	a8024226 	beq	r21,zero,10108648 <___vfiprintf_internal_r+0x1344>
10107d40:	48021816 	blt	r9,zero,101085a4 <___vfiprintf_internal_r+0x12a0>
10107d44:	480d883a 	mov	r6,r9
10107d48:	000b883a 	mov	r5,zero
10107d4c:	a809883a 	mov	r4,r21
10107d50:	d8c02a15 	stw	r3,168(sp)
10107d54:	da002b15 	stw	r8,172(sp)
10107d58:	da402c15 	stw	r9,176(sp)
10107d5c:	01058240 	call	10105824 <memchr>
10107d60:	d8c02a17 	ldw	r3,168(sp)
10107d64:	da002b17 	ldw	r8,172(sp)
10107d68:	da402c17 	ldw	r9,176(sp)
10107d6c:	10024826 	beq	r2,zero,10108690 <___vfiprintf_internal_r+0x138c>
10107d70:	1567c83a 	sub	r19,r2,r21
10107d74:	df001d83 	ldbu	fp,118(sp)
10107d78:	d8c02215 	stw	r3,136(sp)
10107d7c:	0013883a 	mov	r9,zero
10107d80:	003e6006 	br	10107704 <__alt_data_end+0xfffe7704>
10107d84:	21003fcc 	andi	r4,r4,255
10107d88:	203fc026 	beq	r4,zero,10107c8c <__alt_data_end+0xfffe7c8c>
10107d8c:	d9c01d85 	stb	r7,118(sp)
10107d90:	003fbe06 	br	10107c8c <__alt_data_end+0xfffe7c8c>
10107d94:	da802217 	ldw	r10,136(sp)
10107d98:	54400017 	ldw	r17,0(r10)
10107d9c:	50800104 	addi	r2,r10,4
10107da0:	883e3b16 	blt	r17,zero,10107690 <__alt_data_end+0xfffe7690>
10107da4:	d8802215 	stw	r2,136(sp)
10107da8:	80c00007 	ldb	r3,0(r16)
10107dac:	003db406 	br	10107480 <__alt_data_end+0xfffe7480>
10107db0:	01000044 	movi	r4,1
10107db4:	01c00ac4 	movi	r7,43
10107db8:	80c00007 	ldb	r3,0(r16)
10107dbc:	003db006 	br	10107480 <__alt_data_end+0xfffe7480>
10107dc0:	80c00007 	ldb	r3,0(r16)
10107dc4:	82800044 	addi	r10,r16,1
10107dc8:	1b423c26 	beq	r3,r13,101086bc <___vfiprintf_internal_r+0x13b8>
10107dcc:	18bff404 	addi	r2,r3,-48
10107dd0:	0013883a 	mov	r9,zero
10107dd4:	30822b36 	bltu	r6,r2,10108684 <___vfiprintf_internal_r+0x1380>
10107dd8:	50c00007 	ldb	r3,0(r10)
10107ddc:	4a4002a4 	muli	r9,r9,10
10107de0:	54000044 	addi	r16,r10,1
10107de4:	8015883a 	mov	r10,r16
10107de8:	4893883a 	add	r9,r9,r2
10107dec:	18bff404 	addi	r2,r3,-48
10107df0:	30bff92e 	bgeu	r6,r2,10107dd8 <__alt_data_end+0xfffe7dd8>
10107df4:	483da30e 	bge	r9,zero,10107484 <__alt_data_end+0xfffe7484>
10107df8:	027fffc4 	movi	r9,-1
10107dfc:	003da106 	br	10107484 <__alt_data_end+0xfffe7484>
10107e00:	a5001014 	ori	r20,r20,64
10107e04:	80c00007 	ldb	r3,0(r16)
10107e08:	003d9d06 	br	10107480 <__alt_data_end+0xfffe7480>
10107e0c:	da802217 	ldw	r10,136(sp)
10107e10:	d8001d85 	stb	zero,118(sp)
10107e14:	50c00204 	addi	r3,r10,8
10107e18:	54800017 	ldw	r18,0(r10)
10107e1c:	54c00117 	ldw	r19,4(r10)
10107e20:	4801ca16 	blt	r9,zero,1010854c <___vfiprintf_internal_r+0x1248>
10107e24:	013fdfc4 	movi	r4,-129
10107e28:	94c4b03a 	or	r2,r18,r19
10107e2c:	d8c02215 	stw	r3,136(sp)
10107e30:	a128703a 	and	r20,r20,r4
10107e34:	0039883a 	mov	fp,zero
10107e38:	103f341e 	bne	r2,zero,10107b0c <__alt_data_end+0xfffe7b0c>
10107e3c:	483e2e26 	beq	r9,zero,101076f8 <__alt_data_end+0xfffe76f8>
10107e40:	0025883a 	mov	r18,zero
10107e44:	94800c04 	addi	r18,r18,48
10107e48:	dc8019c5 	stb	r18,103(sp)
10107e4c:	dcc02717 	ldw	r19,156(sp)
10107e50:	dd4019c4 	addi	r21,sp,103
10107e54:	003e2b06 	br	10107704 <__alt_data_end+0xfffe7704>
10107e58:	21003fcc 	andi	r4,r4,255
10107e5c:	2002361e 	bne	r4,zero,10108738 <___vfiprintf_internal_r+0x1434>
10107e60:	1801c126 	beq	r3,zero,10108568 <___vfiprintf_internal_r+0x1264>
10107e64:	04800044 	movi	r18,1
10107e68:	d8c01005 	stb	r3,64(sp)
10107e6c:	d8001d85 	stb	zero,118(sp)
10107e70:	9027883a 	mov	r19,r18
10107e74:	dd401004 	addi	r21,sp,64
10107e78:	003f1106 	br	10107ac0 <__alt_data_end+0xfffe7ac0>
10107e7c:	d9402117 	ldw	r5,132(sp)
10107e80:	d9002017 	ldw	r4,128(sp)
10107e84:	d9801a04 	addi	r6,sp,104
10107e88:	d9c02b15 	stw	r7,172(sp)
10107e8c:	dbc02a15 	stw	r15,168(sp)
10107e90:	01071f00 	call	101071f0 <__sprint_r.part.0>
10107e94:	d9c02b17 	ldw	r7,172(sp)
10107e98:	dbc02a17 	ldw	r15,168(sp)
10107e9c:	10006d1e 	bne	r2,zero,10108054 <___vfiprintf_internal_r+0xd50>
10107ea0:	d9801b17 	ldw	r6,108(sp)
10107ea4:	d8801c17 	ldw	r2,112(sp)
10107ea8:	d811883a 	mov	r8,sp
10107eac:	31400044 	addi	r5,r6,1
10107eb0:	003e3306 	br	10107780 <__alt_data_end+0xfffe7780>
10107eb4:	d9401b17 	ldw	r5,108(sp)
10107eb8:	d8801c17 	ldw	r2,112(sp)
10107ebc:	29000044 	addi	r4,r5,1
10107ec0:	d8c01d87 	ldb	r3,118(sp)
10107ec4:	183e4d26 	beq	r3,zero,101077fc <__alt_data_end+0xfffe77fc>
10107ec8:	00c00044 	movi	r3,1
10107ecc:	d9401d84 	addi	r5,sp,118
10107ed0:	10c5883a 	add	r2,r2,r3
10107ed4:	41400015 	stw	r5,0(r8)
10107ed8:	40c00115 	stw	r3,4(r8)
10107edc:	d8801c15 	stw	r2,112(sp)
10107ee0:	d9001b15 	stw	r4,108(sp)
10107ee4:	014001c4 	movi	r5,7
10107ee8:	2900a90e 	bge	r5,r4,10108190 <___vfiprintf_internal_r+0xe8c>
10107eec:	1000da1e 	bne	r2,zero,10108258 <___vfiprintf_internal_r+0xf54>
10107ef0:	7000ab1e 	bne	r14,zero,101081a0 <___vfiprintf_internal_r+0xe9c>
10107ef4:	000b883a 	mov	r5,zero
10107ef8:	1809883a 	mov	r4,r3
10107efc:	d811883a 	mov	r8,sp
10107f00:	00c02004 	movi	r3,128
10107f04:	e0fe4d26 	beq	fp,r3,1010783c <__alt_data_end+0xfffe783c>
10107f08:	4cf9c83a 	sub	fp,r9,r19
10107f0c:	073e7b0e 	bge	zero,fp,101078fc <__alt_data_end+0xfffe78fc>
10107f10:	01c00404 	movi	r7,16
10107f14:	3f01900e 	bge	r7,fp,10108558 <___vfiprintf_internal_r+0x1254>
10107f18:	00c40474 	movhi	r3,4113
10107f1c:	18fe8504 	addi	r3,r3,-1516
10107f20:	d8c02415 	stw	r3,144(sp)
10107f24:	034001c4 	movi	r13,7
10107f28:	00000506 	br	10107f40 <___vfiprintf_internal_r+0xc3c>
10107f2c:	29000084 	addi	r4,r5,2
10107f30:	42000204 	addi	r8,r8,8
10107f34:	180b883a 	mov	r5,r3
10107f38:	e73ffc04 	addi	fp,fp,-16
10107f3c:	3f000d0e 	bge	r7,fp,10107f74 <___vfiprintf_internal_r+0xc70>
10107f40:	10800404 	addi	r2,r2,16
10107f44:	28c00044 	addi	r3,r5,1
10107f48:	45c00015 	stw	r23,0(r8)
10107f4c:	41c00115 	stw	r7,4(r8)
10107f50:	d8801c15 	stw	r2,112(sp)
10107f54:	d8c01b15 	stw	r3,108(sp)
10107f58:	68fff40e 	bge	r13,r3,10107f2c <__alt_data_end+0xfffe7f2c>
10107f5c:	1000101e 	bne	r2,zero,10107fa0 <___vfiprintf_internal_r+0xc9c>
10107f60:	e73ffc04 	addi	fp,fp,-16
10107f64:	01000044 	movi	r4,1
10107f68:	000b883a 	mov	r5,zero
10107f6c:	d811883a 	mov	r8,sp
10107f70:	3f3ff316 	blt	r7,fp,10107f40 <__alt_data_end+0xfffe7f40>
10107f74:	da802417 	ldw	r10,144(sp)
10107f78:	1705883a 	add	r2,r2,fp
10107f7c:	47000115 	stw	fp,4(r8)
10107f80:	42800015 	stw	r10,0(r8)
10107f84:	d8801c15 	stw	r2,112(sp)
10107f88:	d9001b15 	stw	r4,108(sp)
10107f8c:	00c001c4 	movi	r3,7
10107f90:	19003616 	blt	r3,r4,1010806c <___vfiprintf_internal_r+0xd68>
10107f94:	42000204 	addi	r8,r8,8
10107f98:	21000044 	addi	r4,r4,1
10107f9c:	003e5706 	br	101078fc <__alt_data_end+0xfffe78fc>
10107fa0:	d9402117 	ldw	r5,132(sp)
10107fa4:	d9002017 	ldw	r4,128(sp)
10107fa8:	d9801a04 	addi	r6,sp,104
10107fac:	d9c02b15 	stw	r7,172(sp)
10107fb0:	db402a15 	stw	r13,168(sp)
10107fb4:	01071f00 	call	101071f0 <__sprint_r.part.0>
10107fb8:	d9c02b17 	ldw	r7,172(sp)
10107fbc:	db402a17 	ldw	r13,168(sp)
10107fc0:	1000241e 	bne	r2,zero,10108054 <___vfiprintf_internal_r+0xd50>
10107fc4:	d9401b17 	ldw	r5,108(sp)
10107fc8:	d8801c17 	ldw	r2,112(sp)
10107fcc:	d811883a 	mov	r8,sp
10107fd0:	29000044 	addi	r4,r5,1
10107fd4:	003fd806 	br	10107f38 <__alt_data_end+0xfffe7f38>
10107fd8:	d9401b17 	ldw	r5,108(sp)
10107fdc:	00c40474 	movhi	r3,4113
10107fe0:	18fe8904 	addi	r3,r3,-1500
10107fe4:	d8c02415 	stw	r3,144(sp)
10107fe8:	29400044 	addi	r5,r5,1
10107fec:	d8c02417 	ldw	r3,144(sp)
10107ff0:	14c5883a 	add	r2,r2,r19
10107ff4:	44c00115 	stw	r19,4(r8)
10107ff8:	40c00015 	stw	r3,0(r8)
10107ffc:	d8801c15 	stw	r2,112(sp)
10108000:	d9401b15 	stw	r5,108(sp)
10108004:	00c001c4 	movi	r3,7
10108008:	1940070e 	bge	r3,r5,10108028 <___vfiprintf_internal_r+0xd24>
1010800c:	103e4826 	beq	r2,zero,10107930 <__alt_data_end+0xfffe7930>
10108010:	d9402117 	ldw	r5,132(sp)
10108014:	d9002017 	ldw	r4,128(sp)
10108018:	d9801a04 	addi	r6,sp,104
1010801c:	01071f00 	call	101071f0 <__sprint_r.part.0>
10108020:	10000c1e 	bne	r2,zero,10108054 <___vfiprintf_internal_r+0xd50>
10108024:	d8801c17 	ldw	r2,112(sp)
10108028:	8c80010e 	bge	r17,r18,10108030 <___vfiprintf_internal_r+0xd2c>
1010802c:	9023883a 	mov	r17,r18
10108030:	da802317 	ldw	r10,140(sp)
10108034:	5455883a 	add	r10,r10,r17
10108038:	da802315 	stw	r10,140(sp)
1010803c:	103e4126 	beq	r2,zero,10107944 <__alt_data_end+0xfffe7944>
10108040:	d9402117 	ldw	r5,132(sp)
10108044:	d9002017 	ldw	r4,128(sp)
10108048:	d9801a04 	addi	r6,sp,104
1010804c:	01071f00 	call	101071f0 <__sprint_r.part.0>
10108050:	103e3c26 	beq	r2,zero,10107944 <__alt_data_end+0xfffe7944>
10108054:	dd002117 	ldw	r20,132(sp)
10108058:	a080030b 	ldhu	r2,12(r20)
1010805c:	1080100c 	andi	r2,r2,64
10108060:	1001231e 	bne	r2,zero,101084f0 <___vfiprintf_internal_r+0x11ec>
10108064:	d8802317 	ldw	r2,140(sp)
10108068:	003d7b06 	br	10107658 <__alt_data_end+0xfffe7658>
1010806c:	1000991e 	bne	r2,zero,101082d4 <___vfiprintf_internal_r+0xfd0>
10108070:	00c00044 	movi	r3,1
10108074:	9805883a 	mov	r2,r19
10108078:	dd400015 	stw	r21,0(sp)
1010807c:	dcc00115 	stw	r19,4(sp)
10108080:	dcc01c15 	stw	r19,112(sp)
10108084:	d8c01b15 	stw	r3,108(sp)
10108088:	d811883a 	mov	r8,sp
1010808c:	42000204 	addi	r8,r8,8
10108090:	a2c0010c 	andi	r11,r20,4
10108094:	583fe426 	beq	r11,zero,10108028 <__alt_data_end+0xfffe8028>
10108098:	8ca7c83a 	sub	r19,r17,r18
1010809c:	04ffe20e 	bge	zero,r19,10108028 <__alt_data_end+0xfffe8028>
101080a0:	01c00404 	movi	r7,16
101080a4:	3cffcc0e 	bge	r7,r19,10107fd8 <__alt_data_end+0xfffe7fd8>
101080a8:	02840474 	movhi	r10,4113
101080ac:	52be8904 	addi	r10,r10,-1500
101080b0:	d9001b17 	ldw	r4,108(sp)
101080b4:	da802415 	stw	r10,144(sp)
101080b8:	382b883a 	mov	r21,r7
101080bc:	050001c4 	movi	r20,7
101080c0:	df002017 	ldw	fp,128(sp)
101080c4:	00000506 	br	101080dc <___vfiprintf_internal_r+0xdd8>
101080c8:	21400084 	addi	r5,r4,2
101080cc:	42000204 	addi	r8,r8,8
101080d0:	1809883a 	mov	r4,r3
101080d4:	9cfffc04 	addi	r19,r19,-16
101080d8:	acffc40e 	bge	r21,r19,10107fec <__alt_data_end+0xfffe7fec>
101080dc:	10800404 	addi	r2,r2,16
101080e0:	20c00044 	addi	r3,r4,1
101080e4:	45800015 	stw	r22,0(r8)
101080e8:	45400115 	stw	r21,4(r8)
101080ec:	d8801c15 	stw	r2,112(sp)
101080f0:	d8c01b15 	stw	r3,108(sp)
101080f4:	a0fff40e 	bge	r20,r3,101080c8 <__alt_data_end+0xfffe80c8>
101080f8:	1000041e 	bne	r2,zero,1010810c <___vfiprintf_internal_r+0xe08>
101080fc:	01400044 	movi	r5,1
10108100:	0009883a 	mov	r4,zero
10108104:	d811883a 	mov	r8,sp
10108108:	003ff206 	br	101080d4 <__alt_data_end+0xfffe80d4>
1010810c:	d9402117 	ldw	r5,132(sp)
10108110:	d9801a04 	addi	r6,sp,104
10108114:	e009883a 	mov	r4,fp
10108118:	01071f00 	call	101071f0 <__sprint_r.part.0>
1010811c:	103fcd1e 	bne	r2,zero,10108054 <__alt_data_end+0xfffe8054>
10108120:	d9001b17 	ldw	r4,108(sp)
10108124:	d8801c17 	ldw	r2,112(sp)
10108128:	d811883a 	mov	r8,sp
1010812c:	21400044 	addi	r5,r4,1
10108130:	003fe806 	br	101080d4 <__alt_data_end+0xfffe80d4>
10108134:	d9402117 	ldw	r5,132(sp)
10108138:	d9002017 	ldw	r4,128(sp)
1010813c:	d9801a04 	addi	r6,sp,104
10108140:	d9c02b15 	stw	r7,172(sp)
10108144:	db402a15 	stw	r13,168(sp)
10108148:	01071f00 	call	101071f0 <__sprint_r.part.0>
1010814c:	d9c02b17 	ldw	r7,172(sp)
10108150:	db402a17 	ldw	r13,168(sp)
10108154:	103fbf1e 	bne	r2,zero,10108054 <__alt_data_end+0xfffe8054>
10108158:	d9401b17 	ldw	r5,108(sp)
1010815c:	d8801c17 	ldw	r2,112(sp)
10108160:	d811883a 	mov	r8,sp
10108164:	29800044 	addi	r6,r5,1
10108168:	003dc406 	br	1010787c <__alt_data_end+0xfffe787c>
1010816c:	1000d21e 	bne	r2,zero,101084b8 <___vfiprintf_internal_r+0x11b4>
10108170:	d8c01d87 	ldb	r3,118(sp)
10108174:	18009526 	beq	r3,zero,101083cc <___vfiprintf_internal_r+0x10c8>
10108178:	00800044 	movi	r2,1
1010817c:	d8c01d84 	addi	r3,sp,118
10108180:	1009883a 	mov	r4,r2
10108184:	d8c00015 	stw	r3,0(sp)
10108188:	d8800115 	stw	r2,4(sp)
1010818c:	d811883a 	mov	r8,sp
10108190:	200b883a 	mov	r5,r4
10108194:	42000204 	addi	r8,r8,8
10108198:	21000044 	addi	r4,r4,1
1010819c:	003d9706 	br	101077fc <__alt_data_end+0xfffe77fc>
101081a0:	d9001d04 	addi	r4,sp,116
101081a4:	00800084 	movi	r2,2
101081a8:	d9000015 	stw	r4,0(sp)
101081ac:	d8800115 	stw	r2,4(sp)
101081b0:	1809883a 	mov	r4,r3
101081b4:	d811883a 	mov	r8,sp
101081b8:	200b883a 	mov	r5,r4
101081bc:	42000204 	addi	r8,r8,8
101081c0:	21000044 	addi	r4,r4,1
101081c4:	003f4e06 	br	10107f00 <__alt_data_end+0xfffe7f00>
101081c8:	d8001d85 	stb	zero,118(sp)
101081cc:	48005016 	blt	r9,zero,10108310 <___vfiprintf_internal_r+0x100c>
101081d0:	00ffdfc4 	movi	r3,-129
101081d4:	94c4b03a 	or	r2,r18,r19
101081d8:	a0e8703a 	and	r20,r20,r3
101081dc:	103d4426 	beq	r2,zero,101076f0 <__alt_data_end+0xfffe76f0>
101081e0:	0039883a 	mov	fp,zero
101081e4:	d9002617 	ldw	r4,152(sp)
101081e8:	dd401a04 	addi	r21,sp,104
101081ec:	908003cc 	andi	r2,r18,15
101081f0:	9806973a 	slli	r3,r19,28
101081f4:	2085883a 	add	r2,r4,r2
101081f8:	9024d13a 	srli	r18,r18,4
101081fc:	10800003 	ldbu	r2,0(r2)
10108200:	9826d13a 	srli	r19,r19,4
10108204:	ad7fffc4 	addi	r21,r21,-1
10108208:	1ca4b03a 	or	r18,r3,r18
1010820c:	a8800005 	stb	r2,0(r21)
10108210:	94c4b03a 	or	r2,r18,r19
10108214:	103ff51e 	bne	r2,zero,101081ec <__alt_data_end+0xfffe81ec>
10108218:	003e5906 	br	10107b80 <__alt_data_end+0xfffe7b80>
1010821c:	d9402117 	ldw	r5,132(sp)
10108220:	d9002017 	ldw	r4,128(sp)
10108224:	d9801a04 	addi	r6,sp,104
10108228:	01071f00 	call	101071f0 <__sprint_r.part.0>
1010822c:	103f891e 	bne	r2,zero,10108054 <__alt_data_end+0xfffe8054>
10108230:	d8801c17 	ldw	r2,112(sp)
10108234:	d811883a 	mov	r8,sp
10108238:	003f9506 	br	10108090 <__alt_data_end+0xfffe8090>
1010823c:	d9402117 	ldw	r5,132(sp)
10108240:	d9002017 	ldw	r4,128(sp)
10108244:	d9801a04 	addi	r6,sp,104
10108248:	01071f00 	call	101071f0 <__sprint_r.part.0>
1010824c:	103f811e 	bne	r2,zero,10108054 <__alt_data_end+0xfffe8054>
10108250:	d811883a 	mov	r8,sp
10108254:	003ced06 	br	1010760c <__alt_data_end+0xfffe760c>
10108258:	d9402117 	ldw	r5,132(sp)
1010825c:	d9002017 	ldw	r4,128(sp)
10108260:	d9801a04 	addi	r6,sp,104
10108264:	da402c15 	stw	r9,176(sp)
10108268:	db802a15 	stw	r14,168(sp)
1010826c:	01071f00 	call	101071f0 <__sprint_r.part.0>
10108270:	da402c17 	ldw	r9,176(sp)
10108274:	db802a17 	ldw	r14,168(sp)
10108278:	103f761e 	bne	r2,zero,10108054 <__alt_data_end+0xfffe8054>
1010827c:	d9401b17 	ldw	r5,108(sp)
10108280:	d8801c17 	ldw	r2,112(sp)
10108284:	d811883a 	mov	r8,sp
10108288:	29000044 	addi	r4,r5,1
1010828c:	003d5b06 	br	101077fc <__alt_data_end+0xfffe77fc>
10108290:	d9402117 	ldw	r5,132(sp)
10108294:	d9002017 	ldw	r4,128(sp)
10108298:	d9801a04 	addi	r6,sp,104
1010829c:	da402c15 	stw	r9,176(sp)
101082a0:	01071f00 	call	101071f0 <__sprint_r.part.0>
101082a4:	da402c17 	ldw	r9,176(sp)
101082a8:	103f6a1e 	bne	r2,zero,10108054 <__alt_data_end+0xfffe8054>
101082ac:	d9401b17 	ldw	r5,108(sp)
101082b0:	d8801c17 	ldw	r2,112(sp)
101082b4:	d811883a 	mov	r8,sp
101082b8:	29000044 	addi	r4,r5,1
101082bc:	003f1006 	br	10107f00 <__alt_data_end+0xfffe7f00>
101082c0:	1000c31e 	bne	r2,zero,101085d0 <___vfiprintf_internal_r+0x12cc>
101082c4:	01000044 	movi	r4,1
101082c8:	000b883a 	mov	r5,zero
101082cc:	d811883a 	mov	r8,sp
101082d0:	003f0d06 	br	10107f08 <__alt_data_end+0xfffe7f08>
101082d4:	d9402117 	ldw	r5,132(sp)
101082d8:	d9002017 	ldw	r4,128(sp)
101082dc:	d9801a04 	addi	r6,sp,104
101082e0:	01071f00 	call	101071f0 <__sprint_r.part.0>
101082e4:	103f5b1e 	bne	r2,zero,10108054 <__alt_data_end+0xfffe8054>
101082e8:	d9001b17 	ldw	r4,108(sp)
101082ec:	d8801c17 	ldw	r2,112(sp)
101082f0:	d811883a 	mov	r8,sp
101082f4:	21000044 	addi	r4,r4,1
101082f8:	003d8006 	br	101078fc <__alt_data_end+0xfffe78fc>
101082fc:	01040474 	movhi	r4,4113
10108300:	213e2504 	addi	r4,r4,-1900
10108304:	d9002615 	stw	r4,152(sp)
10108308:	d8c02215 	stw	r3,136(sp)
1010830c:	1029883a 	mov	r20,r2
10108310:	94c4b03a 	or	r2,r18,r19
10108314:	103fb21e 	bne	r2,zero,101081e0 <__alt_data_end+0xfffe81e0>
10108318:	0039883a 	mov	fp,zero
1010831c:	00800084 	movi	r2,2
10108320:	003e6b06 	br	10107cd0 <__alt_data_end+0xfffe7cd0>
10108324:	da802217 	ldw	r10,136(sp)
10108328:	d8001d85 	stb	zero,118(sp)
1010832c:	0027883a 	mov	r19,zero
10108330:	50800104 	addi	r2,r10,4
10108334:	54800017 	ldw	r18,0(r10)
10108338:	483e6016 	blt	r9,zero,10107cbc <__alt_data_end+0xfffe7cbc>
1010833c:	00ffdfc4 	movi	r3,-129
10108340:	d8802215 	stw	r2,136(sp)
10108344:	a0e8703a 	and	r20,r20,r3
10108348:	0039883a 	mov	fp,zero
1010834c:	903ebb26 	beq	r18,zero,10107e3c <__alt_data_end+0xfffe7e3c>
10108350:	00800244 	movi	r2,9
10108354:	14bdee36 	bltu	r2,r18,10107b10 <__alt_data_end+0xfffe7b10>
10108358:	003eba06 	br	10107e44 <__alt_data_end+0xfffe7e44>
1010835c:	00800c04 	movi	r2,48
10108360:	d8c01d45 	stb	r3,117(sp)
10108364:	d8801d05 	stb	r2,116(sp)
10108368:	d8001d85 	stb	zero,118(sp)
1010836c:	a0c00094 	ori	r3,r20,2
10108370:	4800a916 	blt	r9,zero,10108618 <___vfiprintf_internal_r+0x1314>
10108374:	00bfdfc4 	movi	r2,-129
10108378:	a096703a 	and	r11,r20,r2
1010837c:	5d000094 	ori	r20,r11,2
10108380:	0039883a 	mov	fp,zero
10108384:	003f9706 	br	101081e4 <__alt_data_end+0xfffe81e4>
10108388:	8025883a 	mov	r18,r16
1010838c:	003c2e06 	br	10107448 <__alt_data_end+0xfffe7448>
10108390:	00840474 	movhi	r2,4113
10108394:	10be2504 	addi	r2,r2,-1900
10108398:	0039883a 	mov	fp,zero
1010839c:	d8802615 	stw	r2,152(sp)
101083a0:	003f9006 	br	101081e4 <__alt_data_end+0xfffe81e4>
101083a4:	04a5c83a 	sub	r18,zero,r18
101083a8:	07000b44 	movi	fp,45
101083ac:	9004c03a 	cmpne	r2,r18,zero
101083b0:	04e7c83a 	sub	r19,zero,r19
101083b4:	df001d85 	stb	fp,118(sp)
101083b8:	98a7c83a 	sub	r19,r19,r2
101083bc:	48009f16 	blt	r9,zero,1010863c <___vfiprintf_internal_r+0x1338>
101083c0:	00bfdfc4 	movi	r2,-129
101083c4:	a0a8703a 	and	r20,r20,r2
101083c8:	003dd006 	br	10107b0c <__alt_data_end+0xfffe7b0c>
101083cc:	70004c26 	beq	r14,zero,10108500 <___vfiprintf_internal_r+0x11fc>
101083d0:	00800084 	movi	r2,2
101083d4:	d8c01d04 	addi	r3,sp,116
101083d8:	d8c00015 	stw	r3,0(sp)
101083dc:	d8800115 	stw	r2,4(sp)
101083e0:	01000044 	movi	r4,1
101083e4:	d811883a 	mov	r8,sp
101083e8:	003f7306 	br	101081b8 <__alt_data_end+0xfffe81b8>
101083ec:	a080100c 	andi	r2,r20,64
101083f0:	da802217 	ldw	r10,136(sp)
101083f4:	103e0626 	beq	r2,zero,10107c10 <__alt_data_end+0xfffe7c10>
101083f8:	5480000f 	ldh	r18,0(r10)
101083fc:	52800104 	addi	r10,r10,4
10108400:	da802215 	stw	r10,136(sp)
10108404:	9027d7fa 	srai	r19,r18,31
10108408:	9805883a 	mov	r2,r19
1010840c:	003db806 	br	10107af0 <__alt_data_end+0xfffe7af0>
10108410:	a080040c 	andi	r2,r20,16
10108414:	1000091e 	bne	r2,zero,1010843c <___vfiprintf_internal_r+0x1138>
10108418:	a2c0100c 	andi	r11,r20,64
1010841c:	58000726 	beq	r11,zero,1010843c <___vfiprintf_internal_r+0x1138>
10108420:	da802217 	ldw	r10,136(sp)
10108424:	50800017 	ldw	r2,0(r10)
10108428:	52800104 	addi	r10,r10,4
1010842c:	da802215 	stw	r10,136(sp)
10108430:	da802317 	ldw	r10,140(sp)
10108434:	1280000d 	sth	r10,0(r2)
10108438:	003be706 	br	101073d8 <__alt_data_end+0xfffe73d8>
1010843c:	da802217 	ldw	r10,136(sp)
10108440:	50800017 	ldw	r2,0(r10)
10108444:	52800104 	addi	r10,r10,4
10108448:	da802215 	stw	r10,136(sp)
1010844c:	da802317 	ldw	r10,140(sp)
10108450:	12800015 	stw	r10,0(r2)
10108454:	003be006 	br	101073d8 <__alt_data_end+0xfffe73d8>
10108458:	a080100c 	andi	r2,r20,64
1010845c:	da802217 	ldw	r10,136(sp)
10108460:	10003026 	beq	r2,zero,10108524 <___vfiprintf_internal_r+0x1220>
10108464:	5480000b 	ldhu	r18,0(r10)
10108468:	52800104 	addi	r10,r10,4
1010846c:	0027883a 	mov	r19,zero
10108470:	da802215 	stw	r10,136(sp)
10108474:	003d8006 	br	10107a78 <__alt_data_end+0xfffe7a78>
10108478:	80c00007 	ldb	r3,0(r16)
1010847c:	003c0006 	br	10107480 <__alt_data_end+0xfffe7480>
10108480:	a080100c 	andi	r2,r20,64
10108484:	d8001d85 	stb	zero,118(sp)
10108488:	da802217 	ldw	r10,136(sp)
1010848c:	1000201e 	bne	r2,zero,10108510 <___vfiprintf_internal_r+0x120c>
10108490:	50800104 	addi	r2,r10,4
10108494:	54800017 	ldw	r18,0(r10)
10108498:	0027883a 	mov	r19,zero
1010849c:	483def0e 	bge	r9,zero,10107c5c <__alt_data_end+0xfffe7c5c>
101084a0:	94c6b03a 	or	r3,r18,r19
101084a4:	d8802215 	stw	r2,136(sp)
101084a8:	183d4e1e 	bne	r3,zero,101079e4 <__alt_data_end+0xfffe79e4>
101084ac:	0039883a 	mov	fp,zero
101084b0:	0005883a 	mov	r2,zero
101084b4:	003e0606 	br	10107cd0 <__alt_data_end+0xfffe7cd0>
101084b8:	d9402117 	ldw	r5,132(sp)
101084bc:	d9002017 	ldw	r4,128(sp)
101084c0:	d9801a04 	addi	r6,sp,104
101084c4:	da402c15 	stw	r9,176(sp)
101084c8:	db802a15 	stw	r14,168(sp)
101084cc:	01071f00 	call	101071f0 <__sprint_r.part.0>
101084d0:	da402c17 	ldw	r9,176(sp)
101084d4:	db802a17 	ldw	r14,168(sp)
101084d8:	103ede1e 	bne	r2,zero,10108054 <__alt_data_end+0xfffe8054>
101084dc:	d9401b17 	ldw	r5,108(sp)
101084e0:	d8801c17 	ldw	r2,112(sp)
101084e4:	d811883a 	mov	r8,sp
101084e8:	29000044 	addi	r4,r5,1
101084ec:	003e7406 	br	10107ec0 <__alt_data_end+0xfffe7ec0>
101084f0:	00bfffc4 	movi	r2,-1
101084f4:	003c5806 	br	10107658 <__alt_data_end+0xfffe7658>
101084f8:	d811883a 	mov	r8,sp
101084fc:	003ee806 	br	101080a0 <__alt_data_end+0xfffe80a0>
10108500:	000b883a 	mov	r5,zero
10108504:	01000044 	movi	r4,1
10108508:	d811883a 	mov	r8,sp
1010850c:	003e7c06 	br	10107f00 <__alt_data_end+0xfffe7f00>
10108510:	50800104 	addi	r2,r10,4
10108514:	5480000b 	ldhu	r18,0(r10)
10108518:	0027883a 	mov	r19,zero
1010851c:	483dcf0e 	bge	r9,zero,10107c5c <__alt_data_end+0xfffe7c5c>
10108520:	003fdf06 	br	101084a0 <__alt_data_end+0xfffe84a0>
10108524:	54800017 	ldw	r18,0(r10)
10108528:	52800104 	addi	r10,r10,4
1010852c:	0027883a 	mov	r19,zero
10108530:	da802215 	stw	r10,136(sp)
10108534:	003d5006 	br	10107a78 <__alt_data_end+0xfffe7a78>
10108538:	50800104 	addi	r2,r10,4
1010853c:	5480000b 	ldhu	r18,0(r10)
10108540:	0027883a 	mov	r19,zero
10108544:	483f7d0e 	bge	r9,zero,1010833c <__alt_data_end+0xfffe833c>
10108548:	003ddc06 	br	10107cbc <__alt_data_end+0xfffe7cbc>
1010854c:	d8c02215 	stw	r3,136(sp)
10108550:	0039883a 	mov	fp,zero
10108554:	003ddb06 	br	10107cc4 <__alt_data_end+0xfffe7cc4>
10108558:	02840474 	movhi	r10,4113
1010855c:	52be8504 	addi	r10,r10,-1516
10108560:	da802415 	stw	r10,144(sp)
10108564:	003e8306 	br	10107f74 <__alt_data_end+0xfffe7f74>
10108568:	d8801c17 	ldw	r2,112(sp)
1010856c:	dd002117 	ldw	r20,132(sp)
10108570:	103eb926 	beq	r2,zero,10108058 <__alt_data_end+0xfffe8058>
10108574:	d9002017 	ldw	r4,128(sp)
10108578:	d9801a04 	addi	r6,sp,104
1010857c:	a00b883a 	mov	r5,r20
10108580:	01071f00 	call	101071f0 <__sprint_r.part.0>
10108584:	003eb406 	br	10108058 <__alt_data_end+0xfffe8058>
10108588:	80c00043 	ldbu	r3,1(r16)
1010858c:	a5000814 	ori	r20,r20,32
10108590:	84000044 	addi	r16,r16,1
10108594:	18c03fcc 	andi	r3,r3,255
10108598:	18c0201c 	xori	r3,r3,128
1010859c:	18ffe004 	addi	r3,r3,-128
101085a0:	003bb706 	br	10107480 <__alt_data_end+0xfffe7480>
101085a4:	a809883a 	mov	r4,r21
101085a8:	d8c02a15 	stw	r3,168(sp)
101085ac:	da002b15 	stw	r8,172(sp)
101085b0:	01071580 	call	10107158 <strlen>
101085b4:	d8c02a17 	ldw	r3,168(sp)
101085b8:	1027883a 	mov	r19,r2
101085bc:	df001d83 	ldbu	fp,118(sp)
101085c0:	d8c02215 	stw	r3,136(sp)
101085c4:	0013883a 	mov	r9,zero
101085c8:	da002b17 	ldw	r8,172(sp)
101085cc:	003c4d06 	br	10107704 <__alt_data_end+0xfffe7704>
101085d0:	d9402117 	ldw	r5,132(sp)
101085d4:	d9002017 	ldw	r4,128(sp)
101085d8:	d9801a04 	addi	r6,sp,104
101085dc:	da402c15 	stw	r9,176(sp)
101085e0:	01071f00 	call	101071f0 <__sprint_r.part.0>
101085e4:	da402c17 	ldw	r9,176(sp)
101085e8:	103e9a1e 	bne	r2,zero,10108054 <__alt_data_end+0xfffe8054>
101085ec:	d9401b17 	ldw	r5,108(sp)
101085f0:	d8801c17 	ldw	r2,112(sp)
101085f4:	d811883a 	mov	r8,sp
101085f8:	29000044 	addi	r4,r5,1
101085fc:	003e4206 	br	10107f08 <__alt_data_end+0xfffe7f08>
10108600:	d9401b17 	ldw	r5,108(sp)
10108604:	01040474 	movhi	r4,4113
10108608:	213e8904 	addi	r4,r4,-1500
1010860c:	d9002415 	stw	r4,144(sp)
10108610:	29400044 	addi	r5,r5,1
10108614:	003c6d06 	br	101077cc <__alt_data_end+0xfffe77cc>
10108618:	0039883a 	mov	fp,zero
1010861c:	00800084 	movi	r2,2
10108620:	10803fcc 	andi	r2,r2,255
10108624:	01000044 	movi	r4,1
10108628:	11001e26 	beq	r2,r4,101086a4 <___vfiprintf_internal_r+0x13a0>
1010862c:	01000084 	movi	r4,2
10108630:	11001e1e 	bne	r2,r4,101086ac <___vfiprintf_internal_r+0x13a8>
10108634:	1829883a 	mov	r20,r3
10108638:	003eea06 	br	101081e4 <__alt_data_end+0xfffe81e4>
1010863c:	a007883a 	mov	r3,r20
10108640:	00800044 	movi	r2,1
10108644:	003ff606 	br	10108620 <__alt_data_end+0xfffe8620>
10108648:	00800184 	movi	r2,6
1010864c:	1240012e 	bgeu	r2,r9,10108654 <___vfiprintf_internal_r+0x1350>
10108650:	1013883a 	mov	r9,r2
10108654:	4827883a 	mov	r19,r9
10108658:	4825883a 	mov	r18,r9
1010865c:	48001516 	blt	r9,zero,101086b4 <___vfiprintf_internal_r+0x13b0>
10108660:	05440474 	movhi	r21,4113
10108664:	d8c02215 	stw	r3,136(sp)
10108668:	ad7e2a04 	addi	r21,r21,-1880
1010866c:	003d1406 	br	10107ac0 <__alt_data_end+0xfffe7ac0>
10108670:	02840474 	movhi	r10,4113
10108674:	52be8504 	addi	r10,r10,-1516
10108678:	da802415 	stw	r10,144(sp)
1010867c:	200d883a 	mov	r6,r4
10108680:	003c9106 	br	101078c8 <__alt_data_end+0xfffe78c8>
10108684:	5021883a 	mov	r16,r10
10108688:	0013883a 	mov	r9,zero
1010868c:	003b7d06 	br	10107484 <__alt_data_end+0xfffe7484>
10108690:	4827883a 	mov	r19,r9
10108694:	df001d83 	ldbu	fp,118(sp)
10108698:	d8c02215 	stw	r3,136(sp)
1010869c:	0013883a 	mov	r9,zero
101086a0:	003c1806 	br	10107704 <__alt_data_end+0xfffe7704>
101086a4:	1829883a 	mov	r20,r3
101086a8:	003d1806 	br	10107b0c <__alt_data_end+0xfffe7b0c>
101086ac:	1829883a 	mov	r20,r3
101086b0:	003ccd06 	br	101079e8 <__alt_data_end+0xfffe79e8>
101086b4:	0025883a 	mov	r18,zero
101086b8:	003fe906 	br	10108660 <__alt_data_end+0xfffe8660>
101086bc:	d8802217 	ldw	r2,136(sp)
101086c0:	80c00043 	ldbu	r3,1(r16)
101086c4:	5021883a 	mov	r16,r10
101086c8:	12400017 	ldw	r9,0(r2)
101086cc:	10800104 	addi	r2,r2,4
101086d0:	d8802215 	stw	r2,136(sp)
101086d4:	483faf0e 	bge	r9,zero,10108594 <__alt_data_end+0xfffe8594>
101086d8:	18c03fcc 	andi	r3,r3,255
101086dc:	18c0201c 	xori	r3,r3,128
101086e0:	027fffc4 	movi	r9,-1
101086e4:	18ffe004 	addi	r3,r3,-128
101086e8:	003b6506 	br	10107480 <__alt_data_end+0xfffe7480>
101086ec:	d9c01d85 	stb	r7,118(sp)
101086f0:	003ca006 	br	10107974 <__alt_data_end+0xfffe7974>
101086f4:	d9c01d85 	stb	r7,118(sp)
101086f8:	003cad06 	br	101079b0 <__alt_data_end+0xfffe79b0>
101086fc:	d9c01d85 	stb	r7,118(sp)
10108700:	003d7d06 	br	10107cf8 <__alt_data_end+0xfffe7cf8>
10108704:	d9c01d85 	stb	r7,118(sp)
10108708:	003d5f06 	br	10107c88 <__alt_data_end+0xfffe7c88>
1010870c:	a080004c 	andi	r2,r20,1
10108710:	0039883a 	mov	fp,zero
10108714:	10000526 	beq	r2,zero,1010872c <___vfiprintf_internal_r+0x1428>
10108718:	00800c04 	movi	r2,48
1010871c:	d88019c5 	stb	r2,103(sp)
10108720:	dcc02717 	ldw	r19,156(sp)
10108724:	dd4019c4 	addi	r21,sp,103
10108728:	003bf606 	br	10107704 <__alt_data_end+0xfffe7704>
1010872c:	0027883a 	mov	r19,zero
10108730:	dd401a04 	addi	r21,sp,104
10108734:	003bf306 	br	10107704 <__alt_data_end+0xfffe7704>
10108738:	d9c01d85 	stb	r7,118(sp)
1010873c:	003dc806 	br	10107e60 <__alt_data_end+0xfffe7e60>
10108740:	d9c01d85 	stb	r7,118(sp)
10108744:	003d3a06 	br	10107c30 <__alt_data_end+0xfffe7c30>
10108748:	d9c01d85 	stb	r7,118(sp)
1010874c:	003d2a06 	br	10107bf8 <__alt_data_end+0xfffe7bf8>
10108750:	d9c01d85 	stb	r7,118(sp)
10108754:	003cde06 	br	10107ad0 <__alt_data_end+0xfffe7ad0>
10108758:	d9c01d85 	stb	r7,118(sp)
1010875c:	003cbc06 	br	10107a50 <__alt_data_end+0xfffe7a50>

10108760 <__vfiprintf_internal>:
10108760:	00840474 	movhi	r2,4113
10108764:	10858804 	addi	r2,r2,5664
10108768:	300f883a 	mov	r7,r6
1010876c:	280d883a 	mov	r6,r5
10108770:	200b883a 	mov	r5,r4
10108774:	11000017 	ldw	r4,0(r2)
10108778:	01073041 	jmpi	10107304 <___vfiprintf_internal_r>

1010877c <__sbprintf>:
1010877c:	2880030b 	ldhu	r2,12(r5)
10108780:	2ac01917 	ldw	r11,100(r5)
10108784:	2a80038b 	ldhu	r10,14(r5)
10108788:	2a400717 	ldw	r9,28(r5)
1010878c:	2a000917 	ldw	r8,36(r5)
10108790:	defee204 	addi	sp,sp,-1144
10108794:	00c10004 	movi	r3,1024
10108798:	dc011a15 	stw	r16,1128(sp)
1010879c:	10bfff4c 	andi	r2,r2,65533
101087a0:	2821883a 	mov	r16,r5
101087a4:	d8cb883a 	add	r5,sp,r3
101087a8:	dc811c15 	stw	r18,1136(sp)
101087ac:	dc411b15 	stw	r17,1132(sp)
101087b0:	dfc11d15 	stw	ra,1140(sp)
101087b4:	2025883a 	mov	r18,r4
101087b8:	d881030d 	sth	r2,1036(sp)
101087bc:	dac11915 	stw	r11,1124(sp)
101087c0:	da81038d 	sth	r10,1038(sp)
101087c4:	da410715 	stw	r9,1052(sp)
101087c8:	da010915 	stw	r8,1060(sp)
101087cc:	dec10015 	stw	sp,1024(sp)
101087d0:	dec10415 	stw	sp,1040(sp)
101087d4:	d8c10215 	stw	r3,1032(sp)
101087d8:	d8c10515 	stw	r3,1044(sp)
101087dc:	d8010615 	stw	zero,1048(sp)
101087e0:	01073040 	call	10107304 <___vfiprintf_internal_r>
101087e4:	1023883a 	mov	r17,r2
101087e8:	10000416 	blt	r2,zero,101087fc <__sbprintf+0x80>
101087ec:	d9410004 	addi	r5,sp,1024
101087f0:	9009883a 	mov	r4,r18
101087f4:	01043980 	call	10104398 <_fflush_r>
101087f8:	10000d1e 	bne	r2,zero,10108830 <__sbprintf+0xb4>
101087fc:	d881030b 	ldhu	r2,1036(sp)
10108800:	1080100c 	andi	r2,r2,64
10108804:	10000326 	beq	r2,zero,10108814 <__sbprintf+0x98>
10108808:	8080030b 	ldhu	r2,12(r16)
1010880c:	10801014 	ori	r2,r2,64
10108810:	8080030d 	sth	r2,12(r16)
10108814:	8805883a 	mov	r2,r17
10108818:	dfc11d17 	ldw	ra,1140(sp)
1010881c:	dc811c17 	ldw	r18,1136(sp)
10108820:	dc411b17 	ldw	r17,1132(sp)
10108824:	dc011a17 	ldw	r16,1128(sp)
10108828:	dec11e04 	addi	sp,sp,1144
1010882c:	f800283a 	ret
10108830:	047fffc4 	movi	r17,-1
10108834:	003ff106 	br	101087fc <__alt_data_end+0xfffe87fc>

10108838 <_write_r>:
10108838:	defffd04 	addi	sp,sp,-12
1010883c:	2805883a 	mov	r2,r5
10108840:	dc000015 	stw	r16,0(sp)
10108844:	04040474 	movhi	r16,4113
10108848:	dc400115 	stw	r17,4(sp)
1010884c:	300b883a 	mov	r5,r6
10108850:	840c5a04 	addi	r16,r16,12648
10108854:	2023883a 	mov	r17,r4
10108858:	380d883a 	mov	r6,r7
1010885c:	1009883a 	mov	r4,r2
10108860:	dfc00215 	stw	ra,8(sp)
10108864:	80000015 	stw	zero,0(r16)
10108868:	010d9c00 	call	1010d9c0 <write>
1010886c:	00ffffc4 	movi	r3,-1
10108870:	10c00526 	beq	r2,r3,10108888 <_write_r+0x50>
10108874:	dfc00217 	ldw	ra,8(sp)
10108878:	dc400117 	ldw	r17,4(sp)
1010887c:	dc000017 	ldw	r16,0(sp)
10108880:	dec00304 	addi	sp,sp,12
10108884:	f800283a 	ret
10108888:	80c00017 	ldw	r3,0(r16)
1010888c:	183ff926 	beq	r3,zero,10108874 <__alt_data_end+0xfffe8874>
10108890:	88c00015 	stw	r3,0(r17)
10108894:	003ff706 	br	10108874 <__alt_data_end+0xfffe8874>

10108898 <_close_r>:
10108898:	defffd04 	addi	sp,sp,-12
1010889c:	dc000015 	stw	r16,0(sp)
101088a0:	04040474 	movhi	r16,4113
101088a4:	dc400115 	stw	r17,4(sp)
101088a8:	840c5a04 	addi	r16,r16,12648
101088ac:	2023883a 	mov	r17,r4
101088b0:	2809883a 	mov	r4,r5
101088b4:	dfc00215 	stw	ra,8(sp)
101088b8:	80000015 	stw	zero,0(r16)
101088bc:	010cff00 	call	1010cff0 <close>
101088c0:	00ffffc4 	movi	r3,-1
101088c4:	10c00526 	beq	r2,r3,101088dc <_close_r+0x44>
101088c8:	dfc00217 	ldw	ra,8(sp)
101088cc:	dc400117 	ldw	r17,4(sp)
101088d0:	dc000017 	ldw	r16,0(sp)
101088d4:	dec00304 	addi	sp,sp,12
101088d8:	f800283a 	ret
101088dc:	80c00017 	ldw	r3,0(r16)
101088e0:	183ff926 	beq	r3,zero,101088c8 <__alt_data_end+0xfffe88c8>
101088e4:	88c00015 	stw	r3,0(r17)
101088e8:	003ff706 	br	101088c8 <__alt_data_end+0xfffe88c8>

101088ec <_calloc_r>:
101088ec:	298b383a 	mul	r5,r5,r6
101088f0:	defffe04 	addi	sp,sp,-8
101088f4:	dfc00115 	stw	ra,4(sp)
101088f8:	dc000015 	stw	r16,0(sp)
101088fc:	01050180 	call	10105018 <_malloc_r>
10108900:	10002926 	beq	r2,zero,101089a8 <_calloc_r+0xbc>
10108904:	11bfff17 	ldw	r6,-4(r2)
10108908:	1021883a 	mov	r16,r2
1010890c:	00bfff04 	movi	r2,-4
10108910:	308c703a 	and	r6,r6,r2
10108914:	00c00904 	movi	r3,36
10108918:	308d883a 	add	r6,r6,r2
1010891c:	19801636 	bltu	r3,r6,10108978 <_calloc_r+0x8c>
10108920:	008004c4 	movi	r2,19
10108924:	11800b2e 	bgeu	r2,r6,10108954 <_calloc_r+0x68>
10108928:	80000015 	stw	zero,0(r16)
1010892c:	80000115 	stw	zero,4(r16)
10108930:	008006c4 	movi	r2,27
10108934:	11801a2e 	bgeu	r2,r6,101089a0 <_calloc_r+0xb4>
10108938:	80000215 	stw	zero,8(r16)
1010893c:	80000315 	stw	zero,12(r16)
10108940:	30c0151e 	bne	r6,r3,10108998 <_calloc_r+0xac>
10108944:	80000415 	stw	zero,16(r16)
10108948:	80800604 	addi	r2,r16,24
1010894c:	80000515 	stw	zero,20(r16)
10108950:	00000106 	br	10108958 <_calloc_r+0x6c>
10108954:	8005883a 	mov	r2,r16
10108958:	10000015 	stw	zero,0(r2)
1010895c:	10000115 	stw	zero,4(r2)
10108960:	10000215 	stw	zero,8(r2)
10108964:	8005883a 	mov	r2,r16
10108968:	dfc00117 	ldw	ra,4(sp)
1010896c:	dc000017 	ldw	r16,0(sp)
10108970:	dec00204 	addi	sp,sp,8
10108974:	f800283a 	ret
10108978:	000b883a 	mov	r5,zero
1010897c:	8009883a 	mov	r4,r16
10108980:	0105a500 	call	10105a50 <memset>
10108984:	8005883a 	mov	r2,r16
10108988:	dfc00117 	ldw	ra,4(sp)
1010898c:	dc000017 	ldw	r16,0(sp)
10108990:	dec00204 	addi	sp,sp,8
10108994:	f800283a 	ret
10108998:	80800404 	addi	r2,r16,16
1010899c:	003fee06 	br	10108958 <__alt_data_end+0xfffe8958>
101089a0:	80800204 	addi	r2,r16,8
101089a4:	003fec06 	br	10108958 <__alt_data_end+0xfffe8958>
101089a8:	0005883a 	mov	r2,zero
101089ac:	003fee06 	br	10108968 <__alt_data_end+0xfffe8968>

101089b0 <_fclose_r>:
101089b0:	28003926 	beq	r5,zero,10108a98 <_fclose_r+0xe8>
101089b4:	defffc04 	addi	sp,sp,-16
101089b8:	dc400115 	stw	r17,4(sp)
101089bc:	dc000015 	stw	r16,0(sp)
101089c0:	dfc00315 	stw	ra,12(sp)
101089c4:	dc800215 	stw	r18,8(sp)
101089c8:	2023883a 	mov	r17,r4
101089cc:	2821883a 	mov	r16,r5
101089d0:	20000226 	beq	r4,zero,101089dc <_fclose_r+0x2c>
101089d4:	20800e17 	ldw	r2,56(r4)
101089d8:	10002726 	beq	r2,zero,10108a78 <_fclose_r+0xc8>
101089dc:	8080030f 	ldh	r2,12(r16)
101089e0:	1000071e 	bne	r2,zero,10108a00 <_fclose_r+0x50>
101089e4:	0005883a 	mov	r2,zero
101089e8:	dfc00317 	ldw	ra,12(sp)
101089ec:	dc800217 	ldw	r18,8(sp)
101089f0:	dc400117 	ldw	r17,4(sp)
101089f4:	dc000017 	ldw	r16,0(sp)
101089f8:	dec00404 	addi	sp,sp,16
101089fc:	f800283a 	ret
10108a00:	800b883a 	mov	r5,r16
10108a04:	8809883a 	mov	r4,r17
10108a08:	010417c0 	call	1010417c <__sflush_r>
10108a0c:	1025883a 	mov	r18,r2
10108a10:	80800b17 	ldw	r2,44(r16)
10108a14:	10000426 	beq	r2,zero,10108a28 <_fclose_r+0x78>
10108a18:	81400717 	ldw	r5,28(r16)
10108a1c:	8809883a 	mov	r4,r17
10108a20:	103ee83a 	callr	r2
10108a24:	10001616 	blt	r2,zero,10108a80 <_fclose_r+0xd0>
10108a28:	8080030b 	ldhu	r2,12(r16)
10108a2c:	1080200c 	andi	r2,r2,128
10108a30:	1000151e 	bne	r2,zero,10108a88 <_fclose_r+0xd8>
10108a34:	81400c17 	ldw	r5,48(r16)
10108a38:	28000526 	beq	r5,zero,10108a50 <_fclose_r+0xa0>
10108a3c:	80801004 	addi	r2,r16,64
10108a40:	28800226 	beq	r5,r2,10108a4c <_fclose_r+0x9c>
10108a44:	8809883a 	mov	r4,r17
10108a48:	01048e80 	call	101048e8 <_free_r>
10108a4c:	80000c15 	stw	zero,48(r16)
10108a50:	81401117 	ldw	r5,68(r16)
10108a54:	28000326 	beq	r5,zero,10108a64 <_fclose_r+0xb4>
10108a58:	8809883a 	mov	r4,r17
10108a5c:	01048e80 	call	101048e8 <_free_r>
10108a60:	80001115 	stw	zero,68(r16)
10108a64:	01047840 	call	10104784 <__sfp_lock_acquire>
10108a68:	8000030d 	sth	zero,12(r16)
10108a6c:	01047880 	call	10104788 <__sfp_lock_release>
10108a70:	9005883a 	mov	r2,r18
10108a74:	003fdc06 	br	101089e8 <__alt_data_end+0xfffe89e8>
10108a78:	01047740 	call	10104774 <__sinit>
10108a7c:	003fd706 	br	101089dc <__alt_data_end+0xfffe89dc>
10108a80:	04bfffc4 	movi	r18,-1
10108a84:	003fe806 	br	10108a28 <__alt_data_end+0xfffe8a28>
10108a88:	81400417 	ldw	r5,16(r16)
10108a8c:	8809883a 	mov	r4,r17
10108a90:	01048e80 	call	101048e8 <_free_r>
10108a94:	003fe706 	br	10108a34 <__alt_data_end+0xfffe8a34>
10108a98:	0005883a 	mov	r2,zero
10108a9c:	f800283a 	ret

10108aa0 <fclose>:
10108aa0:	00840474 	movhi	r2,4113
10108aa4:	10858804 	addi	r2,r2,5664
10108aa8:	200b883a 	mov	r5,r4
10108aac:	11000017 	ldw	r4,0(r2)
10108ab0:	01089b01 	jmpi	101089b0 <_fclose_r>

10108ab4 <__fputwc>:
10108ab4:	defff804 	addi	sp,sp,-32
10108ab8:	dcc00415 	stw	r19,16(sp)
10108abc:	dc800315 	stw	r18,12(sp)
10108ac0:	dc000115 	stw	r16,4(sp)
10108ac4:	dfc00715 	stw	ra,28(sp)
10108ac8:	dd400615 	stw	r21,24(sp)
10108acc:	dd000515 	stw	r20,20(sp)
10108ad0:	dc400215 	stw	r17,8(sp)
10108ad4:	2027883a 	mov	r19,r4
10108ad8:	2825883a 	mov	r18,r5
10108adc:	3021883a 	mov	r16,r6
10108ae0:	0104e080 	call	10104e08 <__locale_mb_cur_max>
10108ae4:	00c00044 	movi	r3,1
10108ae8:	10c03e26 	beq	r2,r3,10108be4 <__fputwc+0x130>
10108aec:	81c01704 	addi	r7,r16,92
10108af0:	900d883a 	mov	r6,r18
10108af4:	d80b883a 	mov	r5,sp
10108af8:	9809883a 	mov	r4,r19
10108afc:	0109b000 	call	10109b00 <_wcrtomb_r>
10108b00:	1029883a 	mov	r20,r2
10108b04:	00bfffc4 	movi	r2,-1
10108b08:	a0802026 	beq	r20,r2,10108b8c <__fputwc+0xd8>
10108b0c:	d9400003 	ldbu	r5,0(sp)
10108b10:	a0001c26 	beq	r20,zero,10108b84 <__fputwc+0xd0>
10108b14:	0023883a 	mov	r17,zero
10108b18:	05400284 	movi	r21,10
10108b1c:	00000906 	br	10108b44 <__fputwc+0x90>
10108b20:	80800017 	ldw	r2,0(r16)
10108b24:	11400005 	stb	r5,0(r2)
10108b28:	80c00017 	ldw	r3,0(r16)
10108b2c:	18c00044 	addi	r3,r3,1
10108b30:	80c00015 	stw	r3,0(r16)
10108b34:	8c400044 	addi	r17,r17,1
10108b38:	dc45883a 	add	r2,sp,r17
10108b3c:	8d00112e 	bgeu	r17,r20,10108b84 <__fputwc+0xd0>
10108b40:	11400003 	ldbu	r5,0(r2)
10108b44:	80c00217 	ldw	r3,8(r16)
10108b48:	18ffffc4 	addi	r3,r3,-1
10108b4c:	80c00215 	stw	r3,8(r16)
10108b50:	183ff30e 	bge	r3,zero,10108b20 <__alt_data_end+0xfffe8b20>
10108b54:	80800617 	ldw	r2,24(r16)
10108b58:	18801916 	blt	r3,r2,10108bc0 <__fputwc+0x10c>
10108b5c:	80800017 	ldw	r2,0(r16)
10108b60:	11400005 	stb	r5,0(r2)
10108b64:	80800017 	ldw	r2,0(r16)
10108b68:	10c00003 	ldbu	r3,0(r2)
10108b6c:	10800044 	addi	r2,r2,1
10108b70:	1d402326 	beq	r3,r21,10108c00 <__fputwc+0x14c>
10108b74:	80800015 	stw	r2,0(r16)
10108b78:	8c400044 	addi	r17,r17,1
10108b7c:	dc45883a 	add	r2,sp,r17
10108b80:	8d3fef36 	bltu	r17,r20,10108b40 <__alt_data_end+0xfffe8b40>
10108b84:	9005883a 	mov	r2,r18
10108b88:	00000406 	br	10108b9c <__fputwc+0xe8>
10108b8c:	80c0030b 	ldhu	r3,12(r16)
10108b90:	a005883a 	mov	r2,r20
10108b94:	18c01014 	ori	r3,r3,64
10108b98:	80c0030d 	sth	r3,12(r16)
10108b9c:	dfc00717 	ldw	ra,28(sp)
10108ba0:	dd400617 	ldw	r21,24(sp)
10108ba4:	dd000517 	ldw	r20,20(sp)
10108ba8:	dcc00417 	ldw	r19,16(sp)
10108bac:	dc800317 	ldw	r18,12(sp)
10108bb0:	dc400217 	ldw	r17,8(sp)
10108bb4:	dc000117 	ldw	r16,4(sp)
10108bb8:	dec00804 	addi	sp,sp,32
10108bbc:	f800283a 	ret
10108bc0:	800d883a 	mov	r6,r16
10108bc4:	29403fcc 	andi	r5,r5,255
10108bc8:	9809883a 	mov	r4,r19
10108bcc:	01099a80 	call	101099a8 <__swbuf_r>
10108bd0:	10bfffe0 	cmpeqi	r2,r2,-1
10108bd4:	10803fcc 	andi	r2,r2,255
10108bd8:	103fd626 	beq	r2,zero,10108b34 <__alt_data_end+0xfffe8b34>
10108bdc:	00bfffc4 	movi	r2,-1
10108be0:	003fee06 	br	10108b9c <__alt_data_end+0xfffe8b9c>
10108be4:	90ffffc4 	addi	r3,r18,-1
10108be8:	01003f84 	movi	r4,254
10108bec:	20ffbf36 	bltu	r4,r3,10108aec <__alt_data_end+0xfffe8aec>
10108bf0:	900b883a 	mov	r5,r18
10108bf4:	dc800005 	stb	r18,0(sp)
10108bf8:	1029883a 	mov	r20,r2
10108bfc:	003fc506 	br	10108b14 <__alt_data_end+0xfffe8b14>
10108c00:	800d883a 	mov	r6,r16
10108c04:	a80b883a 	mov	r5,r21
10108c08:	9809883a 	mov	r4,r19
10108c0c:	01099a80 	call	101099a8 <__swbuf_r>
10108c10:	10bfffe0 	cmpeqi	r2,r2,-1
10108c14:	003fef06 	br	10108bd4 <__alt_data_end+0xfffe8bd4>

10108c18 <_fputwc_r>:
10108c18:	3080030b 	ldhu	r2,12(r6)
10108c1c:	10c8000c 	andi	r3,r2,8192
10108c20:	1800051e 	bne	r3,zero,10108c38 <_fputwc_r+0x20>
10108c24:	30c01917 	ldw	r3,100(r6)
10108c28:	10880014 	ori	r2,r2,8192
10108c2c:	3080030d 	sth	r2,12(r6)
10108c30:	18880014 	ori	r2,r3,8192
10108c34:	30801915 	stw	r2,100(r6)
10108c38:	0108ab41 	jmpi	10108ab4 <__fputwc>

10108c3c <fputwc>:
10108c3c:	00840474 	movhi	r2,4113
10108c40:	defffc04 	addi	sp,sp,-16
10108c44:	10858804 	addi	r2,r2,5664
10108c48:	dc000115 	stw	r16,4(sp)
10108c4c:	14000017 	ldw	r16,0(r2)
10108c50:	dc400215 	stw	r17,8(sp)
10108c54:	dfc00315 	stw	ra,12(sp)
10108c58:	2023883a 	mov	r17,r4
10108c5c:	80000226 	beq	r16,zero,10108c68 <fputwc+0x2c>
10108c60:	80800e17 	ldw	r2,56(r16)
10108c64:	10001026 	beq	r2,zero,10108ca8 <fputwc+0x6c>
10108c68:	2880030b 	ldhu	r2,12(r5)
10108c6c:	10c8000c 	andi	r3,r2,8192
10108c70:	1800051e 	bne	r3,zero,10108c88 <fputwc+0x4c>
10108c74:	28c01917 	ldw	r3,100(r5)
10108c78:	10880014 	ori	r2,r2,8192
10108c7c:	2880030d 	sth	r2,12(r5)
10108c80:	18880014 	ori	r2,r3,8192
10108c84:	28801915 	stw	r2,100(r5)
10108c88:	280d883a 	mov	r6,r5
10108c8c:	8009883a 	mov	r4,r16
10108c90:	880b883a 	mov	r5,r17
10108c94:	dfc00317 	ldw	ra,12(sp)
10108c98:	dc400217 	ldw	r17,8(sp)
10108c9c:	dc000117 	ldw	r16,4(sp)
10108ca0:	dec00404 	addi	sp,sp,16
10108ca4:	0108ab41 	jmpi	10108ab4 <__fputwc>
10108ca8:	8009883a 	mov	r4,r16
10108cac:	d9400015 	stw	r5,0(sp)
10108cb0:	01047740 	call	10104774 <__sinit>
10108cb4:	d9400017 	ldw	r5,0(sp)
10108cb8:	003feb06 	br	10108c68 <__alt_data_end+0xfffe8c68>

10108cbc <_fstat_r>:
10108cbc:	defffd04 	addi	sp,sp,-12
10108cc0:	2805883a 	mov	r2,r5
10108cc4:	dc000015 	stw	r16,0(sp)
10108cc8:	04040474 	movhi	r16,4113
10108ccc:	dc400115 	stw	r17,4(sp)
10108cd0:	840c5a04 	addi	r16,r16,12648
10108cd4:	2023883a 	mov	r17,r4
10108cd8:	300b883a 	mov	r5,r6
10108cdc:	1009883a 	mov	r4,r2
10108ce0:	dfc00215 	stw	ra,8(sp)
10108ce4:	80000015 	stw	zero,0(r16)
10108ce8:	010d15c0 	call	1010d15c <fstat>
10108cec:	00ffffc4 	movi	r3,-1
10108cf0:	10c00526 	beq	r2,r3,10108d08 <_fstat_r+0x4c>
10108cf4:	dfc00217 	ldw	ra,8(sp)
10108cf8:	dc400117 	ldw	r17,4(sp)
10108cfc:	dc000017 	ldw	r16,0(sp)
10108d00:	dec00304 	addi	sp,sp,12
10108d04:	f800283a 	ret
10108d08:	80c00017 	ldw	r3,0(r16)
10108d0c:	183ff926 	beq	r3,zero,10108cf4 <__alt_data_end+0xfffe8cf4>
10108d10:	88c00015 	stw	r3,0(r17)
10108d14:	003ff706 	br	10108cf4 <__alt_data_end+0xfffe8cf4>

10108d18 <__sfvwrite_r>:
10108d18:	30800217 	ldw	r2,8(r6)
10108d1c:	10006726 	beq	r2,zero,10108ebc <__sfvwrite_r+0x1a4>
10108d20:	28c0030b 	ldhu	r3,12(r5)
10108d24:	defff404 	addi	sp,sp,-48
10108d28:	dd400715 	stw	r21,28(sp)
10108d2c:	dd000615 	stw	r20,24(sp)
10108d30:	dc000215 	stw	r16,8(sp)
10108d34:	dfc00b15 	stw	ra,44(sp)
10108d38:	df000a15 	stw	fp,40(sp)
10108d3c:	ddc00915 	stw	r23,36(sp)
10108d40:	dd800815 	stw	r22,32(sp)
10108d44:	dcc00515 	stw	r19,20(sp)
10108d48:	dc800415 	stw	r18,16(sp)
10108d4c:	dc400315 	stw	r17,12(sp)
10108d50:	1880020c 	andi	r2,r3,8
10108d54:	2821883a 	mov	r16,r5
10108d58:	202b883a 	mov	r21,r4
10108d5c:	3029883a 	mov	r20,r6
10108d60:	10002726 	beq	r2,zero,10108e00 <__sfvwrite_r+0xe8>
10108d64:	28800417 	ldw	r2,16(r5)
10108d68:	10002526 	beq	r2,zero,10108e00 <__sfvwrite_r+0xe8>
10108d6c:	1880008c 	andi	r2,r3,2
10108d70:	a4400017 	ldw	r17,0(r20)
10108d74:	10002a26 	beq	r2,zero,10108e20 <__sfvwrite_r+0x108>
10108d78:	05a00034 	movhi	r22,32768
10108d7c:	0027883a 	mov	r19,zero
10108d80:	0025883a 	mov	r18,zero
10108d84:	b5bf0004 	addi	r22,r22,-1024
10108d88:	980d883a 	mov	r6,r19
10108d8c:	a809883a 	mov	r4,r21
10108d90:	90004626 	beq	r18,zero,10108eac <__sfvwrite_r+0x194>
10108d94:	900f883a 	mov	r7,r18
10108d98:	b480022e 	bgeu	r22,r18,10108da4 <__sfvwrite_r+0x8c>
10108d9c:	01e00034 	movhi	r7,32768
10108da0:	39ff0004 	addi	r7,r7,-1024
10108da4:	80800917 	ldw	r2,36(r16)
10108da8:	81400717 	ldw	r5,28(r16)
10108dac:	103ee83a 	callr	r2
10108db0:	0080570e 	bge	zero,r2,10108f10 <__sfvwrite_r+0x1f8>
10108db4:	a0c00217 	ldw	r3,8(r20)
10108db8:	98a7883a 	add	r19,r19,r2
10108dbc:	90a5c83a 	sub	r18,r18,r2
10108dc0:	1885c83a 	sub	r2,r3,r2
10108dc4:	a0800215 	stw	r2,8(r20)
10108dc8:	103fef1e 	bne	r2,zero,10108d88 <__alt_data_end+0xfffe8d88>
10108dcc:	0005883a 	mov	r2,zero
10108dd0:	dfc00b17 	ldw	ra,44(sp)
10108dd4:	df000a17 	ldw	fp,40(sp)
10108dd8:	ddc00917 	ldw	r23,36(sp)
10108ddc:	dd800817 	ldw	r22,32(sp)
10108de0:	dd400717 	ldw	r21,28(sp)
10108de4:	dd000617 	ldw	r20,24(sp)
10108de8:	dcc00517 	ldw	r19,20(sp)
10108dec:	dc800417 	ldw	r18,16(sp)
10108df0:	dc400317 	ldw	r17,12(sp)
10108df4:	dc000217 	ldw	r16,8(sp)
10108df8:	dec00c04 	addi	sp,sp,48
10108dfc:	f800283a 	ret
10108e00:	800b883a 	mov	r5,r16
10108e04:	a809883a 	mov	r4,r21
10108e08:	01027880 	call	10102788 <__swsetup_r>
10108e0c:	1000eb1e 	bne	r2,zero,101091bc <__sfvwrite_r+0x4a4>
10108e10:	80c0030b 	ldhu	r3,12(r16)
10108e14:	a4400017 	ldw	r17,0(r20)
10108e18:	1880008c 	andi	r2,r3,2
10108e1c:	103fd61e 	bne	r2,zero,10108d78 <__alt_data_end+0xfffe8d78>
10108e20:	1880004c 	andi	r2,r3,1
10108e24:	10003f1e 	bne	r2,zero,10108f24 <__sfvwrite_r+0x20c>
10108e28:	0039883a 	mov	fp,zero
10108e2c:	0025883a 	mov	r18,zero
10108e30:	90001a26 	beq	r18,zero,10108e9c <__sfvwrite_r+0x184>
10108e34:	1880800c 	andi	r2,r3,512
10108e38:	84c00217 	ldw	r19,8(r16)
10108e3c:	10002126 	beq	r2,zero,10108ec4 <__sfvwrite_r+0x1ac>
10108e40:	982f883a 	mov	r23,r19
10108e44:	94c09336 	bltu	r18,r19,10109094 <__sfvwrite_r+0x37c>
10108e48:	1881200c 	andi	r2,r3,1152
10108e4c:	10009e1e 	bne	r2,zero,101090c8 <__sfvwrite_r+0x3b0>
10108e50:	81000017 	ldw	r4,0(r16)
10108e54:	b80d883a 	mov	r6,r23
10108e58:	e00b883a 	mov	r5,fp
10108e5c:	01092880 	call	10109288 <memmove>
10108e60:	80c00217 	ldw	r3,8(r16)
10108e64:	81000017 	ldw	r4,0(r16)
10108e68:	9005883a 	mov	r2,r18
10108e6c:	1ce7c83a 	sub	r19,r3,r19
10108e70:	25cf883a 	add	r7,r4,r23
10108e74:	84c00215 	stw	r19,8(r16)
10108e78:	81c00015 	stw	r7,0(r16)
10108e7c:	a0c00217 	ldw	r3,8(r20)
10108e80:	e0b9883a 	add	fp,fp,r2
10108e84:	90a5c83a 	sub	r18,r18,r2
10108e88:	18a7c83a 	sub	r19,r3,r2
10108e8c:	a4c00215 	stw	r19,8(r20)
10108e90:	983fce26 	beq	r19,zero,10108dcc <__alt_data_end+0xfffe8dcc>
10108e94:	80c0030b 	ldhu	r3,12(r16)
10108e98:	903fe61e 	bne	r18,zero,10108e34 <__alt_data_end+0xfffe8e34>
10108e9c:	8f000017 	ldw	fp,0(r17)
10108ea0:	8c800117 	ldw	r18,4(r17)
10108ea4:	8c400204 	addi	r17,r17,8
10108ea8:	003fe106 	br	10108e30 <__alt_data_end+0xfffe8e30>
10108eac:	8cc00017 	ldw	r19,0(r17)
10108eb0:	8c800117 	ldw	r18,4(r17)
10108eb4:	8c400204 	addi	r17,r17,8
10108eb8:	003fb306 	br	10108d88 <__alt_data_end+0xfffe8d88>
10108ebc:	0005883a 	mov	r2,zero
10108ec0:	f800283a 	ret
10108ec4:	81000017 	ldw	r4,0(r16)
10108ec8:	80800417 	ldw	r2,16(r16)
10108ecc:	11005736 	bltu	r2,r4,1010902c <__sfvwrite_r+0x314>
10108ed0:	85c00517 	ldw	r23,20(r16)
10108ed4:	95c05536 	bltu	r18,r23,1010902c <__sfvwrite_r+0x314>
10108ed8:	00a00034 	movhi	r2,32768
10108edc:	10bfffc4 	addi	r2,r2,-1
10108ee0:	9009883a 	mov	r4,r18
10108ee4:	1480012e 	bgeu	r2,r18,10108eec <__sfvwrite_r+0x1d4>
10108ee8:	1009883a 	mov	r4,r2
10108eec:	b80b883a 	mov	r5,r23
10108ef0:	010a7980 	call	1010a798 <__divsi3>
10108ef4:	15cf383a 	mul	r7,r2,r23
10108ef8:	81400717 	ldw	r5,28(r16)
10108efc:	80800917 	ldw	r2,36(r16)
10108f00:	e00d883a 	mov	r6,fp
10108f04:	a809883a 	mov	r4,r21
10108f08:	103ee83a 	callr	r2
10108f0c:	00bfdb16 	blt	zero,r2,10108e7c <__alt_data_end+0xfffe8e7c>
10108f10:	8080030b 	ldhu	r2,12(r16)
10108f14:	10801014 	ori	r2,r2,64
10108f18:	8080030d 	sth	r2,12(r16)
10108f1c:	00bfffc4 	movi	r2,-1
10108f20:	003fab06 	br	10108dd0 <__alt_data_end+0xfffe8dd0>
10108f24:	0027883a 	mov	r19,zero
10108f28:	0011883a 	mov	r8,zero
10108f2c:	0039883a 	mov	fp,zero
10108f30:	0025883a 	mov	r18,zero
10108f34:	90001f26 	beq	r18,zero,10108fb4 <__sfvwrite_r+0x29c>
10108f38:	40005a26 	beq	r8,zero,101090a4 <__sfvwrite_r+0x38c>
10108f3c:	982d883a 	mov	r22,r19
10108f40:	94c0012e 	bgeu	r18,r19,10108f48 <__sfvwrite_r+0x230>
10108f44:	902d883a 	mov	r22,r18
10108f48:	81000017 	ldw	r4,0(r16)
10108f4c:	80800417 	ldw	r2,16(r16)
10108f50:	b02f883a 	mov	r23,r22
10108f54:	81c00517 	ldw	r7,20(r16)
10108f58:	1100032e 	bgeu	r2,r4,10108f68 <__sfvwrite_r+0x250>
10108f5c:	80c00217 	ldw	r3,8(r16)
10108f60:	38c7883a 	add	r3,r7,r3
10108f64:	1d801816 	blt	r3,r22,10108fc8 <__sfvwrite_r+0x2b0>
10108f68:	b1c03e16 	blt	r22,r7,10109064 <__sfvwrite_r+0x34c>
10108f6c:	80800917 	ldw	r2,36(r16)
10108f70:	81400717 	ldw	r5,28(r16)
10108f74:	e00d883a 	mov	r6,fp
10108f78:	da000115 	stw	r8,4(sp)
10108f7c:	a809883a 	mov	r4,r21
10108f80:	103ee83a 	callr	r2
10108f84:	102f883a 	mov	r23,r2
10108f88:	da000117 	ldw	r8,4(sp)
10108f8c:	00bfe00e 	bge	zero,r2,10108f10 <__alt_data_end+0xfffe8f10>
10108f90:	9de7c83a 	sub	r19,r19,r23
10108f94:	98001f26 	beq	r19,zero,10109014 <__sfvwrite_r+0x2fc>
10108f98:	a0800217 	ldw	r2,8(r20)
10108f9c:	e5f9883a 	add	fp,fp,r23
10108fa0:	95e5c83a 	sub	r18,r18,r23
10108fa4:	15efc83a 	sub	r23,r2,r23
10108fa8:	a5c00215 	stw	r23,8(r20)
10108fac:	b83f8726 	beq	r23,zero,10108dcc <__alt_data_end+0xfffe8dcc>
10108fb0:	903fe11e 	bne	r18,zero,10108f38 <__alt_data_end+0xfffe8f38>
10108fb4:	8f000017 	ldw	fp,0(r17)
10108fb8:	8c800117 	ldw	r18,4(r17)
10108fbc:	0011883a 	mov	r8,zero
10108fc0:	8c400204 	addi	r17,r17,8
10108fc4:	003fdb06 	br	10108f34 <__alt_data_end+0xfffe8f34>
10108fc8:	180d883a 	mov	r6,r3
10108fcc:	e00b883a 	mov	r5,fp
10108fd0:	da000115 	stw	r8,4(sp)
10108fd4:	d8c00015 	stw	r3,0(sp)
10108fd8:	01092880 	call	10109288 <memmove>
10108fdc:	d8c00017 	ldw	r3,0(sp)
10108fe0:	80800017 	ldw	r2,0(r16)
10108fe4:	800b883a 	mov	r5,r16
10108fe8:	a809883a 	mov	r4,r21
10108fec:	10c5883a 	add	r2,r2,r3
10108ff0:	80800015 	stw	r2,0(r16)
10108ff4:	d8c00015 	stw	r3,0(sp)
10108ff8:	01043980 	call	10104398 <_fflush_r>
10108ffc:	d8c00017 	ldw	r3,0(sp)
10109000:	da000117 	ldw	r8,4(sp)
10109004:	103fc21e 	bne	r2,zero,10108f10 <__alt_data_end+0xfffe8f10>
10109008:	182f883a 	mov	r23,r3
1010900c:	9de7c83a 	sub	r19,r19,r23
10109010:	983fe11e 	bne	r19,zero,10108f98 <__alt_data_end+0xfffe8f98>
10109014:	800b883a 	mov	r5,r16
10109018:	a809883a 	mov	r4,r21
1010901c:	01043980 	call	10104398 <_fflush_r>
10109020:	103fbb1e 	bne	r2,zero,10108f10 <__alt_data_end+0xfffe8f10>
10109024:	0011883a 	mov	r8,zero
10109028:	003fdb06 	br	10108f98 <__alt_data_end+0xfffe8f98>
1010902c:	94c0012e 	bgeu	r18,r19,10109034 <__sfvwrite_r+0x31c>
10109030:	9027883a 	mov	r19,r18
10109034:	980d883a 	mov	r6,r19
10109038:	e00b883a 	mov	r5,fp
1010903c:	01092880 	call	10109288 <memmove>
10109040:	80800217 	ldw	r2,8(r16)
10109044:	80c00017 	ldw	r3,0(r16)
10109048:	14c5c83a 	sub	r2,r2,r19
1010904c:	1cc7883a 	add	r3,r3,r19
10109050:	80800215 	stw	r2,8(r16)
10109054:	80c00015 	stw	r3,0(r16)
10109058:	10004326 	beq	r2,zero,10109168 <__sfvwrite_r+0x450>
1010905c:	9805883a 	mov	r2,r19
10109060:	003f8606 	br	10108e7c <__alt_data_end+0xfffe8e7c>
10109064:	b00d883a 	mov	r6,r22
10109068:	e00b883a 	mov	r5,fp
1010906c:	da000115 	stw	r8,4(sp)
10109070:	01092880 	call	10109288 <memmove>
10109074:	80800217 	ldw	r2,8(r16)
10109078:	80c00017 	ldw	r3,0(r16)
1010907c:	da000117 	ldw	r8,4(sp)
10109080:	1585c83a 	sub	r2,r2,r22
10109084:	1dad883a 	add	r22,r3,r22
10109088:	80800215 	stw	r2,8(r16)
1010908c:	85800015 	stw	r22,0(r16)
10109090:	003fbf06 	br	10108f90 <__alt_data_end+0xfffe8f90>
10109094:	81000017 	ldw	r4,0(r16)
10109098:	9027883a 	mov	r19,r18
1010909c:	902f883a 	mov	r23,r18
101090a0:	003f6c06 	br	10108e54 <__alt_data_end+0xfffe8e54>
101090a4:	900d883a 	mov	r6,r18
101090a8:	01400284 	movi	r5,10
101090ac:	e009883a 	mov	r4,fp
101090b0:	01058240 	call	10105824 <memchr>
101090b4:	10003e26 	beq	r2,zero,101091b0 <__sfvwrite_r+0x498>
101090b8:	10800044 	addi	r2,r2,1
101090bc:	1727c83a 	sub	r19,r2,fp
101090c0:	02000044 	movi	r8,1
101090c4:	003f9d06 	br	10108f3c <__alt_data_end+0xfffe8f3c>
101090c8:	80800517 	ldw	r2,20(r16)
101090cc:	81400417 	ldw	r5,16(r16)
101090d0:	81c00017 	ldw	r7,0(r16)
101090d4:	10a7883a 	add	r19,r2,r2
101090d8:	9885883a 	add	r2,r19,r2
101090dc:	1026d7fa 	srli	r19,r2,31
101090e0:	396dc83a 	sub	r22,r7,r5
101090e4:	b1000044 	addi	r4,r22,1
101090e8:	9885883a 	add	r2,r19,r2
101090ec:	1027d07a 	srai	r19,r2,1
101090f0:	2485883a 	add	r2,r4,r18
101090f4:	980d883a 	mov	r6,r19
101090f8:	9880022e 	bgeu	r19,r2,10109104 <__sfvwrite_r+0x3ec>
101090fc:	1027883a 	mov	r19,r2
10109100:	100d883a 	mov	r6,r2
10109104:	18c1000c 	andi	r3,r3,1024
10109108:	18001c26 	beq	r3,zero,1010917c <__sfvwrite_r+0x464>
1010910c:	300b883a 	mov	r5,r6
10109110:	a809883a 	mov	r4,r21
10109114:	01050180 	call	10105018 <_malloc_r>
10109118:	102f883a 	mov	r23,r2
1010911c:	10002926 	beq	r2,zero,101091c4 <__sfvwrite_r+0x4ac>
10109120:	81400417 	ldw	r5,16(r16)
10109124:	b00d883a 	mov	r6,r22
10109128:	1009883a 	mov	r4,r2
1010912c:	01059080 	call	10105908 <memcpy>
10109130:	8080030b 	ldhu	r2,12(r16)
10109134:	00fedfc4 	movi	r3,-1153
10109138:	10c4703a 	and	r2,r2,r3
1010913c:	10802014 	ori	r2,r2,128
10109140:	8080030d 	sth	r2,12(r16)
10109144:	bd89883a 	add	r4,r23,r22
10109148:	9d8fc83a 	sub	r7,r19,r22
1010914c:	85c00415 	stw	r23,16(r16)
10109150:	84c00515 	stw	r19,20(r16)
10109154:	81000015 	stw	r4,0(r16)
10109158:	9027883a 	mov	r19,r18
1010915c:	81c00215 	stw	r7,8(r16)
10109160:	902f883a 	mov	r23,r18
10109164:	003f3b06 	br	10108e54 <__alt_data_end+0xfffe8e54>
10109168:	800b883a 	mov	r5,r16
1010916c:	a809883a 	mov	r4,r21
10109170:	01043980 	call	10104398 <_fflush_r>
10109174:	103fb926 	beq	r2,zero,1010905c <__alt_data_end+0xfffe905c>
10109178:	003f6506 	br	10108f10 <__alt_data_end+0xfffe8f10>
1010917c:	a809883a 	mov	r4,r21
10109180:	01094440 	call	10109444 <_realloc_r>
10109184:	102f883a 	mov	r23,r2
10109188:	103fee1e 	bne	r2,zero,10109144 <__alt_data_end+0xfffe9144>
1010918c:	81400417 	ldw	r5,16(r16)
10109190:	a809883a 	mov	r4,r21
10109194:	01048e80 	call	101048e8 <_free_r>
10109198:	8080030b 	ldhu	r2,12(r16)
1010919c:	00ffdfc4 	movi	r3,-129
101091a0:	1884703a 	and	r2,r3,r2
101091a4:	00c00304 	movi	r3,12
101091a8:	a8c00015 	stw	r3,0(r21)
101091ac:	003f5906 	br	10108f14 <__alt_data_end+0xfffe8f14>
101091b0:	94c00044 	addi	r19,r18,1
101091b4:	02000044 	movi	r8,1
101091b8:	003f6006 	br	10108f3c <__alt_data_end+0xfffe8f3c>
101091bc:	00bfffc4 	movi	r2,-1
101091c0:	003f0306 	br	10108dd0 <__alt_data_end+0xfffe8dd0>
101091c4:	00800304 	movi	r2,12
101091c8:	a8800015 	stw	r2,0(r21)
101091cc:	8080030b 	ldhu	r2,12(r16)
101091d0:	003f5006 	br	10108f14 <__alt_data_end+0xfffe8f14>

101091d4 <_isatty_r>:
101091d4:	defffd04 	addi	sp,sp,-12
101091d8:	dc000015 	stw	r16,0(sp)
101091dc:	04040474 	movhi	r16,4113
101091e0:	dc400115 	stw	r17,4(sp)
101091e4:	840c5a04 	addi	r16,r16,12648
101091e8:	2023883a 	mov	r17,r4
101091ec:	2809883a 	mov	r4,r5
101091f0:	dfc00215 	stw	ra,8(sp)
101091f4:	80000015 	stw	zero,0(r16)
101091f8:	010d2680 	call	1010d268 <isatty>
101091fc:	00ffffc4 	movi	r3,-1
10109200:	10c00526 	beq	r2,r3,10109218 <_isatty_r+0x44>
10109204:	dfc00217 	ldw	ra,8(sp)
10109208:	dc400117 	ldw	r17,4(sp)
1010920c:	dc000017 	ldw	r16,0(sp)
10109210:	dec00304 	addi	sp,sp,12
10109214:	f800283a 	ret
10109218:	80c00017 	ldw	r3,0(r16)
1010921c:	183ff926 	beq	r3,zero,10109204 <__alt_data_end+0xfffe9204>
10109220:	88c00015 	stw	r3,0(r17)
10109224:	003ff706 	br	10109204 <__alt_data_end+0xfffe9204>

10109228 <_lseek_r>:
10109228:	defffd04 	addi	sp,sp,-12
1010922c:	2805883a 	mov	r2,r5
10109230:	dc000015 	stw	r16,0(sp)
10109234:	04040474 	movhi	r16,4113
10109238:	dc400115 	stw	r17,4(sp)
1010923c:	300b883a 	mov	r5,r6
10109240:	840c5a04 	addi	r16,r16,12648
10109244:	2023883a 	mov	r17,r4
10109248:	380d883a 	mov	r6,r7
1010924c:	1009883a 	mov	r4,r2
10109250:	dfc00215 	stw	ra,8(sp)
10109254:	80000015 	stw	zero,0(r16)
10109258:	010d5a00 	call	1010d5a0 <lseek>
1010925c:	00ffffc4 	movi	r3,-1
10109260:	10c00526 	beq	r2,r3,10109278 <_lseek_r+0x50>
10109264:	dfc00217 	ldw	ra,8(sp)
10109268:	dc400117 	ldw	r17,4(sp)
1010926c:	dc000017 	ldw	r16,0(sp)
10109270:	dec00304 	addi	sp,sp,12
10109274:	f800283a 	ret
10109278:	80c00017 	ldw	r3,0(r16)
1010927c:	183ff926 	beq	r3,zero,10109264 <__alt_data_end+0xfffe9264>
10109280:	88c00015 	stw	r3,0(r17)
10109284:	003ff706 	br	10109264 <__alt_data_end+0xfffe9264>

10109288 <memmove>:
10109288:	2005883a 	mov	r2,r4
1010928c:	29000b2e 	bgeu	r5,r4,101092bc <memmove+0x34>
10109290:	298f883a 	add	r7,r5,r6
10109294:	21c0092e 	bgeu	r4,r7,101092bc <memmove+0x34>
10109298:	2187883a 	add	r3,r4,r6
1010929c:	198bc83a 	sub	r5,r3,r6
101092a0:	30004826 	beq	r6,zero,101093c4 <memmove+0x13c>
101092a4:	39ffffc4 	addi	r7,r7,-1
101092a8:	39000003 	ldbu	r4,0(r7)
101092ac:	18ffffc4 	addi	r3,r3,-1
101092b0:	19000005 	stb	r4,0(r3)
101092b4:	28fffb1e 	bne	r5,r3,101092a4 <__alt_data_end+0xfffe92a4>
101092b8:	f800283a 	ret
101092bc:	00c003c4 	movi	r3,15
101092c0:	1980412e 	bgeu	r3,r6,101093c8 <memmove+0x140>
101092c4:	2886b03a 	or	r3,r5,r2
101092c8:	18c000cc 	andi	r3,r3,3
101092cc:	1800401e 	bne	r3,zero,101093d0 <memmove+0x148>
101092d0:	33fffc04 	addi	r15,r6,-16
101092d4:	781ed13a 	srli	r15,r15,4
101092d8:	28c00104 	addi	r3,r5,4
101092dc:	13400104 	addi	r13,r2,4
101092e0:	781c913a 	slli	r14,r15,4
101092e4:	2b000204 	addi	r12,r5,8
101092e8:	12c00204 	addi	r11,r2,8
101092ec:	73800504 	addi	r14,r14,20
101092f0:	2a800304 	addi	r10,r5,12
101092f4:	12400304 	addi	r9,r2,12
101092f8:	2b9d883a 	add	r14,r5,r14
101092fc:	2811883a 	mov	r8,r5
10109300:	100f883a 	mov	r7,r2
10109304:	41000017 	ldw	r4,0(r8)
10109308:	39c00404 	addi	r7,r7,16
1010930c:	18c00404 	addi	r3,r3,16
10109310:	393ffc15 	stw	r4,-16(r7)
10109314:	193ffc17 	ldw	r4,-16(r3)
10109318:	6b400404 	addi	r13,r13,16
1010931c:	5ac00404 	addi	r11,r11,16
10109320:	693ffc15 	stw	r4,-16(r13)
10109324:	61000017 	ldw	r4,0(r12)
10109328:	4a400404 	addi	r9,r9,16
1010932c:	42000404 	addi	r8,r8,16
10109330:	593ffc15 	stw	r4,-16(r11)
10109334:	51000017 	ldw	r4,0(r10)
10109338:	63000404 	addi	r12,r12,16
1010933c:	52800404 	addi	r10,r10,16
10109340:	493ffc15 	stw	r4,-16(r9)
10109344:	1bbfef1e 	bne	r3,r14,10109304 <__alt_data_end+0xfffe9304>
10109348:	79000044 	addi	r4,r15,1
1010934c:	2008913a 	slli	r4,r4,4
10109350:	328003cc 	andi	r10,r6,15
10109354:	02c000c4 	movi	r11,3
10109358:	1107883a 	add	r3,r2,r4
1010935c:	290b883a 	add	r5,r5,r4
10109360:	5a801e2e 	bgeu	r11,r10,101093dc <memmove+0x154>
10109364:	1813883a 	mov	r9,r3
10109368:	2811883a 	mov	r8,r5
1010936c:	500f883a 	mov	r7,r10
10109370:	41000017 	ldw	r4,0(r8)
10109374:	4a400104 	addi	r9,r9,4
10109378:	39ffff04 	addi	r7,r7,-4
1010937c:	493fff15 	stw	r4,-4(r9)
10109380:	42000104 	addi	r8,r8,4
10109384:	59fffa36 	bltu	r11,r7,10109370 <__alt_data_end+0xfffe9370>
10109388:	513fff04 	addi	r4,r10,-4
1010938c:	2008d0ba 	srli	r4,r4,2
10109390:	318000cc 	andi	r6,r6,3
10109394:	21000044 	addi	r4,r4,1
10109398:	2109883a 	add	r4,r4,r4
1010939c:	2109883a 	add	r4,r4,r4
101093a0:	1907883a 	add	r3,r3,r4
101093a4:	290b883a 	add	r5,r5,r4
101093a8:	30000b26 	beq	r6,zero,101093d8 <memmove+0x150>
101093ac:	198d883a 	add	r6,r3,r6
101093b0:	29c00003 	ldbu	r7,0(r5)
101093b4:	18c00044 	addi	r3,r3,1
101093b8:	29400044 	addi	r5,r5,1
101093bc:	19ffffc5 	stb	r7,-1(r3)
101093c0:	19bffb1e 	bne	r3,r6,101093b0 <__alt_data_end+0xfffe93b0>
101093c4:	f800283a 	ret
101093c8:	1007883a 	mov	r3,r2
101093cc:	003ff606 	br	101093a8 <__alt_data_end+0xfffe93a8>
101093d0:	1007883a 	mov	r3,r2
101093d4:	003ff506 	br	101093ac <__alt_data_end+0xfffe93ac>
101093d8:	f800283a 	ret
101093dc:	500d883a 	mov	r6,r10
101093e0:	003ff106 	br	101093a8 <__alt_data_end+0xfffe93a8>

101093e4 <_read_r>:
101093e4:	defffd04 	addi	sp,sp,-12
101093e8:	2805883a 	mov	r2,r5
101093ec:	dc000015 	stw	r16,0(sp)
101093f0:	04040474 	movhi	r16,4113
101093f4:	dc400115 	stw	r17,4(sp)
101093f8:	300b883a 	mov	r5,r6
101093fc:	840c5a04 	addi	r16,r16,12648
10109400:	2023883a 	mov	r17,r4
10109404:	380d883a 	mov	r6,r7
10109408:	1009883a 	mov	r4,r2
1010940c:	dfc00215 	stw	ra,8(sp)
10109410:	80000015 	stw	zero,0(r16)
10109414:	010d7740 	call	1010d774 <read>
10109418:	00ffffc4 	movi	r3,-1
1010941c:	10c00526 	beq	r2,r3,10109434 <_read_r+0x50>
10109420:	dfc00217 	ldw	ra,8(sp)
10109424:	dc400117 	ldw	r17,4(sp)
10109428:	dc000017 	ldw	r16,0(sp)
1010942c:	dec00304 	addi	sp,sp,12
10109430:	f800283a 	ret
10109434:	80c00017 	ldw	r3,0(r16)
10109438:	183ff926 	beq	r3,zero,10109420 <__alt_data_end+0xfffe9420>
1010943c:	88c00015 	stw	r3,0(r17)
10109440:	003ff706 	br	10109420 <__alt_data_end+0xfffe9420>

10109444 <_realloc_r>:
10109444:	defff604 	addi	sp,sp,-40
10109448:	dc800215 	stw	r18,8(sp)
1010944c:	dfc00915 	stw	ra,36(sp)
10109450:	df000815 	stw	fp,32(sp)
10109454:	ddc00715 	stw	r23,28(sp)
10109458:	dd800615 	stw	r22,24(sp)
1010945c:	dd400515 	stw	r21,20(sp)
10109460:	dd000415 	stw	r20,16(sp)
10109464:	dcc00315 	stw	r19,12(sp)
10109468:	dc400115 	stw	r17,4(sp)
1010946c:	dc000015 	stw	r16,0(sp)
10109470:	3025883a 	mov	r18,r6
10109474:	2800b726 	beq	r5,zero,10109754 <_realloc_r+0x310>
10109478:	282b883a 	mov	r21,r5
1010947c:	2029883a 	mov	r20,r4
10109480:	010d6f00 	call	1010d6f0 <__malloc_lock>
10109484:	a8bfff17 	ldw	r2,-4(r21)
10109488:	043fff04 	movi	r16,-4
1010948c:	90c002c4 	addi	r3,r18,11
10109490:	01000584 	movi	r4,22
10109494:	acfffe04 	addi	r19,r21,-8
10109498:	1420703a 	and	r16,r2,r16
1010949c:	20c0332e 	bgeu	r4,r3,1010956c <_realloc_r+0x128>
101094a0:	047ffe04 	movi	r17,-8
101094a4:	1c62703a 	and	r17,r3,r17
101094a8:	8807883a 	mov	r3,r17
101094ac:	88005816 	blt	r17,zero,10109610 <_realloc_r+0x1cc>
101094b0:	8c805736 	bltu	r17,r18,10109610 <_realloc_r+0x1cc>
101094b4:	80c0300e 	bge	r16,r3,10109578 <_realloc_r+0x134>
101094b8:	07040474 	movhi	fp,4113
101094bc:	e7000104 	addi	fp,fp,4
101094c0:	e1c00217 	ldw	r7,8(fp)
101094c4:	9c09883a 	add	r4,r19,r16
101094c8:	22000117 	ldw	r8,4(r4)
101094cc:	21c06326 	beq	r4,r7,1010965c <_realloc_r+0x218>
101094d0:	017fff84 	movi	r5,-2
101094d4:	414a703a 	and	r5,r8,r5
101094d8:	214b883a 	add	r5,r4,r5
101094dc:	29800117 	ldw	r6,4(r5)
101094e0:	3180004c 	andi	r6,r6,1
101094e4:	30003f26 	beq	r6,zero,101095e4 <_realloc_r+0x1a0>
101094e8:	1080004c 	andi	r2,r2,1
101094ec:	10008326 	beq	r2,zero,101096fc <_realloc_r+0x2b8>
101094f0:	900b883a 	mov	r5,r18
101094f4:	a009883a 	mov	r4,r20
101094f8:	01050180 	call	10105018 <_malloc_r>
101094fc:	1025883a 	mov	r18,r2
10109500:	10011e26 	beq	r2,zero,1010997c <_realloc_r+0x538>
10109504:	a93fff17 	ldw	r4,-4(r21)
10109508:	10fffe04 	addi	r3,r2,-8
1010950c:	00bfff84 	movi	r2,-2
10109510:	2084703a 	and	r2,r4,r2
10109514:	9885883a 	add	r2,r19,r2
10109518:	1880ee26 	beq	r3,r2,101098d4 <_realloc_r+0x490>
1010951c:	81bfff04 	addi	r6,r16,-4
10109520:	00800904 	movi	r2,36
10109524:	1180b836 	bltu	r2,r6,10109808 <_realloc_r+0x3c4>
10109528:	00c004c4 	movi	r3,19
1010952c:	19809636 	bltu	r3,r6,10109788 <_realloc_r+0x344>
10109530:	9005883a 	mov	r2,r18
10109534:	a807883a 	mov	r3,r21
10109538:	19000017 	ldw	r4,0(r3)
1010953c:	11000015 	stw	r4,0(r2)
10109540:	19000117 	ldw	r4,4(r3)
10109544:	11000115 	stw	r4,4(r2)
10109548:	18c00217 	ldw	r3,8(r3)
1010954c:	10c00215 	stw	r3,8(r2)
10109550:	a80b883a 	mov	r5,r21
10109554:	a009883a 	mov	r4,r20
10109558:	01048e80 	call	101048e8 <_free_r>
1010955c:	a009883a 	mov	r4,r20
10109560:	010d7140 	call	1010d714 <__malloc_unlock>
10109564:	9005883a 	mov	r2,r18
10109568:	00001206 	br	101095b4 <_realloc_r+0x170>
1010956c:	00c00404 	movi	r3,16
10109570:	1823883a 	mov	r17,r3
10109574:	003fce06 	br	101094b0 <__alt_data_end+0xfffe94b0>
10109578:	a825883a 	mov	r18,r21
1010957c:	8445c83a 	sub	r2,r16,r17
10109580:	00c003c4 	movi	r3,15
10109584:	18802636 	bltu	r3,r2,10109620 <_realloc_r+0x1dc>
10109588:	99800117 	ldw	r6,4(r19)
1010958c:	9c07883a 	add	r3,r19,r16
10109590:	3180004c 	andi	r6,r6,1
10109594:	3420b03a 	or	r16,r6,r16
10109598:	9c000115 	stw	r16,4(r19)
1010959c:	18800117 	ldw	r2,4(r3)
101095a0:	10800054 	ori	r2,r2,1
101095a4:	18800115 	stw	r2,4(r3)
101095a8:	a009883a 	mov	r4,r20
101095ac:	010d7140 	call	1010d714 <__malloc_unlock>
101095b0:	9005883a 	mov	r2,r18
101095b4:	dfc00917 	ldw	ra,36(sp)
101095b8:	df000817 	ldw	fp,32(sp)
101095bc:	ddc00717 	ldw	r23,28(sp)
101095c0:	dd800617 	ldw	r22,24(sp)
101095c4:	dd400517 	ldw	r21,20(sp)
101095c8:	dd000417 	ldw	r20,16(sp)
101095cc:	dcc00317 	ldw	r19,12(sp)
101095d0:	dc800217 	ldw	r18,8(sp)
101095d4:	dc400117 	ldw	r17,4(sp)
101095d8:	dc000017 	ldw	r16,0(sp)
101095dc:	dec00a04 	addi	sp,sp,40
101095e0:	f800283a 	ret
101095e4:	017fff04 	movi	r5,-4
101095e8:	414a703a 	and	r5,r8,r5
101095ec:	814d883a 	add	r6,r16,r5
101095f0:	30c01f16 	blt	r6,r3,10109670 <_realloc_r+0x22c>
101095f4:	20800317 	ldw	r2,12(r4)
101095f8:	20c00217 	ldw	r3,8(r4)
101095fc:	a825883a 	mov	r18,r21
10109600:	3021883a 	mov	r16,r6
10109604:	18800315 	stw	r2,12(r3)
10109608:	10c00215 	stw	r3,8(r2)
1010960c:	003fdb06 	br	1010957c <__alt_data_end+0xfffe957c>
10109610:	00800304 	movi	r2,12
10109614:	a0800015 	stw	r2,0(r20)
10109618:	0005883a 	mov	r2,zero
1010961c:	003fe506 	br	101095b4 <__alt_data_end+0xfffe95b4>
10109620:	98c00117 	ldw	r3,4(r19)
10109624:	9c4b883a 	add	r5,r19,r17
10109628:	11000054 	ori	r4,r2,1
1010962c:	18c0004c 	andi	r3,r3,1
10109630:	1c62b03a 	or	r17,r3,r17
10109634:	9c400115 	stw	r17,4(r19)
10109638:	29000115 	stw	r4,4(r5)
1010963c:	2885883a 	add	r2,r5,r2
10109640:	10c00117 	ldw	r3,4(r2)
10109644:	29400204 	addi	r5,r5,8
10109648:	a009883a 	mov	r4,r20
1010964c:	18c00054 	ori	r3,r3,1
10109650:	10c00115 	stw	r3,4(r2)
10109654:	01048e80 	call	101048e8 <_free_r>
10109658:	003fd306 	br	101095a8 <__alt_data_end+0xfffe95a8>
1010965c:	017fff04 	movi	r5,-4
10109660:	414a703a 	and	r5,r8,r5
10109664:	89800404 	addi	r6,r17,16
10109668:	8151883a 	add	r8,r16,r5
1010966c:	4180590e 	bge	r8,r6,101097d4 <_realloc_r+0x390>
10109670:	1080004c 	andi	r2,r2,1
10109674:	103f9e1e 	bne	r2,zero,101094f0 <__alt_data_end+0xfffe94f0>
10109678:	adbffe17 	ldw	r22,-8(r21)
1010967c:	00bfff04 	movi	r2,-4
10109680:	9dadc83a 	sub	r22,r19,r22
10109684:	b1800117 	ldw	r6,4(r22)
10109688:	3084703a 	and	r2,r6,r2
1010968c:	20002026 	beq	r4,zero,10109710 <_realloc_r+0x2cc>
10109690:	80af883a 	add	r23,r16,r2
10109694:	b96f883a 	add	r23,r23,r5
10109698:	21c05f26 	beq	r4,r7,10109818 <_realloc_r+0x3d4>
1010969c:	b8c01c16 	blt	r23,r3,10109710 <_realloc_r+0x2cc>
101096a0:	20800317 	ldw	r2,12(r4)
101096a4:	20c00217 	ldw	r3,8(r4)
101096a8:	81bfff04 	addi	r6,r16,-4
101096ac:	01000904 	movi	r4,36
101096b0:	18800315 	stw	r2,12(r3)
101096b4:	10c00215 	stw	r3,8(r2)
101096b8:	b0c00217 	ldw	r3,8(r22)
101096bc:	b0800317 	ldw	r2,12(r22)
101096c0:	b4800204 	addi	r18,r22,8
101096c4:	18800315 	stw	r2,12(r3)
101096c8:	10c00215 	stw	r3,8(r2)
101096cc:	21801b36 	bltu	r4,r6,1010973c <_realloc_r+0x2f8>
101096d0:	008004c4 	movi	r2,19
101096d4:	1180352e 	bgeu	r2,r6,101097ac <_realloc_r+0x368>
101096d8:	a8800017 	ldw	r2,0(r21)
101096dc:	b0800215 	stw	r2,8(r22)
101096e0:	a8800117 	ldw	r2,4(r21)
101096e4:	b0800315 	stw	r2,12(r22)
101096e8:	008006c4 	movi	r2,27
101096ec:	11807f36 	bltu	r2,r6,101098ec <_realloc_r+0x4a8>
101096f0:	b0800404 	addi	r2,r22,16
101096f4:	ad400204 	addi	r21,r21,8
101096f8:	00002d06 	br	101097b0 <_realloc_r+0x36c>
101096fc:	adbffe17 	ldw	r22,-8(r21)
10109700:	00bfff04 	movi	r2,-4
10109704:	9dadc83a 	sub	r22,r19,r22
10109708:	b1000117 	ldw	r4,4(r22)
1010970c:	2084703a 	and	r2,r4,r2
10109710:	b03f7726 	beq	r22,zero,101094f0 <__alt_data_end+0xfffe94f0>
10109714:	80af883a 	add	r23,r16,r2
10109718:	b8ff7516 	blt	r23,r3,101094f0 <__alt_data_end+0xfffe94f0>
1010971c:	b0800317 	ldw	r2,12(r22)
10109720:	b0c00217 	ldw	r3,8(r22)
10109724:	81bfff04 	addi	r6,r16,-4
10109728:	01000904 	movi	r4,36
1010972c:	18800315 	stw	r2,12(r3)
10109730:	10c00215 	stw	r3,8(r2)
10109734:	b4800204 	addi	r18,r22,8
10109738:	21bfe52e 	bgeu	r4,r6,101096d0 <__alt_data_end+0xfffe96d0>
1010973c:	a80b883a 	mov	r5,r21
10109740:	9009883a 	mov	r4,r18
10109744:	01092880 	call	10109288 <memmove>
10109748:	b821883a 	mov	r16,r23
1010974c:	b027883a 	mov	r19,r22
10109750:	003f8a06 	br	1010957c <__alt_data_end+0xfffe957c>
10109754:	300b883a 	mov	r5,r6
10109758:	dfc00917 	ldw	ra,36(sp)
1010975c:	df000817 	ldw	fp,32(sp)
10109760:	ddc00717 	ldw	r23,28(sp)
10109764:	dd800617 	ldw	r22,24(sp)
10109768:	dd400517 	ldw	r21,20(sp)
1010976c:	dd000417 	ldw	r20,16(sp)
10109770:	dcc00317 	ldw	r19,12(sp)
10109774:	dc800217 	ldw	r18,8(sp)
10109778:	dc400117 	ldw	r17,4(sp)
1010977c:	dc000017 	ldw	r16,0(sp)
10109780:	dec00a04 	addi	sp,sp,40
10109784:	01050181 	jmpi	10105018 <_malloc_r>
10109788:	a8c00017 	ldw	r3,0(r21)
1010978c:	90c00015 	stw	r3,0(r18)
10109790:	a8c00117 	ldw	r3,4(r21)
10109794:	90c00115 	stw	r3,4(r18)
10109798:	00c006c4 	movi	r3,27
1010979c:	19804536 	bltu	r3,r6,101098b4 <_realloc_r+0x470>
101097a0:	90800204 	addi	r2,r18,8
101097a4:	a8c00204 	addi	r3,r21,8
101097a8:	003f6306 	br	10109538 <__alt_data_end+0xfffe9538>
101097ac:	9005883a 	mov	r2,r18
101097b0:	a8c00017 	ldw	r3,0(r21)
101097b4:	b821883a 	mov	r16,r23
101097b8:	b027883a 	mov	r19,r22
101097bc:	10c00015 	stw	r3,0(r2)
101097c0:	a8c00117 	ldw	r3,4(r21)
101097c4:	10c00115 	stw	r3,4(r2)
101097c8:	a8c00217 	ldw	r3,8(r21)
101097cc:	10c00215 	stw	r3,8(r2)
101097d0:	003f6a06 	br	1010957c <__alt_data_end+0xfffe957c>
101097d4:	9c67883a 	add	r19,r19,r17
101097d8:	4445c83a 	sub	r2,r8,r17
101097dc:	e4c00215 	stw	r19,8(fp)
101097e0:	10800054 	ori	r2,r2,1
101097e4:	98800115 	stw	r2,4(r19)
101097e8:	a8bfff17 	ldw	r2,-4(r21)
101097ec:	a009883a 	mov	r4,r20
101097f0:	1080004c 	andi	r2,r2,1
101097f4:	1462b03a 	or	r17,r2,r17
101097f8:	ac7fff15 	stw	r17,-4(r21)
101097fc:	010d7140 	call	1010d714 <__malloc_unlock>
10109800:	a805883a 	mov	r2,r21
10109804:	003f6b06 	br	101095b4 <__alt_data_end+0xfffe95b4>
10109808:	a80b883a 	mov	r5,r21
1010980c:	9009883a 	mov	r4,r18
10109810:	01092880 	call	10109288 <memmove>
10109814:	003f4e06 	br	10109550 <__alt_data_end+0xfffe9550>
10109818:	89000404 	addi	r4,r17,16
1010981c:	b93fbc16 	blt	r23,r4,10109710 <__alt_data_end+0xfffe9710>
10109820:	b0800317 	ldw	r2,12(r22)
10109824:	b0c00217 	ldw	r3,8(r22)
10109828:	81bfff04 	addi	r6,r16,-4
1010982c:	01000904 	movi	r4,36
10109830:	18800315 	stw	r2,12(r3)
10109834:	10c00215 	stw	r3,8(r2)
10109838:	b4800204 	addi	r18,r22,8
1010983c:	21804336 	bltu	r4,r6,1010994c <_realloc_r+0x508>
10109840:	008004c4 	movi	r2,19
10109844:	11803f2e 	bgeu	r2,r6,10109944 <_realloc_r+0x500>
10109848:	a8800017 	ldw	r2,0(r21)
1010984c:	b0800215 	stw	r2,8(r22)
10109850:	a8800117 	ldw	r2,4(r21)
10109854:	b0800315 	stw	r2,12(r22)
10109858:	008006c4 	movi	r2,27
1010985c:	11803f36 	bltu	r2,r6,1010995c <_realloc_r+0x518>
10109860:	b0800404 	addi	r2,r22,16
10109864:	ad400204 	addi	r21,r21,8
10109868:	a8c00017 	ldw	r3,0(r21)
1010986c:	10c00015 	stw	r3,0(r2)
10109870:	a8c00117 	ldw	r3,4(r21)
10109874:	10c00115 	stw	r3,4(r2)
10109878:	a8c00217 	ldw	r3,8(r21)
1010987c:	10c00215 	stw	r3,8(r2)
10109880:	b447883a 	add	r3,r22,r17
10109884:	bc45c83a 	sub	r2,r23,r17
10109888:	e0c00215 	stw	r3,8(fp)
1010988c:	10800054 	ori	r2,r2,1
10109890:	18800115 	stw	r2,4(r3)
10109894:	b0800117 	ldw	r2,4(r22)
10109898:	a009883a 	mov	r4,r20
1010989c:	1080004c 	andi	r2,r2,1
101098a0:	1462b03a 	or	r17,r2,r17
101098a4:	b4400115 	stw	r17,4(r22)
101098a8:	010d7140 	call	1010d714 <__malloc_unlock>
101098ac:	9005883a 	mov	r2,r18
101098b0:	003f4006 	br	101095b4 <__alt_data_end+0xfffe95b4>
101098b4:	a8c00217 	ldw	r3,8(r21)
101098b8:	90c00215 	stw	r3,8(r18)
101098bc:	a8c00317 	ldw	r3,12(r21)
101098c0:	90c00315 	stw	r3,12(r18)
101098c4:	30801126 	beq	r6,r2,1010990c <_realloc_r+0x4c8>
101098c8:	90800404 	addi	r2,r18,16
101098cc:	a8c00404 	addi	r3,r21,16
101098d0:	003f1906 	br	10109538 <__alt_data_end+0xfffe9538>
101098d4:	90ffff17 	ldw	r3,-4(r18)
101098d8:	00bfff04 	movi	r2,-4
101098dc:	a825883a 	mov	r18,r21
101098e0:	1884703a 	and	r2,r3,r2
101098e4:	80a1883a 	add	r16,r16,r2
101098e8:	003f2406 	br	1010957c <__alt_data_end+0xfffe957c>
101098ec:	a8800217 	ldw	r2,8(r21)
101098f0:	b0800415 	stw	r2,16(r22)
101098f4:	a8800317 	ldw	r2,12(r21)
101098f8:	b0800515 	stw	r2,20(r22)
101098fc:	31000a26 	beq	r6,r4,10109928 <_realloc_r+0x4e4>
10109900:	b0800604 	addi	r2,r22,24
10109904:	ad400404 	addi	r21,r21,16
10109908:	003fa906 	br	101097b0 <__alt_data_end+0xfffe97b0>
1010990c:	a9000417 	ldw	r4,16(r21)
10109910:	90800604 	addi	r2,r18,24
10109914:	a8c00604 	addi	r3,r21,24
10109918:	91000415 	stw	r4,16(r18)
1010991c:	a9000517 	ldw	r4,20(r21)
10109920:	91000515 	stw	r4,20(r18)
10109924:	003f0406 	br	10109538 <__alt_data_end+0xfffe9538>
10109928:	a8c00417 	ldw	r3,16(r21)
1010992c:	ad400604 	addi	r21,r21,24
10109930:	b0800804 	addi	r2,r22,32
10109934:	b0c00615 	stw	r3,24(r22)
10109938:	a8ffff17 	ldw	r3,-4(r21)
1010993c:	b0c00715 	stw	r3,28(r22)
10109940:	003f9b06 	br	101097b0 <__alt_data_end+0xfffe97b0>
10109944:	9005883a 	mov	r2,r18
10109948:	003fc706 	br	10109868 <__alt_data_end+0xfffe9868>
1010994c:	a80b883a 	mov	r5,r21
10109950:	9009883a 	mov	r4,r18
10109954:	01092880 	call	10109288 <memmove>
10109958:	003fc906 	br	10109880 <__alt_data_end+0xfffe9880>
1010995c:	a8800217 	ldw	r2,8(r21)
10109960:	b0800415 	stw	r2,16(r22)
10109964:	a8800317 	ldw	r2,12(r21)
10109968:	b0800515 	stw	r2,20(r22)
1010996c:	31000726 	beq	r6,r4,1010998c <_realloc_r+0x548>
10109970:	b0800604 	addi	r2,r22,24
10109974:	ad400404 	addi	r21,r21,16
10109978:	003fbb06 	br	10109868 <__alt_data_end+0xfffe9868>
1010997c:	a009883a 	mov	r4,r20
10109980:	010d7140 	call	1010d714 <__malloc_unlock>
10109984:	0005883a 	mov	r2,zero
10109988:	003f0a06 	br	101095b4 <__alt_data_end+0xfffe95b4>
1010998c:	a8c00417 	ldw	r3,16(r21)
10109990:	ad400604 	addi	r21,r21,24
10109994:	b0800804 	addi	r2,r22,32
10109998:	b0c00615 	stw	r3,24(r22)
1010999c:	a8ffff17 	ldw	r3,-4(r21)
101099a0:	b0c00715 	stw	r3,28(r22)
101099a4:	003fb006 	br	10109868 <__alt_data_end+0xfffe9868>

101099a8 <__swbuf_r>:
101099a8:	defffb04 	addi	sp,sp,-20
101099ac:	dcc00315 	stw	r19,12(sp)
101099b0:	dc800215 	stw	r18,8(sp)
101099b4:	dc000015 	stw	r16,0(sp)
101099b8:	dfc00415 	stw	ra,16(sp)
101099bc:	dc400115 	stw	r17,4(sp)
101099c0:	2025883a 	mov	r18,r4
101099c4:	2827883a 	mov	r19,r5
101099c8:	3021883a 	mov	r16,r6
101099cc:	20000226 	beq	r4,zero,101099d8 <__swbuf_r+0x30>
101099d0:	20800e17 	ldw	r2,56(r4)
101099d4:	10004226 	beq	r2,zero,10109ae0 <__swbuf_r+0x138>
101099d8:	80800617 	ldw	r2,24(r16)
101099dc:	8100030b 	ldhu	r4,12(r16)
101099e0:	80800215 	stw	r2,8(r16)
101099e4:	2080020c 	andi	r2,r4,8
101099e8:	10003626 	beq	r2,zero,10109ac4 <__swbuf_r+0x11c>
101099ec:	80c00417 	ldw	r3,16(r16)
101099f0:	18003426 	beq	r3,zero,10109ac4 <__swbuf_r+0x11c>
101099f4:	2088000c 	andi	r2,r4,8192
101099f8:	9c403fcc 	andi	r17,r19,255
101099fc:	10001a26 	beq	r2,zero,10109a68 <__swbuf_r+0xc0>
10109a00:	80800017 	ldw	r2,0(r16)
10109a04:	81000517 	ldw	r4,20(r16)
10109a08:	10c7c83a 	sub	r3,r2,r3
10109a0c:	1900200e 	bge	r3,r4,10109a90 <__swbuf_r+0xe8>
10109a10:	18c00044 	addi	r3,r3,1
10109a14:	81000217 	ldw	r4,8(r16)
10109a18:	11400044 	addi	r5,r2,1
10109a1c:	81400015 	stw	r5,0(r16)
10109a20:	213fffc4 	addi	r4,r4,-1
10109a24:	81000215 	stw	r4,8(r16)
10109a28:	14c00005 	stb	r19,0(r2)
10109a2c:	80800517 	ldw	r2,20(r16)
10109a30:	10c01e26 	beq	r2,r3,10109aac <__swbuf_r+0x104>
10109a34:	8080030b 	ldhu	r2,12(r16)
10109a38:	1080004c 	andi	r2,r2,1
10109a3c:	10000226 	beq	r2,zero,10109a48 <__swbuf_r+0xa0>
10109a40:	00800284 	movi	r2,10
10109a44:	88801926 	beq	r17,r2,10109aac <__swbuf_r+0x104>
10109a48:	8805883a 	mov	r2,r17
10109a4c:	dfc00417 	ldw	ra,16(sp)
10109a50:	dcc00317 	ldw	r19,12(sp)
10109a54:	dc800217 	ldw	r18,8(sp)
10109a58:	dc400117 	ldw	r17,4(sp)
10109a5c:	dc000017 	ldw	r16,0(sp)
10109a60:	dec00504 	addi	sp,sp,20
10109a64:	f800283a 	ret
10109a68:	81401917 	ldw	r5,100(r16)
10109a6c:	00b7ffc4 	movi	r2,-8193
10109a70:	21080014 	ori	r4,r4,8192
10109a74:	2884703a 	and	r2,r5,r2
10109a78:	80801915 	stw	r2,100(r16)
10109a7c:	80800017 	ldw	r2,0(r16)
10109a80:	8100030d 	sth	r4,12(r16)
10109a84:	81000517 	ldw	r4,20(r16)
10109a88:	10c7c83a 	sub	r3,r2,r3
10109a8c:	193fe016 	blt	r3,r4,10109a10 <__alt_data_end+0xfffe9a10>
10109a90:	800b883a 	mov	r5,r16
10109a94:	9009883a 	mov	r4,r18
10109a98:	01043980 	call	10104398 <_fflush_r>
10109a9c:	1000071e 	bne	r2,zero,10109abc <__swbuf_r+0x114>
10109aa0:	80800017 	ldw	r2,0(r16)
10109aa4:	00c00044 	movi	r3,1
10109aa8:	003fda06 	br	10109a14 <__alt_data_end+0xfffe9a14>
10109aac:	800b883a 	mov	r5,r16
10109ab0:	9009883a 	mov	r4,r18
10109ab4:	01043980 	call	10104398 <_fflush_r>
10109ab8:	103fe326 	beq	r2,zero,10109a48 <__alt_data_end+0xfffe9a48>
10109abc:	00bfffc4 	movi	r2,-1
10109ac0:	003fe206 	br	10109a4c <__alt_data_end+0xfffe9a4c>
10109ac4:	800b883a 	mov	r5,r16
10109ac8:	9009883a 	mov	r4,r18
10109acc:	01027880 	call	10102788 <__swsetup_r>
10109ad0:	103ffa1e 	bne	r2,zero,10109abc <__alt_data_end+0xfffe9abc>
10109ad4:	8100030b 	ldhu	r4,12(r16)
10109ad8:	80c00417 	ldw	r3,16(r16)
10109adc:	003fc506 	br	101099f4 <__alt_data_end+0xfffe99f4>
10109ae0:	01047740 	call	10104774 <__sinit>
10109ae4:	003fbc06 	br	101099d8 <__alt_data_end+0xfffe99d8>

10109ae8 <__swbuf>:
10109ae8:	00840474 	movhi	r2,4113
10109aec:	10858804 	addi	r2,r2,5664
10109af0:	280d883a 	mov	r6,r5
10109af4:	200b883a 	mov	r5,r4
10109af8:	11000017 	ldw	r4,0(r2)
10109afc:	01099a81 	jmpi	101099a8 <__swbuf_r>

10109b00 <_wcrtomb_r>:
10109b00:	defff604 	addi	sp,sp,-40
10109b04:	00840474 	movhi	r2,4113
10109b08:	dc800815 	stw	r18,32(sp)
10109b0c:	dc400715 	stw	r17,28(sp)
10109b10:	dc000615 	stw	r16,24(sp)
10109b14:	10858c04 	addi	r2,r2,5680
10109b18:	dfc00915 	stw	ra,36(sp)
10109b1c:	2021883a 	mov	r16,r4
10109b20:	3823883a 	mov	r17,r7
10109b24:	14800017 	ldw	r18,0(r2)
10109b28:	28001426 	beq	r5,zero,10109b7c <_wcrtomb_r+0x7c>
10109b2c:	d9400415 	stw	r5,16(sp)
10109b30:	d9800515 	stw	r6,20(sp)
10109b34:	0104dfc0 	call	10104dfc <__locale_charset>
10109b38:	d9800517 	ldw	r6,20(sp)
10109b3c:	d9400417 	ldw	r5,16(sp)
10109b40:	100f883a 	mov	r7,r2
10109b44:	dc400015 	stw	r17,0(sp)
10109b48:	8009883a 	mov	r4,r16
10109b4c:	903ee83a 	callr	r18
10109b50:	00ffffc4 	movi	r3,-1
10109b54:	10c0031e 	bne	r2,r3,10109b64 <_wcrtomb_r+0x64>
10109b58:	88000015 	stw	zero,0(r17)
10109b5c:	00c02284 	movi	r3,138
10109b60:	80c00015 	stw	r3,0(r16)
10109b64:	dfc00917 	ldw	ra,36(sp)
10109b68:	dc800817 	ldw	r18,32(sp)
10109b6c:	dc400717 	ldw	r17,28(sp)
10109b70:	dc000617 	ldw	r16,24(sp)
10109b74:	dec00a04 	addi	sp,sp,40
10109b78:	f800283a 	ret
10109b7c:	0104dfc0 	call	10104dfc <__locale_charset>
10109b80:	100f883a 	mov	r7,r2
10109b84:	dc400015 	stw	r17,0(sp)
10109b88:	000d883a 	mov	r6,zero
10109b8c:	d9400104 	addi	r5,sp,4
10109b90:	8009883a 	mov	r4,r16
10109b94:	903ee83a 	callr	r18
10109b98:	003fed06 	br	10109b50 <__alt_data_end+0xfffe9b50>

10109b9c <wcrtomb>:
10109b9c:	defff604 	addi	sp,sp,-40
10109ba0:	00840474 	movhi	r2,4113
10109ba4:	dc800615 	stw	r18,24(sp)
10109ba8:	dc400515 	stw	r17,20(sp)
10109bac:	10858804 	addi	r2,r2,5664
10109bb0:	dfc00915 	stw	ra,36(sp)
10109bb4:	dd000815 	stw	r20,32(sp)
10109bb8:	dcc00715 	stw	r19,28(sp)
10109bbc:	dc000415 	stw	r16,16(sp)
10109bc0:	3025883a 	mov	r18,r6
10109bc4:	14400017 	ldw	r17,0(r2)
10109bc8:	20001926 	beq	r4,zero,10109c30 <wcrtomb+0x94>
10109bcc:	00840474 	movhi	r2,4113
10109bd0:	10858c04 	addi	r2,r2,5680
10109bd4:	15000017 	ldw	r20,0(r2)
10109bd8:	2021883a 	mov	r16,r4
10109bdc:	2827883a 	mov	r19,r5
10109be0:	0104dfc0 	call	10104dfc <__locale_charset>
10109be4:	100f883a 	mov	r7,r2
10109be8:	dc800015 	stw	r18,0(sp)
10109bec:	980d883a 	mov	r6,r19
10109bf0:	800b883a 	mov	r5,r16
10109bf4:	8809883a 	mov	r4,r17
10109bf8:	a03ee83a 	callr	r20
10109bfc:	00ffffc4 	movi	r3,-1
10109c00:	10c0031e 	bne	r2,r3,10109c10 <wcrtomb+0x74>
10109c04:	90000015 	stw	zero,0(r18)
10109c08:	00c02284 	movi	r3,138
10109c0c:	88c00015 	stw	r3,0(r17)
10109c10:	dfc00917 	ldw	ra,36(sp)
10109c14:	dd000817 	ldw	r20,32(sp)
10109c18:	dcc00717 	ldw	r19,28(sp)
10109c1c:	dc800617 	ldw	r18,24(sp)
10109c20:	dc400517 	ldw	r17,20(sp)
10109c24:	dc000417 	ldw	r16,16(sp)
10109c28:	dec00a04 	addi	sp,sp,40
10109c2c:	f800283a 	ret
10109c30:	00840474 	movhi	r2,4113
10109c34:	10858c04 	addi	r2,r2,5680
10109c38:	14000017 	ldw	r16,0(r2)
10109c3c:	0104dfc0 	call	10104dfc <__locale_charset>
10109c40:	100f883a 	mov	r7,r2
10109c44:	dc800015 	stw	r18,0(sp)
10109c48:	000d883a 	mov	r6,zero
10109c4c:	d9400104 	addi	r5,sp,4
10109c50:	8809883a 	mov	r4,r17
10109c54:	803ee83a 	callr	r16
10109c58:	003fe806 	br	10109bfc <__alt_data_end+0xfffe9bfc>

10109c5c <__ascii_wctomb>:
10109c5c:	28000526 	beq	r5,zero,10109c74 <__ascii_wctomb+0x18>
10109c60:	00803fc4 	movi	r2,255
10109c64:	11800536 	bltu	r2,r6,10109c7c <__ascii_wctomb+0x20>
10109c68:	29800005 	stb	r6,0(r5)
10109c6c:	00800044 	movi	r2,1
10109c70:	f800283a 	ret
10109c74:	0005883a 	mov	r2,zero
10109c78:	f800283a 	ret
10109c7c:	00802284 	movi	r2,138
10109c80:	20800015 	stw	r2,0(r4)
10109c84:	00bfffc4 	movi	r2,-1
10109c88:	f800283a 	ret

10109c8c <_wctomb_r>:
10109c8c:	00840474 	movhi	r2,4113
10109c90:	defff904 	addi	sp,sp,-28
10109c94:	10858c04 	addi	r2,r2,5680
10109c98:	dfc00615 	stw	ra,24(sp)
10109c9c:	dc400515 	stw	r17,20(sp)
10109ca0:	dc000415 	stw	r16,16(sp)
10109ca4:	3823883a 	mov	r17,r7
10109ca8:	14000017 	ldw	r16,0(r2)
10109cac:	d9000115 	stw	r4,4(sp)
10109cb0:	d9400215 	stw	r5,8(sp)
10109cb4:	d9800315 	stw	r6,12(sp)
10109cb8:	0104dfc0 	call	10104dfc <__locale_charset>
10109cbc:	d9800317 	ldw	r6,12(sp)
10109cc0:	d9400217 	ldw	r5,8(sp)
10109cc4:	d9000117 	ldw	r4,4(sp)
10109cc8:	100f883a 	mov	r7,r2
10109ccc:	dc400015 	stw	r17,0(sp)
10109cd0:	803ee83a 	callr	r16
10109cd4:	dfc00617 	ldw	ra,24(sp)
10109cd8:	dc400517 	ldw	r17,20(sp)
10109cdc:	dc000417 	ldw	r16,16(sp)
10109ce0:	dec00704 	addi	sp,sp,28
10109ce4:	f800283a 	ret

10109ce8 <__udivdi3>:
10109ce8:	defff504 	addi	sp,sp,-44
10109cec:	dcc00415 	stw	r19,16(sp)
10109cf0:	dc000115 	stw	r16,4(sp)
10109cf4:	dfc00a15 	stw	ra,40(sp)
10109cf8:	df000915 	stw	fp,36(sp)
10109cfc:	ddc00815 	stw	r23,32(sp)
10109d00:	dd800715 	stw	r22,28(sp)
10109d04:	dd400615 	stw	r21,24(sp)
10109d08:	dd000515 	stw	r20,20(sp)
10109d0c:	dc800315 	stw	r18,12(sp)
10109d10:	dc400215 	stw	r17,8(sp)
10109d14:	2027883a 	mov	r19,r4
10109d18:	2821883a 	mov	r16,r5
10109d1c:	3800411e 	bne	r7,zero,10109e24 <__udivdi3+0x13c>
10109d20:	3023883a 	mov	r17,r6
10109d24:	2025883a 	mov	r18,r4
10109d28:	2980522e 	bgeu	r5,r6,10109e74 <__udivdi3+0x18c>
10109d2c:	00bfffd4 	movui	r2,65535
10109d30:	282d883a 	mov	r22,r5
10109d34:	1180a836 	bltu	r2,r6,10109fd8 <__udivdi3+0x2f0>
10109d38:	00803fc4 	movi	r2,255
10109d3c:	1185803a 	cmpltu	r2,r2,r6
10109d40:	100490fa 	slli	r2,r2,3
10109d44:	3086d83a 	srl	r3,r6,r2
10109d48:	01040474 	movhi	r4,4113
10109d4c:	213e8d04 	addi	r4,r4,-1484
10109d50:	20c7883a 	add	r3,r4,r3
10109d54:	18c00003 	ldbu	r3,0(r3)
10109d58:	1885883a 	add	r2,r3,r2
10109d5c:	00c00804 	movi	r3,32
10109d60:	1887c83a 	sub	r3,r3,r2
10109d64:	18000526 	beq	r3,zero,10109d7c <__udivdi3+0x94>
10109d68:	80e0983a 	sll	r16,r16,r3
10109d6c:	9884d83a 	srl	r2,r19,r2
10109d70:	30e2983a 	sll	r17,r6,r3
10109d74:	98e4983a 	sll	r18,r19,r3
10109d78:	142cb03a 	or	r22,r2,r16
10109d7c:	882ad43a 	srli	r21,r17,16
10109d80:	b009883a 	mov	r4,r22
10109d84:	8d3fffcc 	andi	r20,r17,65535
10109d88:	a80b883a 	mov	r5,r21
10109d8c:	010a8f40 	call	1010a8f4 <__umodsi3>
10109d90:	b009883a 	mov	r4,r22
10109d94:	a80b883a 	mov	r5,r21
10109d98:	1027883a 	mov	r19,r2
10109d9c:	010a8900 	call	1010a890 <__udivsi3>
10109da0:	102d883a 	mov	r22,r2
10109da4:	9826943a 	slli	r19,r19,16
10109da8:	9004d43a 	srli	r2,r18,16
10109dac:	a5a1383a 	mul	r16,r20,r22
10109db0:	14c4b03a 	or	r2,r2,r19
10109db4:	1400052e 	bgeu	r2,r16,10109dcc <__udivdi3+0xe4>
10109db8:	1445883a 	add	r2,r2,r17
10109dbc:	b0ffffc4 	addi	r3,r22,-1
10109dc0:	14400136 	bltu	r2,r17,10109dc8 <__udivdi3+0xe0>
10109dc4:	14012336 	bltu	r2,r16,1010a254 <__udivdi3+0x56c>
10109dc8:	182d883a 	mov	r22,r3
10109dcc:	1421c83a 	sub	r16,r2,r16
10109dd0:	a80b883a 	mov	r5,r21
10109dd4:	8009883a 	mov	r4,r16
10109dd8:	010a8f40 	call	1010a8f4 <__umodsi3>
10109ddc:	1027883a 	mov	r19,r2
10109de0:	a80b883a 	mov	r5,r21
10109de4:	8009883a 	mov	r4,r16
10109de8:	010a8900 	call	1010a890 <__udivsi3>
10109dec:	9826943a 	slli	r19,r19,16
10109df0:	a0a9383a 	mul	r20,r20,r2
10109df4:	94bfffcc 	andi	r18,r18,65535
10109df8:	94e4b03a 	or	r18,r18,r19
10109dfc:	9500052e 	bgeu	r18,r20,10109e14 <__udivdi3+0x12c>
10109e00:	8ca5883a 	add	r18,r17,r18
10109e04:	10ffffc4 	addi	r3,r2,-1
10109e08:	9440f136 	bltu	r18,r17,1010a1d0 <__udivdi3+0x4e8>
10109e0c:	9500f02e 	bgeu	r18,r20,1010a1d0 <__udivdi3+0x4e8>
10109e10:	10bfff84 	addi	r2,r2,-2
10109e14:	b00c943a 	slli	r6,r22,16
10109e18:	0007883a 	mov	r3,zero
10109e1c:	3084b03a 	or	r2,r6,r2
10109e20:	00005906 	br	10109f88 <__udivdi3+0x2a0>
10109e24:	29c05636 	bltu	r5,r7,10109f80 <__udivdi3+0x298>
10109e28:	00bfffd4 	movui	r2,65535
10109e2c:	11c0622e 	bgeu	r2,r7,10109fb8 <__udivdi3+0x2d0>
10109e30:	00804034 	movhi	r2,256
10109e34:	10bfffc4 	addi	r2,r2,-1
10109e38:	11c0ee36 	bltu	r2,r7,1010a1f4 <__udivdi3+0x50c>
10109e3c:	00800404 	movi	r2,16
10109e40:	3886d83a 	srl	r3,r7,r2
10109e44:	01040474 	movhi	r4,4113
10109e48:	213e8d04 	addi	r4,r4,-1484
10109e4c:	20c7883a 	add	r3,r4,r3
10109e50:	18c00003 	ldbu	r3,0(r3)
10109e54:	05400804 	movi	r21,32
10109e58:	1885883a 	add	r2,r3,r2
10109e5c:	a8abc83a 	sub	r21,r21,r2
10109e60:	a800621e 	bne	r21,zero,10109fec <__udivdi3+0x304>
10109e64:	3c00e936 	bltu	r7,r16,1010a20c <__udivdi3+0x524>
10109e68:	9985403a 	cmpgeu	r2,r19,r6
10109e6c:	0007883a 	mov	r3,zero
10109e70:	00004506 	br	10109f88 <__udivdi3+0x2a0>
10109e74:	3000041e 	bne	r6,zero,10109e88 <__udivdi3+0x1a0>
10109e78:	000b883a 	mov	r5,zero
10109e7c:	01000044 	movi	r4,1
10109e80:	010a8900 	call	1010a890 <__udivsi3>
10109e84:	1023883a 	mov	r17,r2
10109e88:	00bfffd4 	movui	r2,65535
10109e8c:	14404e2e 	bgeu	r2,r17,10109fc8 <__udivdi3+0x2e0>
10109e90:	00804034 	movhi	r2,256
10109e94:	10bfffc4 	addi	r2,r2,-1
10109e98:	1440d836 	bltu	r2,r17,1010a1fc <__udivdi3+0x514>
10109e9c:	00800404 	movi	r2,16
10109ea0:	8886d83a 	srl	r3,r17,r2
10109ea4:	01040474 	movhi	r4,4113
10109ea8:	213e8d04 	addi	r4,r4,-1484
10109eac:	20c7883a 	add	r3,r4,r3
10109eb0:	18c00003 	ldbu	r3,0(r3)
10109eb4:	1885883a 	add	r2,r3,r2
10109eb8:	00c00804 	movi	r3,32
10109ebc:	1887c83a 	sub	r3,r3,r2
10109ec0:	18008f1e 	bne	r3,zero,1010a100 <__udivdi3+0x418>
10109ec4:	882ad43a 	srli	r21,r17,16
10109ec8:	8461c83a 	sub	r16,r16,r17
10109ecc:	8d3fffcc 	andi	r20,r17,65535
10109ed0:	00c00044 	movi	r3,1
10109ed4:	8009883a 	mov	r4,r16
10109ed8:	a80b883a 	mov	r5,r21
10109edc:	d8c00015 	stw	r3,0(sp)
10109ee0:	010a8f40 	call	1010a8f4 <__umodsi3>
10109ee4:	8009883a 	mov	r4,r16
10109ee8:	a80b883a 	mov	r5,r21
10109eec:	1027883a 	mov	r19,r2
10109ef0:	010a8900 	call	1010a890 <__udivsi3>
10109ef4:	9826943a 	slli	r19,r19,16
10109ef8:	9008d43a 	srli	r4,r18,16
10109efc:	1521383a 	mul	r16,r2,r20
10109f00:	102d883a 	mov	r22,r2
10109f04:	24c8b03a 	or	r4,r4,r19
10109f08:	d8c00017 	ldw	r3,0(sp)
10109f0c:	2400052e 	bgeu	r4,r16,10109f24 <__udivdi3+0x23c>
10109f10:	2449883a 	add	r4,r4,r17
10109f14:	b0bfffc4 	addi	r2,r22,-1
10109f18:	24400136 	bltu	r4,r17,10109f20 <__udivdi3+0x238>
10109f1c:	2400ca36 	bltu	r4,r16,1010a248 <__udivdi3+0x560>
10109f20:	102d883a 	mov	r22,r2
10109f24:	2421c83a 	sub	r16,r4,r16
10109f28:	a80b883a 	mov	r5,r21
10109f2c:	8009883a 	mov	r4,r16
10109f30:	d8c00015 	stw	r3,0(sp)
10109f34:	010a8f40 	call	1010a8f4 <__umodsi3>
10109f38:	1027883a 	mov	r19,r2
10109f3c:	a80b883a 	mov	r5,r21
10109f40:	8009883a 	mov	r4,r16
10109f44:	010a8900 	call	1010a890 <__udivsi3>
10109f48:	9826943a 	slli	r19,r19,16
10109f4c:	1529383a 	mul	r20,r2,r20
10109f50:	94bfffcc 	andi	r18,r18,65535
10109f54:	94e4b03a 	or	r18,r18,r19
10109f58:	d8c00017 	ldw	r3,0(sp)
10109f5c:	9500052e 	bgeu	r18,r20,10109f74 <__udivdi3+0x28c>
10109f60:	8ca5883a 	add	r18,r17,r18
10109f64:	113fffc4 	addi	r4,r2,-1
10109f68:	94409736 	bltu	r18,r17,1010a1c8 <__udivdi3+0x4e0>
10109f6c:	9500962e 	bgeu	r18,r20,1010a1c8 <__udivdi3+0x4e0>
10109f70:	10bfff84 	addi	r2,r2,-2
10109f74:	b00c943a 	slli	r6,r22,16
10109f78:	3084b03a 	or	r2,r6,r2
10109f7c:	00000206 	br	10109f88 <__udivdi3+0x2a0>
10109f80:	0007883a 	mov	r3,zero
10109f84:	0005883a 	mov	r2,zero
10109f88:	dfc00a17 	ldw	ra,40(sp)
10109f8c:	df000917 	ldw	fp,36(sp)
10109f90:	ddc00817 	ldw	r23,32(sp)
10109f94:	dd800717 	ldw	r22,28(sp)
10109f98:	dd400617 	ldw	r21,24(sp)
10109f9c:	dd000517 	ldw	r20,20(sp)
10109fa0:	dcc00417 	ldw	r19,16(sp)
10109fa4:	dc800317 	ldw	r18,12(sp)
10109fa8:	dc400217 	ldw	r17,8(sp)
10109fac:	dc000117 	ldw	r16,4(sp)
10109fb0:	dec00b04 	addi	sp,sp,44
10109fb4:	f800283a 	ret
10109fb8:	00803fc4 	movi	r2,255
10109fbc:	11c5803a 	cmpltu	r2,r2,r7
10109fc0:	100490fa 	slli	r2,r2,3
10109fc4:	003f9e06 	br	10109e40 <__alt_data_end+0xfffe9e40>
10109fc8:	00803fc4 	movi	r2,255
10109fcc:	1445803a 	cmpltu	r2,r2,r17
10109fd0:	100490fa 	slli	r2,r2,3
10109fd4:	003fb206 	br	10109ea0 <__alt_data_end+0xfffe9ea0>
10109fd8:	00804034 	movhi	r2,256
10109fdc:	10bfffc4 	addi	r2,r2,-1
10109fe0:	11808836 	bltu	r2,r6,1010a204 <__udivdi3+0x51c>
10109fe4:	00800404 	movi	r2,16
10109fe8:	003f5606 	br	10109d44 <__alt_data_end+0xfffe9d44>
10109fec:	30aed83a 	srl	r23,r6,r2
10109ff0:	3d4e983a 	sll	r7,r7,r21
10109ff4:	80acd83a 	srl	r22,r16,r2
10109ff8:	9884d83a 	srl	r2,r19,r2
10109ffc:	3deeb03a 	or	r23,r7,r23
1010a000:	b824d43a 	srli	r18,r23,16
1010a004:	8560983a 	sll	r16,r16,r21
1010a008:	b009883a 	mov	r4,r22
1010a00c:	900b883a 	mov	r5,r18
1010a010:	3568983a 	sll	r20,r6,r21
1010a014:	1420b03a 	or	r16,r2,r16
1010a018:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a01c:	b009883a 	mov	r4,r22
1010a020:	900b883a 	mov	r5,r18
1010a024:	1023883a 	mov	r17,r2
1010a028:	010a8900 	call	1010a890 <__udivsi3>
1010a02c:	8808943a 	slli	r4,r17,16
1010a030:	bf3fffcc 	andi	fp,r23,65535
1010a034:	8006d43a 	srli	r3,r16,16
1010a038:	e0a3383a 	mul	r17,fp,r2
1010a03c:	100d883a 	mov	r6,r2
1010a040:	1906b03a 	or	r3,r3,r4
1010a044:	1c40042e 	bgeu	r3,r17,1010a058 <__udivdi3+0x370>
1010a048:	1dc7883a 	add	r3,r3,r23
1010a04c:	10bfffc4 	addi	r2,r2,-1
1010a050:	1dc0752e 	bgeu	r3,r23,1010a228 <__udivdi3+0x540>
1010a054:	100d883a 	mov	r6,r2
1010a058:	1c63c83a 	sub	r17,r3,r17
1010a05c:	900b883a 	mov	r5,r18
1010a060:	8809883a 	mov	r4,r17
1010a064:	d9800015 	stw	r6,0(sp)
1010a068:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a06c:	102d883a 	mov	r22,r2
1010a070:	8809883a 	mov	r4,r17
1010a074:	900b883a 	mov	r5,r18
1010a078:	010a8900 	call	1010a890 <__udivsi3>
1010a07c:	b02c943a 	slli	r22,r22,16
1010a080:	e089383a 	mul	r4,fp,r2
1010a084:	843fffcc 	andi	r16,r16,65535
1010a088:	85a0b03a 	or	r16,r16,r22
1010a08c:	d9800017 	ldw	r6,0(sp)
1010a090:	8100042e 	bgeu	r16,r4,1010a0a4 <__udivdi3+0x3bc>
1010a094:	85e1883a 	add	r16,r16,r23
1010a098:	10ffffc4 	addi	r3,r2,-1
1010a09c:	85c05e2e 	bgeu	r16,r23,1010a218 <__udivdi3+0x530>
1010a0a0:	1805883a 	mov	r2,r3
1010a0a4:	300c943a 	slli	r6,r6,16
1010a0a8:	a17fffcc 	andi	r5,r20,65535
1010a0ac:	a028d43a 	srli	r20,r20,16
1010a0b0:	3084b03a 	or	r2,r6,r2
1010a0b4:	10ffffcc 	andi	r3,r2,65535
1010a0b8:	100cd43a 	srli	r6,r2,16
1010a0bc:	194f383a 	mul	r7,r3,r5
1010a0c0:	1d07383a 	mul	r3,r3,r20
1010a0c4:	314b383a 	mul	r5,r6,r5
1010a0c8:	3810d43a 	srli	r8,r7,16
1010a0cc:	8121c83a 	sub	r16,r16,r4
1010a0d0:	1947883a 	add	r3,r3,r5
1010a0d4:	40c7883a 	add	r3,r8,r3
1010a0d8:	350d383a 	mul	r6,r6,r20
1010a0dc:	1940022e 	bgeu	r3,r5,1010a0e8 <__udivdi3+0x400>
1010a0e0:	01000074 	movhi	r4,1
1010a0e4:	310d883a 	add	r6,r6,r4
1010a0e8:	1828d43a 	srli	r20,r3,16
1010a0ec:	a18d883a 	add	r6,r20,r6
1010a0f0:	81803e36 	bltu	r16,r6,1010a1ec <__udivdi3+0x504>
1010a0f4:	81803826 	beq	r16,r6,1010a1d8 <__udivdi3+0x4f0>
1010a0f8:	0007883a 	mov	r3,zero
1010a0fc:	003fa206 	br	10109f88 <__alt_data_end+0xfffe9f88>
1010a100:	88e2983a 	sll	r17,r17,r3
1010a104:	80a8d83a 	srl	r20,r16,r2
1010a108:	80e0983a 	sll	r16,r16,r3
1010a10c:	882ad43a 	srli	r21,r17,16
1010a110:	9884d83a 	srl	r2,r19,r2
1010a114:	a009883a 	mov	r4,r20
1010a118:	a80b883a 	mov	r5,r21
1010a11c:	142eb03a 	or	r23,r2,r16
1010a120:	98e4983a 	sll	r18,r19,r3
1010a124:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a128:	a009883a 	mov	r4,r20
1010a12c:	a80b883a 	mov	r5,r21
1010a130:	1021883a 	mov	r16,r2
1010a134:	010a8900 	call	1010a890 <__udivsi3>
1010a138:	1039883a 	mov	fp,r2
1010a13c:	8d3fffcc 	andi	r20,r17,65535
1010a140:	8020943a 	slli	r16,r16,16
1010a144:	b804d43a 	srli	r2,r23,16
1010a148:	a72d383a 	mul	r22,r20,fp
1010a14c:	1404b03a 	or	r2,r2,r16
1010a150:	1580062e 	bgeu	r2,r22,1010a16c <__udivdi3+0x484>
1010a154:	1445883a 	add	r2,r2,r17
1010a158:	e0ffffc4 	addi	r3,fp,-1
1010a15c:	14403836 	bltu	r2,r17,1010a240 <__udivdi3+0x558>
1010a160:	1580372e 	bgeu	r2,r22,1010a240 <__udivdi3+0x558>
1010a164:	e73fff84 	addi	fp,fp,-2
1010a168:	1445883a 	add	r2,r2,r17
1010a16c:	15adc83a 	sub	r22,r2,r22
1010a170:	a80b883a 	mov	r5,r21
1010a174:	b009883a 	mov	r4,r22
1010a178:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a17c:	1027883a 	mov	r19,r2
1010a180:	b009883a 	mov	r4,r22
1010a184:	a80b883a 	mov	r5,r21
1010a188:	010a8900 	call	1010a890 <__udivsi3>
1010a18c:	9826943a 	slli	r19,r19,16
1010a190:	a0a1383a 	mul	r16,r20,r2
1010a194:	b93fffcc 	andi	r4,r23,65535
1010a198:	24c8b03a 	or	r4,r4,r19
1010a19c:	2400062e 	bgeu	r4,r16,1010a1b8 <__udivdi3+0x4d0>
1010a1a0:	2449883a 	add	r4,r4,r17
1010a1a4:	10ffffc4 	addi	r3,r2,-1
1010a1a8:	24402336 	bltu	r4,r17,1010a238 <__udivdi3+0x550>
1010a1ac:	2400222e 	bgeu	r4,r16,1010a238 <__udivdi3+0x550>
1010a1b0:	10bfff84 	addi	r2,r2,-2
1010a1b4:	2449883a 	add	r4,r4,r17
1010a1b8:	e038943a 	slli	fp,fp,16
1010a1bc:	2421c83a 	sub	r16,r4,r16
1010a1c0:	e086b03a 	or	r3,fp,r2
1010a1c4:	003f4306 	br	10109ed4 <__alt_data_end+0xfffe9ed4>
1010a1c8:	2005883a 	mov	r2,r4
1010a1cc:	003f6906 	br	10109f74 <__alt_data_end+0xfffe9f74>
1010a1d0:	1805883a 	mov	r2,r3
1010a1d4:	003f0f06 	br	10109e14 <__alt_data_end+0xfffe9e14>
1010a1d8:	1806943a 	slli	r3,r3,16
1010a1dc:	9d66983a 	sll	r19,r19,r21
1010a1e0:	39ffffcc 	andi	r7,r7,65535
1010a1e4:	19c7883a 	add	r3,r3,r7
1010a1e8:	98ffc32e 	bgeu	r19,r3,1010a0f8 <__alt_data_end+0xfffea0f8>
1010a1ec:	10bfffc4 	addi	r2,r2,-1
1010a1f0:	003fc106 	br	1010a0f8 <__alt_data_end+0xfffea0f8>
1010a1f4:	00800604 	movi	r2,24
1010a1f8:	003f1106 	br	10109e40 <__alt_data_end+0xfffe9e40>
1010a1fc:	00800604 	movi	r2,24
1010a200:	003f2706 	br	10109ea0 <__alt_data_end+0xfffe9ea0>
1010a204:	00800604 	movi	r2,24
1010a208:	003ece06 	br	10109d44 <__alt_data_end+0xfffe9d44>
1010a20c:	0007883a 	mov	r3,zero
1010a210:	00800044 	movi	r2,1
1010a214:	003f5c06 	br	10109f88 <__alt_data_end+0xfffe9f88>
1010a218:	813fa12e 	bgeu	r16,r4,1010a0a0 <__alt_data_end+0xfffea0a0>
1010a21c:	10bfff84 	addi	r2,r2,-2
1010a220:	85e1883a 	add	r16,r16,r23
1010a224:	003f9f06 	br	1010a0a4 <__alt_data_end+0xfffea0a4>
1010a228:	1c7f8a2e 	bgeu	r3,r17,1010a054 <__alt_data_end+0xfffea054>
1010a22c:	31bfff84 	addi	r6,r6,-2
1010a230:	1dc7883a 	add	r3,r3,r23
1010a234:	003f8806 	br	1010a058 <__alt_data_end+0xfffea058>
1010a238:	1805883a 	mov	r2,r3
1010a23c:	003fde06 	br	1010a1b8 <__alt_data_end+0xfffea1b8>
1010a240:	1839883a 	mov	fp,r3
1010a244:	003fc906 	br	1010a16c <__alt_data_end+0xfffea16c>
1010a248:	b5bfff84 	addi	r22,r22,-2
1010a24c:	2449883a 	add	r4,r4,r17
1010a250:	003f3406 	br	10109f24 <__alt_data_end+0xfffe9f24>
1010a254:	b5bfff84 	addi	r22,r22,-2
1010a258:	1445883a 	add	r2,r2,r17
1010a25c:	003edb06 	br	10109dcc <__alt_data_end+0xfffe9dcc>

1010a260 <__umoddi3>:
1010a260:	defff404 	addi	sp,sp,-48
1010a264:	df000a15 	stw	fp,40(sp)
1010a268:	dc400315 	stw	r17,12(sp)
1010a26c:	dc000215 	stw	r16,8(sp)
1010a270:	dfc00b15 	stw	ra,44(sp)
1010a274:	ddc00915 	stw	r23,36(sp)
1010a278:	dd800815 	stw	r22,32(sp)
1010a27c:	dd400715 	stw	r21,28(sp)
1010a280:	dd000615 	stw	r20,24(sp)
1010a284:	dcc00515 	stw	r19,20(sp)
1010a288:	dc800415 	stw	r18,16(sp)
1010a28c:	2021883a 	mov	r16,r4
1010a290:	2823883a 	mov	r17,r5
1010a294:	2839883a 	mov	fp,r5
1010a298:	38003c1e 	bne	r7,zero,1010a38c <__umoddi3+0x12c>
1010a29c:	3027883a 	mov	r19,r6
1010a2a0:	2029883a 	mov	r20,r4
1010a2a4:	2980512e 	bgeu	r5,r6,1010a3ec <__umoddi3+0x18c>
1010a2a8:	00bfffd4 	movui	r2,65535
1010a2ac:	11809a36 	bltu	r2,r6,1010a518 <__umoddi3+0x2b8>
1010a2b0:	01003fc4 	movi	r4,255
1010a2b4:	2189803a 	cmpltu	r4,r4,r6
1010a2b8:	200890fa 	slli	r4,r4,3
1010a2bc:	3104d83a 	srl	r2,r6,r4
1010a2c0:	00c40474 	movhi	r3,4113
1010a2c4:	18fe8d04 	addi	r3,r3,-1484
1010a2c8:	1885883a 	add	r2,r3,r2
1010a2cc:	10c00003 	ldbu	r3,0(r2)
1010a2d0:	00800804 	movi	r2,32
1010a2d4:	1909883a 	add	r4,r3,r4
1010a2d8:	1125c83a 	sub	r18,r2,r4
1010a2dc:	90000526 	beq	r18,zero,1010a2f4 <__umoddi3+0x94>
1010a2e0:	8ca2983a 	sll	r17,r17,r18
1010a2e4:	8108d83a 	srl	r4,r16,r4
1010a2e8:	34a6983a 	sll	r19,r6,r18
1010a2ec:	84a8983a 	sll	r20,r16,r18
1010a2f0:	2478b03a 	or	fp,r4,r17
1010a2f4:	982ed43a 	srli	r23,r19,16
1010a2f8:	e009883a 	mov	r4,fp
1010a2fc:	9dbfffcc 	andi	r22,r19,65535
1010a300:	b80b883a 	mov	r5,r23
1010a304:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a308:	e009883a 	mov	r4,fp
1010a30c:	b80b883a 	mov	r5,r23
1010a310:	102b883a 	mov	r21,r2
1010a314:	010a8900 	call	1010a890 <__udivsi3>
1010a318:	a806943a 	slli	r3,r21,16
1010a31c:	a008d43a 	srli	r4,r20,16
1010a320:	b085383a 	mul	r2,r22,r2
1010a324:	20c8b03a 	or	r4,r4,r3
1010a328:	2080032e 	bgeu	r4,r2,1010a338 <__umoddi3+0xd8>
1010a32c:	24c9883a 	add	r4,r4,r19
1010a330:	24c00136 	bltu	r4,r19,1010a338 <__umoddi3+0xd8>
1010a334:	20811036 	bltu	r4,r2,1010a778 <__umoddi3+0x518>
1010a338:	20abc83a 	sub	r21,r4,r2
1010a33c:	b80b883a 	mov	r5,r23
1010a340:	a809883a 	mov	r4,r21
1010a344:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a348:	1023883a 	mov	r17,r2
1010a34c:	b80b883a 	mov	r5,r23
1010a350:	a809883a 	mov	r4,r21
1010a354:	010a8900 	call	1010a890 <__udivsi3>
1010a358:	8822943a 	slli	r17,r17,16
1010a35c:	b085383a 	mul	r2,r22,r2
1010a360:	a0ffffcc 	andi	r3,r20,65535
1010a364:	1c46b03a 	or	r3,r3,r17
1010a368:	1880042e 	bgeu	r3,r2,1010a37c <__umoddi3+0x11c>
1010a36c:	1cc7883a 	add	r3,r3,r19
1010a370:	1cc00236 	bltu	r3,r19,1010a37c <__umoddi3+0x11c>
1010a374:	1880012e 	bgeu	r3,r2,1010a37c <__umoddi3+0x11c>
1010a378:	1cc7883a 	add	r3,r3,r19
1010a37c:	1885c83a 	sub	r2,r3,r2
1010a380:	1484d83a 	srl	r2,r2,r18
1010a384:	0007883a 	mov	r3,zero
1010a388:	00004f06 	br	1010a4c8 <__umoddi3+0x268>
1010a38c:	29c04c36 	bltu	r5,r7,1010a4c0 <__umoddi3+0x260>
1010a390:	00bfffd4 	movui	r2,65535
1010a394:	11c0582e 	bgeu	r2,r7,1010a4f8 <__umoddi3+0x298>
1010a398:	00804034 	movhi	r2,256
1010a39c:	10bfffc4 	addi	r2,r2,-1
1010a3a0:	11c0e736 	bltu	r2,r7,1010a740 <__umoddi3+0x4e0>
1010a3a4:	01000404 	movi	r4,16
1010a3a8:	3904d83a 	srl	r2,r7,r4
1010a3ac:	00c40474 	movhi	r3,4113
1010a3b0:	18fe8d04 	addi	r3,r3,-1484
1010a3b4:	1885883a 	add	r2,r3,r2
1010a3b8:	14c00003 	ldbu	r19,0(r2)
1010a3bc:	00c00804 	movi	r3,32
1010a3c0:	9927883a 	add	r19,r19,r4
1010a3c4:	1ce9c83a 	sub	r20,r3,r19
1010a3c8:	a000581e 	bne	r20,zero,1010a52c <__umoddi3+0x2cc>
1010a3cc:	3c400136 	bltu	r7,r17,1010a3d4 <__umoddi3+0x174>
1010a3d0:	8180eb36 	bltu	r16,r6,1010a780 <__umoddi3+0x520>
1010a3d4:	8185c83a 	sub	r2,r16,r6
1010a3d8:	89e3c83a 	sub	r17,r17,r7
1010a3dc:	8089803a 	cmpltu	r4,r16,r2
1010a3e0:	8939c83a 	sub	fp,r17,r4
1010a3e4:	e007883a 	mov	r3,fp
1010a3e8:	00003706 	br	1010a4c8 <__umoddi3+0x268>
1010a3ec:	3000041e 	bne	r6,zero,1010a400 <__umoddi3+0x1a0>
1010a3f0:	000b883a 	mov	r5,zero
1010a3f4:	01000044 	movi	r4,1
1010a3f8:	010a8900 	call	1010a890 <__udivsi3>
1010a3fc:	1027883a 	mov	r19,r2
1010a400:	00bfffd4 	movui	r2,65535
1010a404:	14c0402e 	bgeu	r2,r19,1010a508 <__umoddi3+0x2a8>
1010a408:	00804034 	movhi	r2,256
1010a40c:	10bfffc4 	addi	r2,r2,-1
1010a410:	14c0cd36 	bltu	r2,r19,1010a748 <__umoddi3+0x4e8>
1010a414:	00800404 	movi	r2,16
1010a418:	9886d83a 	srl	r3,r19,r2
1010a41c:	01040474 	movhi	r4,4113
1010a420:	213e8d04 	addi	r4,r4,-1484
1010a424:	20c7883a 	add	r3,r4,r3
1010a428:	18c00003 	ldbu	r3,0(r3)
1010a42c:	1887883a 	add	r3,r3,r2
1010a430:	00800804 	movi	r2,32
1010a434:	10e5c83a 	sub	r18,r2,r3
1010a438:	9000901e 	bne	r18,zero,1010a67c <__umoddi3+0x41c>
1010a43c:	982cd43a 	srli	r22,r19,16
1010a440:	8ce3c83a 	sub	r17,r17,r19
1010a444:	9d7fffcc 	andi	r21,r19,65535
1010a448:	b00b883a 	mov	r5,r22
1010a44c:	8809883a 	mov	r4,r17
1010a450:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a454:	8809883a 	mov	r4,r17
1010a458:	b00b883a 	mov	r5,r22
1010a45c:	1021883a 	mov	r16,r2
1010a460:	010a8900 	call	1010a890 <__udivsi3>
1010a464:	8006943a 	slli	r3,r16,16
1010a468:	a008d43a 	srli	r4,r20,16
1010a46c:	1545383a 	mul	r2,r2,r21
1010a470:	20c8b03a 	or	r4,r4,r3
1010a474:	2080042e 	bgeu	r4,r2,1010a488 <__umoddi3+0x228>
1010a478:	24c9883a 	add	r4,r4,r19
1010a47c:	24c00236 	bltu	r4,r19,1010a488 <__umoddi3+0x228>
1010a480:	2080012e 	bgeu	r4,r2,1010a488 <__umoddi3+0x228>
1010a484:	24c9883a 	add	r4,r4,r19
1010a488:	20a1c83a 	sub	r16,r4,r2
1010a48c:	b00b883a 	mov	r5,r22
1010a490:	8009883a 	mov	r4,r16
1010a494:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a498:	1023883a 	mov	r17,r2
1010a49c:	b00b883a 	mov	r5,r22
1010a4a0:	8009883a 	mov	r4,r16
1010a4a4:	010a8900 	call	1010a890 <__udivsi3>
1010a4a8:	8822943a 	slli	r17,r17,16
1010a4ac:	1545383a 	mul	r2,r2,r21
1010a4b0:	a53fffcc 	andi	r20,r20,65535
1010a4b4:	a446b03a 	or	r3,r20,r17
1010a4b8:	18bfb02e 	bgeu	r3,r2,1010a37c <__alt_data_end+0xfffea37c>
1010a4bc:	003fab06 	br	1010a36c <__alt_data_end+0xfffea36c>
1010a4c0:	2005883a 	mov	r2,r4
1010a4c4:	2807883a 	mov	r3,r5
1010a4c8:	dfc00b17 	ldw	ra,44(sp)
1010a4cc:	df000a17 	ldw	fp,40(sp)
1010a4d0:	ddc00917 	ldw	r23,36(sp)
1010a4d4:	dd800817 	ldw	r22,32(sp)
1010a4d8:	dd400717 	ldw	r21,28(sp)
1010a4dc:	dd000617 	ldw	r20,24(sp)
1010a4e0:	dcc00517 	ldw	r19,20(sp)
1010a4e4:	dc800417 	ldw	r18,16(sp)
1010a4e8:	dc400317 	ldw	r17,12(sp)
1010a4ec:	dc000217 	ldw	r16,8(sp)
1010a4f0:	dec00c04 	addi	sp,sp,48
1010a4f4:	f800283a 	ret
1010a4f8:	04c03fc4 	movi	r19,255
1010a4fc:	99c9803a 	cmpltu	r4,r19,r7
1010a500:	200890fa 	slli	r4,r4,3
1010a504:	003fa806 	br	1010a3a8 <__alt_data_end+0xfffea3a8>
1010a508:	00803fc4 	movi	r2,255
1010a50c:	14c5803a 	cmpltu	r2,r2,r19
1010a510:	100490fa 	slli	r2,r2,3
1010a514:	003fc006 	br	1010a418 <__alt_data_end+0xfffea418>
1010a518:	00804034 	movhi	r2,256
1010a51c:	10bfffc4 	addi	r2,r2,-1
1010a520:	11808b36 	bltu	r2,r6,1010a750 <__umoddi3+0x4f0>
1010a524:	01000404 	movi	r4,16
1010a528:	003f6406 	br	1010a2bc <__alt_data_end+0xfffea2bc>
1010a52c:	34c4d83a 	srl	r2,r6,r19
1010a530:	3d0e983a 	sll	r7,r7,r20
1010a534:	8cf8d83a 	srl	fp,r17,r19
1010a538:	8d10983a 	sll	r8,r17,r20
1010a53c:	38aab03a 	or	r21,r7,r2
1010a540:	a82cd43a 	srli	r22,r21,16
1010a544:	84e2d83a 	srl	r17,r16,r19
1010a548:	e009883a 	mov	r4,fp
1010a54c:	b00b883a 	mov	r5,r22
1010a550:	8a22b03a 	or	r17,r17,r8
1010a554:	3524983a 	sll	r18,r6,r20
1010a558:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a55c:	e009883a 	mov	r4,fp
1010a560:	b00b883a 	mov	r5,r22
1010a564:	102f883a 	mov	r23,r2
1010a568:	010a8900 	call	1010a890 <__udivsi3>
1010a56c:	100d883a 	mov	r6,r2
1010a570:	b808943a 	slli	r4,r23,16
1010a574:	aa3fffcc 	andi	r8,r21,65535
1010a578:	8804d43a 	srli	r2,r17,16
1010a57c:	41af383a 	mul	r23,r8,r6
1010a580:	8520983a 	sll	r16,r16,r20
1010a584:	1104b03a 	or	r2,r2,r4
1010a588:	15c0042e 	bgeu	r2,r23,1010a59c <__umoddi3+0x33c>
1010a58c:	1545883a 	add	r2,r2,r21
1010a590:	30ffffc4 	addi	r3,r6,-1
1010a594:	1540742e 	bgeu	r2,r21,1010a768 <__umoddi3+0x508>
1010a598:	180d883a 	mov	r6,r3
1010a59c:	15efc83a 	sub	r23,r2,r23
1010a5a0:	b00b883a 	mov	r5,r22
1010a5a4:	b809883a 	mov	r4,r23
1010a5a8:	d9800115 	stw	r6,4(sp)
1010a5ac:	da000015 	stw	r8,0(sp)
1010a5b0:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a5b4:	b00b883a 	mov	r5,r22
1010a5b8:	b809883a 	mov	r4,r23
1010a5bc:	1039883a 	mov	fp,r2
1010a5c0:	010a8900 	call	1010a890 <__udivsi3>
1010a5c4:	da000017 	ldw	r8,0(sp)
1010a5c8:	e038943a 	slli	fp,fp,16
1010a5cc:	100b883a 	mov	r5,r2
1010a5d0:	4089383a 	mul	r4,r8,r2
1010a5d4:	8a3fffcc 	andi	r8,r17,65535
1010a5d8:	4710b03a 	or	r8,r8,fp
1010a5dc:	d9800117 	ldw	r6,4(sp)
1010a5e0:	4100042e 	bgeu	r8,r4,1010a5f4 <__umoddi3+0x394>
1010a5e4:	4551883a 	add	r8,r8,r21
1010a5e8:	10bfffc4 	addi	r2,r2,-1
1010a5ec:	45405a2e 	bgeu	r8,r21,1010a758 <__umoddi3+0x4f8>
1010a5f0:	100b883a 	mov	r5,r2
1010a5f4:	300c943a 	slli	r6,r6,16
1010a5f8:	91ffffcc 	andi	r7,r18,65535
1010a5fc:	9004d43a 	srli	r2,r18,16
1010a600:	314cb03a 	or	r6,r6,r5
1010a604:	317fffcc 	andi	r5,r6,65535
1010a608:	300cd43a 	srli	r6,r6,16
1010a60c:	29d3383a 	mul	r9,r5,r7
1010a610:	288b383a 	mul	r5,r5,r2
1010a614:	31cf383a 	mul	r7,r6,r7
1010a618:	4806d43a 	srli	r3,r9,16
1010a61c:	4111c83a 	sub	r8,r8,r4
1010a620:	29cb883a 	add	r5,r5,r7
1010a624:	194b883a 	add	r5,r3,r5
1010a628:	3085383a 	mul	r2,r6,r2
1010a62c:	29c0022e 	bgeu	r5,r7,1010a638 <__umoddi3+0x3d8>
1010a630:	00c00074 	movhi	r3,1
1010a634:	10c5883a 	add	r2,r2,r3
1010a638:	2808d43a 	srli	r4,r5,16
1010a63c:	280a943a 	slli	r5,r5,16
1010a640:	4a7fffcc 	andi	r9,r9,65535
1010a644:	2085883a 	add	r2,r4,r2
1010a648:	2a4b883a 	add	r5,r5,r9
1010a64c:	40803636 	bltu	r8,r2,1010a728 <__umoddi3+0x4c8>
1010a650:	40804d26 	beq	r8,r2,1010a788 <__umoddi3+0x528>
1010a654:	4089c83a 	sub	r4,r8,r2
1010a658:	280f883a 	mov	r7,r5
1010a65c:	81cfc83a 	sub	r7,r16,r7
1010a660:	81c7803a 	cmpltu	r3,r16,r7
1010a664:	20c7c83a 	sub	r3,r4,r3
1010a668:	1cc4983a 	sll	r2,r3,r19
1010a66c:	3d0ed83a 	srl	r7,r7,r20
1010a670:	1d06d83a 	srl	r3,r3,r20
1010a674:	11c4b03a 	or	r2,r2,r7
1010a678:	003f9306 	br	1010a4c8 <__alt_data_end+0xfffea4c8>
1010a67c:	9ca6983a 	sll	r19,r19,r18
1010a680:	88e8d83a 	srl	r20,r17,r3
1010a684:	80c4d83a 	srl	r2,r16,r3
1010a688:	982cd43a 	srli	r22,r19,16
1010a68c:	8ca2983a 	sll	r17,r17,r18
1010a690:	a009883a 	mov	r4,r20
1010a694:	b00b883a 	mov	r5,r22
1010a698:	1478b03a 	or	fp,r2,r17
1010a69c:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a6a0:	a009883a 	mov	r4,r20
1010a6a4:	b00b883a 	mov	r5,r22
1010a6a8:	1023883a 	mov	r17,r2
1010a6ac:	010a8900 	call	1010a890 <__udivsi3>
1010a6b0:	9d7fffcc 	andi	r21,r19,65535
1010a6b4:	880a943a 	slli	r5,r17,16
1010a6b8:	e008d43a 	srli	r4,fp,16
1010a6bc:	a885383a 	mul	r2,r21,r2
1010a6c0:	84a8983a 	sll	r20,r16,r18
1010a6c4:	2148b03a 	or	r4,r4,r5
1010a6c8:	2080042e 	bgeu	r4,r2,1010a6dc <__umoddi3+0x47c>
1010a6cc:	24c9883a 	add	r4,r4,r19
1010a6d0:	24c00236 	bltu	r4,r19,1010a6dc <__umoddi3+0x47c>
1010a6d4:	2080012e 	bgeu	r4,r2,1010a6dc <__umoddi3+0x47c>
1010a6d8:	24c9883a 	add	r4,r4,r19
1010a6dc:	20a3c83a 	sub	r17,r4,r2
1010a6e0:	b00b883a 	mov	r5,r22
1010a6e4:	8809883a 	mov	r4,r17
1010a6e8:	010a8f40 	call	1010a8f4 <__umodsi3>
1010a6ec:	102f883a 	mov	r23,r2
1010a6f0:	8809883a 	mov	r4,r17
1010a6f4:	b00b883a 	mov	r5,r22
1010a6f8:	010a8900 	call	1010a890 <__udivsi3>
1010a6fc:	b82e943a 	slli	r23,r23,16
1010a700:	a885383a 	mul	r2,r21,r2
1010a704:	e13fffcc 	andi	r4,fp,65535
1010a708:	25c8b03a 	or	r4,r4,r23
1010a70c:	2080042e 	bgeu	r4,r2,1010a720 <__umoddi3+0x4c0>
1010a710:	24c9883a 	add	r4,r4,r19
1010a714:	24c00236 	bltu	r4,r19,1010a720 <__umoddi3+0x4c0>
1010a718:	2080012e 	bgeu	r4,r2,1010a720 <__umoddi3+0x4c0>
1010a71c:	24c9883a 	add	r4,r4,r19
1010a720:	20a3c83a 	sub	r17,r4,r2
1010a724:	003f4806 	br	1010a448 <__alt_data_end+0xfffea448>
1010a728:	2c8fc83a 	sub	r7,r5,r18
1010a72c:	1545c83a 	sub	r2,r2,r21
1010a730:	29cb803a 	cmpltu	r5,r5,r7
1010a734:	1145c83a 	sub	r2,r2,r5
1010a738:	4089c83a 	sub	r4,r8,r2
1010a73c:	003fc706 	br	1010a65c <__alt_data_end+0xfffea65c>
1010a740:	01000604 	movi	r4,24
1010a744:	003f1806 	br	1010a3a8 <__alt_data_end+0xfffea3a8>
1010a748:	00800604 	movi	r2,24
1010a74c:	003f3206 	br	1010a418 <__alt_data_end+0xfffea418>
1010a750:	01000604 	movi	r4,24
1010a754:	003ed906 	br	1010a2bc <__alt_data_end+0xfffea2bc>
1010a758:	413fa52e 	bgeu	r8,r4,1010a5f0 <__alt_data_end+0xfffea5f0>
1010a75c:	297fff84 	addi	r5,r5,-2
1010a760:	4551883a 	add	r8,r8,r21
1010a764:	003fa306 	br	1010a5f4 <__alt_data_end+0xfffea5f4>
1010a768:	15ff8b2e 	bgeu	r2,r23,1010a598 <__alt_data_end+0xfffea598>
1010a76c:	31bfff84 	addi	r6,r6,-2
1010a770:	1545883a 	add	r2,r2,r21
1010a774:	003f8906 	br	1010a59c <__alt_data_end+0xfffea59c>
1010a778:	24c9883a 	add	r4,r4,r19
1010a77c:	003eee06 	br	1010a338 <__alt_data_end+0xfffea338>
1010a780:	8005883a 	mov	r2,r16
1010a784:	003f1706 	br	1010a3e4 <__alt_data_end+0xfffea3e4>
1010a788:	817fe736 	bltu	r16,r5,1010a728 <__alt_data_end+0xfffea728>
1010a78c:	280f883a 	mov	r7,r5
1010a790:	0009883a 	mov	r4,zero
1010a794:	003fb106 	br	1010a65c <__alt_data_end+0xfffea65c>

1010a798 <__divsi3>:
1010a798:	20001b16 	blt	r4,zero,1010a808 <__divsi3+0x70>
1010a79c:	000f883a 	mov	r7,zero
1010a7a0:	28001616 	blt	r5,zero,1010a7fc <__divsi3+0x64>
1010a7a4:	200d883a 	mov	r6,r4
1010a7a8:	29001a2e 	bgeu	r5,r4,1010a814 <__divsi3+0x7c>
1010a7ac:	00800804 	movi	r2,32
1010a7b0:	00c00044 	movi	r3,1
1010a7b4:	00000106 	br	1010a7bc <__divsi3+0x24>
1010a7b8:	10000d26 	beq	r2,zero,1010a7f0 <__divsi3+0x58>
1010a7bc:	294b883a 	add	r5,r5,r5
1010a7c0:	10bfffc4 	addi	r2,r2,-1
1010a7c4:	18c7883a 	add	r3,r3,r3
1010a7c8:	293ffb36 	bltu	r5,r4,1010a7b8 <__alt_data_end+0xfffea7b8>
1010a7cc:	0005883a 	mov	r2,zero
1010a7d0:	18000726 	beq	r3,zero,1010a7f0 <__divsi3+0x58>
1010a7d4:	0005883a 	mov	r2,zero
1010a7d8:	31400236 	bltu	r6,r5,1010a7e4 <__divsi3+0x4c>
1010a7dc:	314dc83a 	sub	r6,r6,r5
1010a7e0:	10c4b03a 	or	r2,r2,r3
1010a7e4:	1806d07a 	srli	r3,r3,1
1010a7e8:	280ad07a 	srli	r5,r5,1
1010a7ec:	183ffa1e 	bne	r3,zero,1010a7d8 <__alt_data_end+0xfffea7d8>
1010a7f0:	38000126 	beq	r7,zero,1010a7f8 <__divsi3+0x60>
1010a7f4:	0085c83a 	sub	r2,zero,r2
1010a7f8:	f800283a 	ret
1010a7fc:	014bc83a 	sub	r5,zero,r5
1010a800:	39c0005c 	xori	r7,r7,1
1010a804:	003fe706 	br	1010a7a4 <__alt_data_end+0xfffea7a4>
1010a808:	0109c83a 	sub	r4,zero,r4
1010a80c:	01c00044 	movi	r7,1
1010a810:	003fe306 	br	1010a7a0 <__alt_data_end+0xfffea7a0>
1010a814:	00c00044 	movi	r3,1
1010a818:	003fee06 	br	1010a7d4 <__alt_data_end+0xfffea7d4>

1010a81c <__modsi3>:
1010a81c:	20001716 	blt	r4,zero,1010a87c <__modsi3+0x60>
1010a820:	000f883a 	mov	r7,zero
1010a824:	2005883a 	mov	r2,r4
1010a828:	28001216 	blt	r5,zero,1010a874 <__modsi3+0x58>
1010a82c:	2900162e 	bgeu	r5,r4,1010a888 <__modsi3+0x6c>
1010a830:	01800804 	movi	r6,32
1010a834:	00c00044 	movi	r3,1
1010a838:	00000106 	br	1010a840 <__modsi3+0x24>
1010a83c:	30000a26 	beq	r6,zero,1010a868 <__modsi3+0x4c>
1010a840:	294b883a 	add	r5,r5,r5
1010a844:	31bfffc4 	addi	r6,r6,-1
1010a848:	18c7883a 	add	r3,r3,r3
1010a84c:	293ffb36 	bltu	r5,r4,1010a83c <__alt_data_end+0xfffea83c>
1010a850:	18000526 	beq	r3,zero,1010a868 <__modsi3+0x4c>
1010a854:	1806d07a 	srli	r3,r3,1
1010a858:	11400136 	bltu	r2,r5,1010a860 <__modsi3+0x44>
1010a85c:	1145c83a 	sub	r2,r2,r5
1010a860:	280ad07a 	srli	r5,r5,1
1010a864:	183ffb1e 	bne	r3,zero,1010a854 <__alt_data_end+0xfffea854>
1010a868:	38000126 	beq	r7,zero,1010a870 <__modsi3+0x54>
1010a86c:	0085c83a 	sub	r2,zero,r2
1010a870:	f800283a 	ret
1010a874:	014bc83a 	sub	r5,zero,r5
1010a878:	003fec06 	br	1010a82c <__alt_data_end+0xfffea82c>
1010a87c:	0109c83a 	sub	r4,zero,r4
1010a880:	01c00044 	movi	r7,1
1010a884:	003fe706 	br	1010a824 <__alt_data_end+0xfffea824>
1010a888:	00c00044 	movi	r3,1
1010a88c:	003ff106 	br	1010a854 <__alt_data_end+0xfffea854>

1010a890 <__udivsi3>:
1010a890:	200d883a 	mov	r6,r4
1010a894:	2900152e 	bgeu	r5,r4,1010a8ec <__udivsi3+0x5c>
1010a898:	28001416 	blt	r5,zero,1010a8ec <__udivsi3+0x5c>
1010a89c:	00800804 	movi	r2,32
1010a8a0:	00c00044 	movi	r3,1
1010a8a4:	00000206 	br	1010a8b0 <__udivsi3+0x20>
1010a8a8:	10000e26 	beq	r2,zero,1010a8e4 <__udivsi3+0x54>
1010a8ac:	28000516 	blt	r5,zero,1010a8c4 <__udivsi3+0x34>
1010a8b0:	294b883a 	add	r5,r5,r5
1010a8b4:	10bfffc4 	addi	r2,r2,-1
1010a8b8:	18c7883a 	add	r3,r3,r3
1010a8bc:	293ffa36 	bltu	r5,r4,1010a8a8 <__alt_data_end+0xfffea8a8>
1010a8c0:	18000826 	beq	r3,zero,1010a8e4 <__udivsi3+0x54>
1010a8c4:	0005883a 	mov	r2,zero
1010a8c8:	31400236 	bltu	r6,r5,1010a8d4 <__udivsi3+0x44>
1010a8cc:	314dc83a 	sub	r6,r6,r5
1010a8d0:	10c4b03a 	or	r2,r2,r3
1010a8d4:	1806d07a 	srli	r3,r3,1
1010a8d8:	280ad07a 	srli	r5,r5,1
1010a8dc:	183ffa1e 	bne	r3,zero,1010a8c8 <__alt_data_end+0xfffea8c8>
1010a8e0:	f800283a 	ret
1010a8e4:	0005883a 	mov	r2,zero
1010a8e8:	f800283a 	ret
1010a8ec:	00c00044 	movi	r3,1
1010a8f0:	003ff406 	br	1010a8c4 <__alt_data_end+0xfffea8c4>

1010a8f4 <__umodsi3>:
1010a8f4:	2005883a 	mov	r2,r4
1010a8f8:	2900122e 	bgeu	r5,r4,1010a944 <__umodsi3+0x50>
1010a8fc:	28001116 	blt	r5,zero,1010a944 <__umodsi3+0x50>
1010a900:	01800804 	movi	r6,32
1010a904:	00c00044 	movi	r3,1
1010a908:	00000206 	br	1010a914 <__umodsi3+0x20>
1010a90c:	30000c26 	beq	r6,zero,1010a940 <__umodsi3+0x4c>
1010a910:	28000516 	blt	r5,zero,1010a928 <__umodsi3+0x34>
1010a914:	294b883a 	add	r5,r5,r5
1010a918:	31bfffc4 	addi	r6,r6,-1
1010a91c:	18c7883a 	add	r3,r3,r3
1010a920:	293ffa36 	bltu	r5,r4,1010a90c <__alt_data_end+0xfffea90c>
1010a924:	18000626 	beq	r3,zero,1010a940 <__umodsi3+0x4c>
1010a928:	1806d07a 	srli	r3,r3,1
1010a92c:	11400136 	bltu	r2,r5,1010a934 <__umodsi3+0x40>
1010a930:	1145c83a 	sub	r2,r2,r5
1010a934:	280ad07a 	srli	r5,r5,1
1010a938:	183ffb1e 	bne	r3,zero,1010a928 <__alt_data_end+0xfffea928>
1010a93c:	f800283a 	ret
1010a940:	f800283a 	ret
1010a944:	00c00044 	movi	r3,1
1010a948:	003ff706 	br	1010a928 <__alt_data_end+0xfffea928>

1010a94c <__adddf3>:
1010a94c:	02c00434 	movhi	r11,16
1010a950:	5affffc4 	addi	r11,r11,-1
1010a954:	2806d7fa 	srli	r3,r5,31
1010a958:	2ad4703a 	and	r10,r5,r11
1010a95c:	3ad2703a 	and	r9,r7,r11
1010a960:	3804d53a 	srli	r2,r7,20
1010a964:	3018d77a 	srli	r12,r6,29
1010a968:	280ad53a 	srli	r5,r5,20
1010a96c:	501490fa 	slli	r10,r10,3
1010a970:	2010d77a 	srli	r8,r4,29
1010a974:	481290fa 	slli	r9,r9,3
1010a978:	380ed7fa 	srli	r7,r7,31
1010a97c:	defffb04 	addi	sp,sp,-20
1010a980:	dc800215 	stw	r18,8(sp)
1010a984:	dc400115 	stw	r17,4(sp)
1010a988:	dc000015 	stw	r16,0(sp)
1010a98c:	dfc00415 	stw	ra,16(sp)
1010a990:	dcc00315 	stw	r19,12(sp)
1010a994:	1c803fcc 	andi	r18,r3,255
1010a998:	2c01ffcc 	andi	r16,r5,2047
1010a99c:	5210b03a 	or	r8,r10,r8
1010a9a0:	202290fa 	slli	r17,r4,3
1010a9a4:	1081ffcc 	andi	r2,r2,2047
1010a9a8:	4b12b03a 	or	r9,r9,r12
1010a9ac:	300c90fa 	slli	r6,r6,3
1010a9b0:	91c07526 	beq	r18,r7,1010ab88 <__adddf3+0x23c>
1010a9b4:	8087c83a 	sub	r3,r16,r2
1010a9b8:	00c0ab0e 	bge	zero,r3,1010ac68 <__adddf3+0x31c>
1010a9bc:	10002a1e 	bne	r2,zero,1010aa68 <__adddf3+0x11c>
1010a9c0:	4984b03a 	or	r2,r9,r6
1010a9c4:	1000961e 	bne	r2,zero,1010ac20 <__adddf3+0x2d4>
1010a9c8:	888001cc 	andi	r2,r17,7
1010a9cc:	10000726 	beq	r2,zero,1010a9ec <__adddf3+0xa0>
1010a9d0:	888003cc 	andi	r2,r17,15
1010a9d4:	00c00104 	movi	r3,4
1010a9d8:	10c00426 	beq	r2,r3,1010a9ec <__adddf3+0xa0>
1010a9dc:	88c7883a 	add	r3,r17,r3
1010a9e0:	1c63803a 	cmpltu	r17,r3,r17
1010a9e4:	4451883a 	add	r8,r8,r17
1010a9e8:	1823883a 	mov	r17,r3
1010a9ec:	4080202c 	andhi	r2,r8,128
1010a9f0:	10005926 	beq	r2,zero,1010ab58 <__adddf3+0x20c>
1010a9f4:	84000044 	addi	r16,r16,1
1010a9f8:	0081ffc4 	movi	r2,2047
1010a9fc:	8080ba26 	beq	r16,r2,1010ace8 <__adddf3+0x39c>
1010aa00:	00bfe034 	movhi	r2,65408
1010aa04:	10bfffc4 	addi	r2,r2,-1
1010aa08:	4090703a 	and	r8,r8,r2
1010aa0c:	4004977a 	slli	r2,r8,29
1010aa10:	4010927a 	slli	r8,r8,9
1010aa14:	8822d0fa 	srli	r17,r17,3
1010aa18:	8401ffcc 	andi	r16,r16,2047
1010aa1c:	4010d33a 	srli	r8,r8,12
1010aa20:	9007883a 	mov	r3,r18
1010aa24:	1444b03a 	or	r2,r2,r17
1010aa28:	8401ffcc 	andi	r16,r16,2047
1010aa2c:	8020953a 	slli	r16,r16,20
1010aa30:	18c03fcc 	andi	r3,r3,255
1010aa34:	01000434 	movhi	r4,16
1010aa38:	213fffc4 	addi	r4,r4,-1
1010aa3c:	180697fa 	slli	r3,r3,31
1010aa40:	4110703a 	and	r8,r8,r4
1010aa44:	4410b03a 	or	r8,r8,r16
1010aa48:	40c6b03a 	or	r3,r8,r3
1010aa4c:	dfc00417 	ldw	ra,16(sp)
1010aa50:	dcc00317 	ldw	r19,12(sp)
1010aa54:	dc800217 	ldw	r18,8(sp)
1010aa58:	dc400117 	ldw	r17,4(sp)
1010aa5c:	dc000017 	ldw	r16,0(sp)
1010aa60:	dec00504 	addi	sp,sp,20
1010aa64:	f800283a 	ret
1010aa68:	0081ffc4 	movi	r2,2047
1010aa6c:	80bfd626 	beq	r16,r2,1010a9c8 <__alt_data_end+0xfffea9c8>
1010aa70:	4a402034 	orhi	r9,r9,128
1010aa74:	00800e04 	movi	r2,56
1010aa78:	10c09f16 	blt	r2,r3,1010acf8 <__adddf3+0x3ac>
1010aa7c:	008007c4 	movi	r2,31
1010aa80:	10c0c216 	blt	r2,r3,1010ad8c <__adddf3+0x440>
1010aa84:	00800804 	movi	r2,32
1010aa88:	10c5c83a 	sub	r2,r2,r3
1010aa8c:	488a983a 	sll	r5,r9,r2
1010aa90:	30c8d83a 	srl	r4,r6,r3
1010aa94:	3084983a 	sll	r2,r6,r2
1010aa98:	48c6d83a 	srl	r3,r9,r3
1010aa9c:	290cb03a 	or	r6,r5,r4
1010aaa0:	1004c03a 	cmpne	r2,r2,zero
1010aaa4:	308cb03a 	or	r6,r6,r2
1010aaa8:	898dc83a 	sub	r6,r17,r6
1010aaac:	89a3803a 	cmpltu	r17,r17,r6
1010aab0:	40d1c83a 	sub	r8,r8,r3
1010aab4:	4451c83a 	sub	r8,r8,r17
1010aab8:	3023883a 	mov	r17,r6
1010aabc:	4080202c 	andhi	r2,r8,128
1010aac0:	10002326 	beq	r2,zero,1010ab50 <__adddf3+0x204>
1010aac4:	04c02034 	movhi	r19,128
1010aac8:	9cffffc4 	addi	r19,r19,-1
1010aacc:	44e6703a 	and	r19,r8,r19
1010aad0:	98007626 	beq	r19,zero,1010acac <__adddf3+0x360>
1010aad4:	9809883a 	mov	r4,r19
1010aad8:	010cf500 	call	1010cf50 <__clzsi2>
1010aadc:	10fffe04 	addi	r3,r2,-8
1010aae0:	010007c4 	movi	r4,31
1010aae4:	20c07716 	blt	r4,r3,1010acc4 <__adddf3+0x378>
1010aae8:	00800804 	movi	r2,32
1010aaec:	10c5c83a 	sub	r2,r2,r3
1010aaf0:	8884d83a 	srl	r2,r17,r2
1010aaf4:	98d0983a 	sll	r8,r19,r3
1010aaf8:	88e2983a 	sll	r17,r17,r3
1010aafc:	1204b03a 	or	r2,r2,r8
1010ab00:	1c007416 	blt	r3,r16,1010acd4 <__adddf3+0x388>
1010ab04:	1c21c83a 	sub	r16,r3,r16
1010ab08:	82000044 	addi	r8,r16,1
1010ab0c:	00c007c4 	movi	r3,31
1010ab10:	1a009116 	blt	r3,r8,1010ad58 <__adddf3+0x40c>
1010ab14:	00c00804 	movi	r3,32
1010ab18:	1a07c83a 	sub	r3,r3,r8
1010ab1c:	8a08d83a 	srl	r4,r17,r8
1010ab20:	88e2983a 	sll	r17,r17,r3
1010ab24:	10c6983a 	sll	r3,r2,r3
1010ab28:	1210d83a 	srl	r8,r2,r8
1010ab2c:	8804c03a 	cmpne	r2,r17,zero
1010ab30:	1906b03a 	or	r3,r3,r4
1010ab34:	18a2b03a 	or	r17,r3,r2
1010ab38:	0021883a 	mov	r16,zero
1010ab3c:	003fa206 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010ab40:	1890b03a 	or	r8,r3,r2
1010ab44:	40017d26 	beq	r8,zero,1010b13c <__adddf3+0x7f0>
1010ab48:	1011883a 	mov	r8,r2
1010ab4c:	1823883a 	mov	r17,r3
1010ab50:	888001cc 	andi	r2,r17,7
1010ab54:	103f9e1e 	bne	r2,zero,1010a9d0 <__alt_data_end+0xfffea9d0>
1010ab58:	4004977a 	slli	r2,r8,29
1010ab5c:	8822d0fa 	srli	r17,r17,3
1010ab60:	4010d0fa 	srli	r8,r8,3
1010ab64:	9007883a 	mov	r3,r18
1010ab68:	1444b03a 	or	r2,r2,r17
1010ab6c:	0101ffc4 	movi	r4,2047
1010ab70:	81002426 	beq	r16,r4,1010ac04 <__adddf3+0x2b8>
1010ab74:	8120703a 	and	r16,r16,r4
1010ab78:	01000434 	movhi	r4,16
1010ab7c:	213fffc4 	addi	r4,r4,-1
1010ab80:	4110703a 	and	r8,r8,r4
1010ab84:	003fa806 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010ab88:	8089c83a 	sub	r4,r16,r2
1010ab8c:	01005e0e 	bge	zero,r4,1010ad08 <__adddf3+0x3bc>
1010ab90:	10002b26 	beq	r2,zero,1010ac40 <__adddf3+0x2f4>
1010ab94:	0081ffc4 	movi	r2,2047
1010ab98:	80bf8b26 	beq	r16,r2,1010a9c8 <__alt_data_end+0xfffea9c8>
1010ab9c:	4a402034 	orhi	r9,r9,128
1010aba0:	00800e04 	movi	r2,56
1010aba4:	1100a40e 	bge	r2,r4,1010ae38 <__adddf3+0x4ec>
1010aba8:	498cb03a 	or	r6,r9,r6
1010abac:	300ac03a 	cmpne	r5,r6,zero
1010abb0:	0013883a 	mov	r9,zero
1010abb4:	2c4b883a 	add	r5,r5,r17
1010abb8:	2c63803a 	cmpltu	r17,r5,r17
1010abbc:	4a11883a 	add	r8,r9,r8
1010abc0:	8a11883a 	add	r8,r17,r8
1010abc4:	2823883a 	mov	r17,r5
1010abc8:	4080202c 	andhi	r2,r8,128
1010abcc:	103fe026 	beq	r2,zero,1010ab50 <__alt_data_end+0xfffeab50>
1010abd0:	84000044 	addi	r16,r16,1
1010abd4:	0081ffc4 	movi	r2,2047
1010abd8:	8080d226 	beq	r16,r2,1010af24 <__adddf3+0x5d8>
1010abdc:	00bfe034 	movhi	r2,65408
1010abe0:	10bfffc4 	addi	r2,r2,-1
1010abe4:	4090703a 	and	r8,r8,r2
1010abe8:	880ad07a 	srli	r5,r17,1
1010abec:	400897fa 	slli	r4,r8,31
1010abf0:	88c0004c 	andi	r3,r17,1
1010abf4:	28e2b03a 	or	r17,r5,r3
1010abf8:	4010d07a 	srli	r8,r8,1
1010abfc:	2462b03a 	or	r17,r4,r17
1010ac00:	003f7106 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010ac04:	4088b03a 	or	r4,r8,r2
1010ac08:	20014526 	beq	r4,zero,1010b120 <__adddf3+0x7d4>
1010ac0c:	01000434 	movhi	r4,16
1010ac10:	42000234 	orhi	r8,r8,8
1010ac14:	213fffc4 	addi	r4,r4,-1
1010ac18:	4110703a 	and	r8,r8,r4
1010ac1c:	003f8206 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010ac20:	18ffffc4 	addi	r3,r3,-1
1010ac24:	1800491e 	bne	r3,zero,1010ad4c <__adddf3+0x400>
1010ac28:	898bc83a 	sub	r5,r17,r6
1010ac2c:	8963803a 	cmpltu	r17,r17,r5
1010ac30:	4251c83a 	sub	r8,r8,r9
1010ac34:	4451c83a 	sub	r8,r8,r17
1010ac38:	2823883a 	mov	r17,r5
1010ac3c:	003f9f06 	br	1010aabc <__alt_data_end+0xfffeaabc>
1010ac40:	4984b03a 	or	r2,r9,r6
1010ac44:	103f6026 	beq	r2,zero,1010a9c8 <__alt_data_end+0xfffea9c8>
1010ac48:	213fffc4 	addi	r4,r4,-1
1010ac4c:	2000931e 	bne	r4,zero,1010ae9c <__adddf3+0x550>
1010ac50:	898d883a 	add	r6,r17,r6
1010ac54:	3463803a 	cmpltu	r17,r6,r17
1010ac58:	4251883a 	add	r8,r8,r9
1010ac5c:	8a11883a 	add	r8,r17,r8
1010ac60:	3023883a 	mov	r17,r6
1010ac64:	003fd806 	br	1010abc8 <__alt_data_end+0xfffeabc8>
1010ac68:	1800541e 	bne	r3,zero,1010adbc <__adddf3+0x470>
1010ac6c:	80800044 	addi	r2,r16,1
1010ac70:	1081ffcc 	andi	r2,r2,2047
1010ac74:	00c00044 	movi	r3,1
1010ac78:	1880a00e 	bge	r3,r2,1010aefc <__adddf3+0x5b0>
1010ac7c:	8989c83a 	sub	r4,r17,r6
1010ac80:	8905803a 	cmpltu	r2,r17,r4
1010ac84:	4267c83a 	sub	r19,r8,r9
1010ac88:	98a7c83a 	sub	r19,r19,r2
1010ac8c:	9880202c 	andhi	r2,r19,128
1010ac90:	10006326 	beq	r2,zero,1010ae20 <__adddf3+0x4d4>
1010ac94:	3463c83a 	sub	r17,r6,r17
1010ac98:	4a07c83a 	sub	r3,r9,r8
1010ac9c:	344d803a 	cmpltu	r6,r6,r17
1010aca0:	19a7c83a 	sub	r19,r3,r6
1010aca4:	3825883a 	mov	r18,r7
1010aca8:	983f8a1e 	bne	r19,zero,1010aad4 <__alt_data_end+0xfffeaad4>
1010acac:	8809883a 	mov	r4,r17
1010acb0:	010cf500 	call	1010cf50 <__clzsi2>
1010acb4:	10800804 	addi	r2,r2,32
1010acb8:	10fffe04 	addi	r3,r2,-8
1010acbc:	010007c4 	movi	r4,31
1010acc0:	20ff890e 	bge	r4,r3,1010aae8 <__alt_data_end+0xfffeaae8>
1010acc4:	10bff604 	addi	r2,r2,-40
1010acc8:	8884983a 	sll	r2,r17,r2
1010accc:	0023883a 	mov	r17,zero
1010acd0:	1c3f8c0e 	bge	r3,r16,1010ab04 <__alt_data_end+0xfffeab04>
1010acd4:	023fe034 	movhi	r8,65408
1010acd8:	423fffc4 	addi	r8,r8,-1
1010acdc:	80e1c83a 	sub	r16,r16,r3
1010ace0:	1210703a 	and	r8,r2,r8
1010ace4:	003f3806 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010ace8:	9007883a 	mov	r3,r18
1010acec:	0011883a 	mov	r8,zero
1010acf0:	0005883a 	mov	r2,zero
1010acf4:	003f4c06 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010acf8:	498cb03a 	or	r6,r9,r6
1010acfc:	300cc03a 	cmpne	r6,r6,zero
1010ad00:	0007883a 	mov	r3,zero
1010ad04:	003f6806 	br	1010aaa8 <__alt_data_end+0xfffeaaa8>
1010ad08:	20009c1e 	bne	r4,zero,1010af7c <__adddf3+0x630>
1010ad0c:	80800044 	addi	r2,r16,1
1010ad10:	1141ffcc 	andi	r5,r2,2047
1010ad14:	01000044 	movi	r4,1
1010ad18:	2140670e 	bge	r4,r5,1010aeb8 <__adddf3+0x56c>
1010ad1c:	0101ffc4 	movi	r4,2047
1010ad20:	11007f26 	beq	r2,r4,1010af20 <__adddf3+0x5d4>
1010ad24:	898d883a 	add	r6,r17,r6
1010ad28:	4247883a 	add	r3,r8,r9
1010ad2c:	3451803a 	cmpltu	r8,r6,r17
1010ad30:	40d1883a 	add	r8,r8,r3
1010ad34:	402297fa 	slli	r17,r8,31
1010ad38:	300cd07a 	srli	r6,r6,1
1010ad3c:	4010d07a 	srli	r8,r8,1
1010ad40:	1021883a 	mov	r16,r2
1010ad44:	89a2b03a 	or	r17,r17,r6
1010ad48:	003f1f06 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010ad4c:	0081ffc4 	movi	r2,2047
1010ad50:	80bf481e 	bne	r16,r2,1010aa74 <__alt_data_end+0xfffeaa74>
1010ad54:	003f1c06 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010ad58:	843ff844 	addi	r16,r16,-31
1010ad5c:	01000804 	movi	r4,32
1010ad60:	1406d83a 	srl	r3,r2,r16
1010ad64:	41005026 	beq	r8,r4,1010aea8 <__adddf3+0x55c>
1010ad68:	01001004 	movi	r4,64
1010ad6c:	2211c83a 	sub	r8,r4,r8
1010ad70:	1204983a 	sll	r2,r2,r8
1010ad74:	88a2b03a 	or	r17,r17,r2
1010ad78:	8822c03a 	cmpne	r17,r17,zero
1010ad7c:	1c62b03a 	or	r17,r3,r17
1010ad80:	0011883a 	mov	r8,zero
1010ad84:	0021883a 	mov	r16,zero
1010ad88:	003f7106 	br	1010ab50 <__alt_data_end+0xfffeab50>
1010ad8c:	193ff804 	addi	r4,r3,-32
1010ad90:	00800804 	movi	r2,32
1010ad94:	4908d83a 	srl	r4,r9,r4
1010ad98:	18804526 	beq	r3,r2,1010aeb0 <__adddf3+0x564>
1010ad9c:	00801004 	movi	r2,64
1010ada0:	10c5c83a 	sub	r2,r2,r3
1010ada4:	4886983a 	sll	r3,r9,r2
1010ada8:	198cb03a 	or	r6,r3,r6
1010adac:	300cc03a 	cmpne	r6,r6,zero
1010adb0:	218cb03a 	or	r6,r4,r6
1010adb4:	0007883a 	mov	r3,zero
1010adb8:	003f3b06 	br	1010aaa8 <__alt_data_end+0xfffeaaa8>
1010adbc:	80002a26 	beq	r16,zero,1010ae68 <__adddf3+0x51c>
1010adc0:	0101ffc4 	movi	r4,2047
1010adc4:	11006826 	beq	r2,r4,1010af68 <__adddf3+0x61c>
1010adc8:	00c7c83a 	sub	r3,zero,r3
1010adcc:	42002034 	orhi	r8,r8,128
1010add0:	01000e04 	movi	r4,56
1010add4:	20c07c16 	blt	r4,r3,1010afc8 <__adddf3+0x67c>
1010add8:	010007c4 	movi	r4,31
1010addc:	20c0da16 	blt	r4,r3,1010b148 <__adddf3+0x7fc>
1010ade0:	01000804 	movi	r4,32
1010ade4:	20c9c83a 	sub	r4,r4,r3
1010ade8:	4114983a 	sll	r10,r8,r4
1010adec:	88cad83a 	srl	r5,r17,r3
1010adf0:	8908983a 	sll	r4,r17,r4
1010adf4:	40c6d83a 	srl	r3,r8,r3
1010adf8:	5162b03a 	or	r17,r10,r5
1010adfc:	2008c03a 	cmpne	r4,r4,zero
1010ae00:	8922b03a 	or	r17,r17,r4
1010ae04:	3463c83a 	sub	r17,r6,r17
1010ae08:	48c7c83a 	sub	r3,r9,r3
1010ae0c:	344d803a 	cmpltu	r6,r6,r17
1010ae10:	1991c83a 	sub	r8,r3,r6
1010ae14:	1021883a 	mov	r16,r2
1010ae18:	3825883a 	mov	r18,r7
1010ae1c:	003f2706 	br	1010aabc <__alt_data_end+0xfffeaabc>
1010ae20:	24d0b03a 	or	r8,r4,r19
1010ae24:	40001b1e 	bne	r8,zero,1010ae94 <__adddf3+0x548>
1010ae28:	0005883a 	mov	r2,zero
1010ae2c:	0007883a 	mov	r3,zero
1010ae30:	0021883a 	mov	r16,zero
1010ae34:	003f4d06 	br	1010ab6c <__alt_data_end+0xfffeab6c>
1010ae38:	008007c4 	movi	r2,31
1010ae3c:	11003c16 	blt	r2,r4,1010af30 <__adddf3+0x5e4>
1010ae40:	00800804 	movi	r2,32
1010ae44:	1105c83a 	sub	r2,r2,r4
1010ae48:	488e983a 	sll	r7,r9,r2
1010ae4c:	310ad83a 	srl	r5,r6,r4
1010ae50:	3084983a 	sll	r2,r6,r2
1010ae54:	4912d83a 	srl	r9,r9,r4
1010ae58:	394ab03a 	or	r5,r7,r5
1010ae5c:	1004c03a 	cmpne	r2,r2,zero
1010ae60:	288ab03a 	or	r5,r5,r2
1010ae64:	003f5306 	br	1010abb4 <__alt_data_end+0xfffeabb4>
1010ae68:	4448b03a 	or	r4,r8,r17
1010ae6c:	20003e26 	beq	r4,zero,1010af68 <__adddf3+0x61c>
1010ae70:	00c6303a 	nor	r3,zero,r3
1010ae74:	18003a1e 	bne	r3,zero,1010af60 <__adddf3+0x614>
1010ae78:	3463c83a 	sub	r17,r6,r17
1010ae7c:	4a07c83a 	sub	r3,r9,r8
1010ae80:	344d803a 	cmpltu	r6,r6,r17
1010ae84:	1991c83a 	sub	r8,r3,r6
1010ae88:	1021883a 	mov	r16,r2
1010ae8c:	3825883a 	mov	r18,r7
1010ae90:	003f0a06 	br	1010aabc <__alt_data_end+0xfffeaabc>
1010ae94:	2023883a 	mov	r17,r4
1010ae98:	003f0d06 	br	1010aad0 <__alt_data_end+0xfffeaad0>
1010ae9c:	0081ffc4 	movi	r2,2047
1010aea0:	80bf3f1e 	bne	r16,r2,1010aba0 <__alt_data_end+0xfffeaba0>
1010aea4:	003ec806 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010aea8:	0005883a 	mov	r2,zero
1010aeac:	003fb106 	br	1010ad74 <__alt_data_end+0xfffead74>
1010aeb0:	0007883a 	mov	r3,zero
1010aeb4:	003fbc06 	br	1010ada8 <__alt_data_end+0xfffeada8>
1010aeb8:	4444b03a 	or	r2,r8,r17
1010aebc:	8000871e 	bne	r16,zero,1010b0dc <__adddf3+0x790>
1010aec0:	1000ba26 	beq	r2,zero,1010b1ac <__adddf3+0x860>
1010aec4:	4984b03a 	or	r2,r9,r6
1010aec8:	103ebf26 	beq	r2,zero,1010a9c8 <__alt_data_end+0xfffea9c8>
1010aecc:	8985883a 	add	r2,r17,r6
1010aed0:	4247883a 	add	r3,r8,r9
1010aed4:	1451803a 	cmpltu	r8,r2,r17
1010aed8:	40d1883a 	add	r8,r8,r3
1010aedc:	40c0202c 	andhi	r3,r8,128
1010aee0:	1023883a 	mov	r17,r2
1010aee4:	183f1a26 	beq	r3,zero,1010ab50 <__alt_data_end+0xfffeab50>
1010aee8:	00bfe034 	movhi	r2,65408
1010aeec:	10bfffc4 	addi	r2,r2,-1
1010aef0:	2021883a 	mov	r16,r4
1010aef4:	4090703a 	and	r8,r8,r2
1010aef8:	003eb306 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010aefc:	4444b03a 	or	r2,r8,r17
1010af00:	8000291e 	bne	r16,zero,1010afa8 <__adddf3+0x65c>
1010af04:	10004b1e 	bne	r2,zero,1010b034 <__adddf3+0x6e8>
1010af08:	4990b03a 	or	r8,r9,r6
1010af0c:	40008b26 	beq	r8,zero,1010b13c <__adddf3+0x7f0>
1010af10:	4811883a 	mov	r8,r9
1010af14:	3023883a 	mov	r17,r6
1010af18:	3825883a 	mov	r18,r7
1010af1c:	003eaa06 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010af20:	1021883a 	mov	r16,r2
1010af24:	0011883a 	mov	r8,zero
1010af28:	0005883a 	mov	r2,zero
1010af2c:	003f0f06 	br	1010ab6c <__alt_data_end+0xfffeab6c>
1010af30:	217ff804 	addi	r5,r4,-32
1010af34:	00800804 	movi	r2,32
1010af38:	494ad83a 	srl	r5,r9,r5
1010af3c:	20807d26 	beq	r4,r2,1010b134 <__adddf3+0x7e8>
1010af40:	00801004 	movi	r2,64
1010af44:	1109c83a 	sub	r4,r2,r4
1010af48:	4912983a 	sll	r9,r9,r4
1010af4c:	498cb03a 	or	r6,r9,r6
1010af50:	300cc03a 	cmpne	r6,r6,zero
1010af54:	298ab03a 	or	r5,r5,r6
1010af58:	0013883a 	mov	r9,zero
1010af5c:	003f1506 	br	1010abb4 <__alt_data_end+0xfffeabb4>
1010af60:	0101ffc4 	movi	r4,2047
1010af64:	113f9a1e 	bne	r2,r4,1010add0 <__alt_data_end+0xfffeadd0>
1010af68:	4811883a 	mov	r8,r9
1010af6c:	3023883a 	mov	r17,r6
1010af70:	1021883a 	mov	r16,r2
1010af74:	3825883a 	mov	r18,r7
1010af78:	003e9306 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010af7c:	8000161e 	bne	r16,zero,1010afd8 <__adddf3+0x68c>
1010af80:	444ab03a 	or	r5,r8,r17
1010af84:	28005126 	beq	r5,zero,1010b0cc <__adddf3+0x780>
1010af88:	0108303a 	nor	r4,zero,r4
1010af8c:	20004d1e 	bne	r4,zero,1010b0c4 <__adddf3+0x778>
1010af90:	89a3883a 	add	r17,r17,r6
1010af94:	4253883a 	add	r9,r8,r9
1010af98:	898d803a 	cmpltu	r6,r17,r6
1010af9c:	3251883a 	add	r8,r6,r9
1010afa0:	1021883a 	mov	r16,r2
1010afa4:	003f0806 	br	1010abc8 <__alt_data_end+0xfffeabc8>
1010afa8:	1000301e 	bne	r2,zero,1010b06c <__adddf3+0x720>
1010afac:	4984b03a 	or	r2,r9,r6
1010afb0:	10007126 	beq	r2,zero,1010b178 <__adddf3+0x82c>
1010afb4:	4811883a 	mov	r8,r9
1010afb8:	3023883a 	mov	r17,r6
1010afbc:	3825883a 	mov	r18,r7
1010afc0:	0401ffc4 	movi	r16,2047
1010afc4:	003e8006 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010afc8:	4462b03a 	or	r17,r8,r17
1010afcc:	8822c03a 	cmpne	r17,r17,zero
1010afd0:	0007883a 	mov	r3,zero
1010afd4:	003f8b06 	br	1010ae04 <__alt_data_end+0xfffeae04>
1010afd8:	0141ffc4 	movi	r5,2047
1010afdc:	11403b26 	beq	r2,r5,1010b0cc <__adddf3+0x780>
1010afe0:	0109c83a 	sub	r4,zero,r4
1010afe4:	42002034 	orhi	r8,r8,128
1010afe8:	01400e04 	movi	r5,56
1010afec:	29006716 	blt	r5,r4,1010b18c <__adddf3+0x840>
1010aff0:	014007c4 	movi	r5,31
1010aff4:	29007016 	blt	r5,r4,1010b1b8 <__adddf3+0x86c>
1010aff8:	01400804 	movi	r5,32
1010affc:	290bc83a 	sub	r5,r5,r4
1010b000:	4154983a 	sll	r10,r8,r5
1010b004:	890ed83a 	srl	r7,r17,r4
1010b008:	894a983a 	sll	r5,r17,r5
1010b00c:	4108d83a 	srl	r4,r8,r4
1010b010:	51e2b03a 	or	r17,r10,r7
1010b014:	280ac03a 	cmpne	r5,r5,zero
1010b018:	8962b03a 	or	r17,r17,r5
1010b01c:	89a3883a 	add	r17,r17,r6
1010b020:	2253883a 	add	r9,r4,r9
1010b024:	898d803a 	cmpltu	r6,r17,r6
1010b028:	3251883a 	add	r8,r6,r9
1010b02c:	1021883a 	mov	r16,r2
1010b030:	003ee506 	br	1010abc8 <__alt_data_end+0xfffeabc8>
1010b034:	4984b03a 	or	r2,r9,r6
1010b038:	103e6326 	beq	r2,zero,1010a9c8 <__alt_data_end+0xfffea9c8>
1010b03c:	8987c83a 	sub	r3,r17,r6
1010b040:	88c9803a 	cmpltu	r4,r17,r3
1010b044:	4245c83a 	sub	r2,r8,r9
1010b048:	1105c83a 	sub	r2,r2,r4
1010b04c:	1100202c 	andhi	r4,r2,128
1010b050:	203ebb26 	beq	r4,zero,1010ab40 <__alt_data_end+0xfffeab40>
1010b054:	3463c83a 	sub	r17,r6,r17
1010b058:	4a07c83a 	sub	r3,r9,r8
1010b05c:	344d803a 	cmpltu	r6,r6,r17
1010b060:	1991c83a 	sub	r8,r3,r6
1010b064:	3825883a 	mov	r18,r7
1010b068:	003e5706 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010b06c:	4984b03a 	or	r2,r9,r6
1010b070:	10002e26 	beq	r2,zero,1010b12c <__adddf3+0x7e0>
1010b074:	4004d0fa 	srli	r2,r8,3
1010b078:	8822d0fa 	srli	r17,r17,3
1010b07c:	4010977a 	slli	r8,r8,29
1010b080:	10c0022c 	andhi	r3,r2,8
1010b084:	4462b03a 	or	r17,r8,r17
1010b088:	18000826 	beq	r3,zero,1010b0ac <__adddf3+0x760>
1010b08c:	4808d0fa 	srli	r4,r9,3
1010b090:	20c0022c 	andhi	r3,r4,8
1010b094:	1800051e 	bne	r3,zero,1010b0ac <__adddf3+0x760>
1010b098:	300cd0fa 	srli	r6,r6,3
1010b09c:	4806977a 	slli	r3,r9,29
1010b0a0:	2005883a 	mov	r2,r4
1010b0a4:	3825883a 	mov	r18,r7
1010b0a8:	19a2b03a 	or	r17,r3,r6
1010b0ac:	8810d77a 	srli	r8,r17,29
1010b0b0:	100490fa 	slli	r2,r2,3
1010b0b4:	882290fa 	slli	r17,r17,3
1010b0b8:	0401ffc4 	movi	r16,2047
1010b0bc:	4090b03a 	or	r8,r8,r2
1010b0c0:	003e4106 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010b0c4:	0141ffc4 	movi	r5,2047
1010b0c8:	117fc71e 	bne	r2,r5,1010afe8 <__alt_data_end+0xfffeafe8>
1010b0cc:	4811883a 	mov	r8,r9
1010b0d0:	3023883a 	mov	r17,r6
1010b0d4:	1021883a 	mov	r16,r2
1010b0d8:	003e3b06 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010b0dc:	10002f26 	beq	r2,zero,1010b19c <__adddf3+0x850>
1010b0e0:	4984b03a 	or	r2,r9,r6
1010b0e4:	10001126 	beq	r2,zero,1010b12c <__adddf3+0x7e0>
1010b0e8:	4004d0fa 	srli	r2,r8,3
1010b0ec:	8822d0fa 	srli	r17,r17,3
1010b0f0:	4010977a 	slli	r8,r8,29
1010b0f4:	10c0022c 	andhi	r3,r2,8
1010b0f8:	4462b03a 	or	r17,r8,r17
1010b0fc:	183feb26 	beq	r3,zero,1010b0ac <__alt_data_end+0xfffeb0ac>
1010b100:	4808d0fa 	srli	r4,r9,3
1010b104:	20c0022c 	andhi	r3,r4,8
1010b108:	183fe81e 	bne	r3,zero,1010b0ac <__alt_data_end+0xfffeb0ac>
1010b10c:	300cd0fa 	srli	r6,r6,3
1010b110:	4806977a 	slli	r3,r9,29
1010b114:	2005883a 	mov	r2,r4
1010b118:	19a2b03a 	or	r17,r3,r6
1010b11c:	003fe306 	br	1010b0ac <__alt_data_end+0xfffeb0ac>
1010b120:	0011883a 	mov	r8,zero
1010b124:	0005883a 	mov	r2,zero
1010b128:	003e3f06 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010b12c:	0401ffc4 	movi	r16,2047
1010b130:	003e2506 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010b134:	0013883a 	mov	r9,zero
1010b138:	003f8406 	br	1010af4c <__alt_data_end+0xfffeaf4c>
1010b13c:	0005883a 	mov	r2,zero
1010b140:	0007883a 	mov	r3,zero
1010b144:	003e8906 	br	1010ab6c <__alt_data_end+0xfffeab6c>
1010b148:	197ff804 	addi	r5,r3,-32
1010b14c:	01000804 	movi	r4,32
1010b150:	414ad83a 	srl	r5,r8,r5
1010b154:	19002426 	beq	r3,r4,1010b1e8 <__adddf3+0x89c>
1010b158:	01001004 	movi	r4,64
1010b15c:	20c7c83a 	sub	r3,r4,r3
1010b160:	40c6983a 	sll	r3,r8,r3
1010b164:	1c46b03a 	or	r3,r3,r17
1010b168:	1806c03a 	cmpne	r3,r3,zero
1010b16c:	28e2b03a 	or	r17,r5,r3
1010b170:	0007883a 	mov	r3,zero
1010b174:	003f2306 	br	1010ae04 <__alt_data_end+0xfffeae04>
1010b178:	0007883a 	mov	r3,zero
1010b17c:	5811883a 	mov	r8,r11
1010b180:	00bfffc4 	movi	r2,-1
1010b184:	0401ffc4 	movi	r16,2047
1010b188:	003e7806 	br	1010ab6c <__alt_data_end+0xfffeab6c>
1010b18c:	4462b03a 	or	r17,r8,r17
1010b190:	8822c03a 	cmpne	r17,r17,zero
1010b194:	0009883a 	mov	r4,zero
1010b198:	003fa006 	br	1010b01c <__alt_data_end+0xfffeb01c>
1010b19c:	4811883a 	mov	r8,r9
1010b1a0:	3023883a 	mov	r17,r6
1010b1a4:	0401ffc4 	movi	r16,2047
1010b1a8:	003e0706 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010b1ac:	4811883a 	mov	r8,r9
1010b1b0:	3023883a 	mov	r17,r6
1010b1b4:	003e0406 	br	1010a9c8 <__alt_data_end+0xfffea9c8>
1010b1b8:	21fff804 	addi	r7,r4,-32
1010b1bc:	01400804 	movi	r5,32
1010b1c0:	41ced83a 	srl	r7,r8,r7
1010b1c4:	21400a26 	beq	r4,r5,1010b1f0 <__adddf3+0x8a4>
1010b1c8:	01401004 	movi	r5,64
1010b1cc:	2909c83a 	sub	r4,r5,r4
1010b1d0:	4108983a 	sll	r4,r8,r4
1010b1d4:	2448b03a 	or	r4,r4,r17
1010b1d8:	2008c03a 	cmpne	r4,r4,zero
1010b1dc:	3922b03a 	or	r17,r7,r4
1010b1e0:	0009883a 	mov	r4,zero
1010b1e4:	003f8d06 	br	1010b01c <__alt_data_end+0xfffeb01c>
1010b1e8:	0007883a 	mov	r3,zero
1010b1ec:	003fdd06 	br	1010b164 <__alt_data_end+0xfffeb164>
1010b1f0:	0009883a 	mov	r4,zero
1010b1f4:	003ff706 	br	1010b1d4 <__alt_data_end+0xfffeb1d4>

1010b1f8 <__divdf3>:
1010b1f8:	defff204 	addi	sp,sp,-56
1010b1fc:	dd400915 	stw	r21,36(sp)
1010b200:	282ad53a 	srli	r21,r5,20
1010b204:	dd000815 	stw	r20,32(sp)
1010b208:	2828d7fa 	srli	r20,r5,31
1010b20c:	dc000415 	stw	r16,16(sp)
1010b210:	04000434 	movhi	r16,16
1010b214:	df000c15 	stw	fp,48(sp)
1010b218:	843fffc4 	addi	r16,r16,-1
1010b21c:	dfc00d15 	stw	ra,52(sp)
1010b220:	ddc00b15 	stw	r23,44(sp)
1010b224:	dd800a15 	stw	r22,40(sp)
1010b228:	dcc00715 	stw	r19,28(sp)
1010b22c:	dc800615 	stw	r18,24(sp)
1010b230:	dc400515 	stw	r17,20(sp)
1010b234:	ad41ffcc 	andi	r21,r21,2047
1010b238:	2c20703a 	and	r16,r5,r16
1010b23c:	a7003fcc 	andi	fp,r20,255
1010b240:	a8006126 	beq	r21,zero,1010b3c8 <__divdf3+0x1d0>
1010b244:	0081ffc4 	movi	r2,2047
1010b248:	2025883a 	mov	r18,r4
1010b24c:	a8803726 	beq	r21,r2,1010b32c <__divdf3+0x134>
1010b250:	80800434 	orhi	r2,r16,16
1010b254:	100490fa 	slli	r2,r2,3
1010b258:	2020d77a 	srli	r16,r4,29
1010b25c:	202490fa 	slli	r18,r4,3
1010b260:	ad7f0044 	addi	r21,r21,-1023
1010b264:	80a0b03a 	or	r16,r16,r2
1010b268:	0027883a 	mov	r19,zero
1010b26c:	0013883a 	mov	r9,zero
1010b270:	3804d53a 	srli	r2,r7,20
1010b274:	382cd7fa 	srli	r22,r7,31
1010b278:	04400434 	movhi	r17,16
1010b27c:	8c7fffc4 	addi	r17,r17,-1
1010b280:	1081ffcc 	andi	r2,r2,2047
1010b284:	3011883a 	mov	r8,r6
1010b288:	3c62703a 	and	r17,r7,r17
1010b28c:	b5c03fcc 	andi	r23,r22,255
1010b290:	10006c26 	beq	r2,zero,1010b444 <__divdf3+0x24c>
1010b294:	00c1ffc4 	movi	r3,2047
1010b298:	10c06426 	beq	r2,r3,1010b42c <__divdf3+0x234>
1010b29c:	88c00434 	orhi	r3,r17,16
1010b2a0:	180690fa 	slli	r3,r3,3
1010b2a4:	3022d77a 	srli	r17,r6,29
1010b2a8:	301090fa 	slli	r8,r6,3
1010b2ac:	10bf0044 	addi	r2,r2,-1023
1010b2b0:	88e2b03a 	or	r17,r17,r3
1010b2b4:	000f883a 	mov	r7,zero
1010b2b8:	a58cf03a 	xor	r6,r20,r22
1010b2bc:	3cc8b03a 	or	r4,r7,r19
1010b2c0:	a8abc83a 	sub	r21,r21,r2
1010b2c4:	008003c4 	movi	r2,15
1010b2c8:	3007883a 	mov	r3,r6
1010b2cc:	34c03fcc 	andi	r19,r6,255
1010b2d0:	11009036 	bltu	r2,r4,1010b514 <__divdf3+0x31c>
1010b2d4:	200890ba 	slli	r4,r4,2
1010b2d8:	00840474 	movhi	r2,4113
1010b2dc:	10acbb04 	addi	r2,r2,-19732
1010b2e0:	2089883a 	add	r4,r4,r2
1010b2e4:	20800017 	ldw	r2,0(r4)
1010b2e8:	1000683a 	jmp	r2
1010b2ec:	1010b514 	ori	zero,r2,17108
1010b2f0:	1010b364 	muli	zero,r2,17101
1010b2f4:	1010b504 	addi	zero,r2,17108
1010b2f8:	1010b358 	cmpnei	zero,r2,17101
1010b2fc:	1010b504 	addi	zero,r2,17108
1010b300:	1010b4d8 	cmpnei	zero,r2,17107
1010b304:	1010b504 	addi	zero,r2,17108
1010b308:	1010b358 	cmpnei	zero,r2,17101
1010b30c:	1010b364 	muli	zero,r2,17101
1010b310:	1010b364 	muli	zero,r2,17101
1010b314:	1010b4d8 	cmpnei	zero,r2,17107
1010b318:	1010b358 	cmpnei	zero,r2,17101
1010b31c:	1010b348 	cmpgei	zero,r2,17101
1010b320:	1010b348 	cmpgei	zero,r2,17101
1010b324:	1010b348 	cmpgei	zero,r2,17101
1010b328:	1010b7f8 	rdprs	zero,r2,17119
1010b32c:	2404b03a 	or	r2,r4,r16
1010b330:	1000661e 	bne	r2,zero,1010b4cc <__divdf3+0x2d4>
1010b334:	04c00204 	movi	r19,8
1010b338:	0021883a 	mov	r16,zero
1010b33c:	0025883a 	mov	r18,zero
1010b340:	02400084 	movi	r9,2
1010b344:	003fca06 	br	1010b270 <__alt_data_end+0xfffeb270>
1010b348:	8023883a 	mov	r17,r16
1010b34c:	9011883a 	mov	r8,r18
1010b350:	e02f883a 	mov	r23,fp
1010b354:	480f883a 	mov	r7,r9
1010b358:	00800084 	movi	r2,2
1010b35c:	3881311e 	bne	r7,r2,1010b824 <__divdf3+0x62c>
1010b360:	b827883a 	mov	r19,r23
1010b364:	98c0004c 	andi	r3,r19,1
1010b368:	0081ffc4 	movi	r2,2047
1010b36c:	000b883a 	mov	r5,zero
1010b370:	0025883a 	mov	r18,zero
1010b374:	1004953a 	slli	r2,r2,20
1010b378:	18c03fcc 	andi	r3,r3,255
1010b37c:	04400434 	movhi	r17,16
1010b380:	8c7fffc4 	addi	r17,r17,-1
1010b384:	180697fa 	slli	r3,r3,31
1010b388:	2c4a703a 	and	r5,r5,r17
1010b38c:	288ab03a 	or	r5,r5,r2
1010b390:	28c6b03a 	or	r3,r5,r3
1010b394:	9005883a 	mov	r2,r18
1010b398:	dfc00d17 	ldw	ra,52(sp)
1010b39c:	df000c17 	ldw	fp,48(sp)
1010b3a0:	ddc00b17 	ldw	r23,44(sp)
1010b3a4:	dd800a17 	ldw	r22,40(sp)
1010b3a8:	dd400917 	ldw	r21,36(sp)
1010b3ac:	dd000817 	ldw	r20,32(sp)
1010b3b0:	dcc00717 	ldw	r19,28(sp)
1010b3b4:	dc800617 	ldw	r18,24(sp)
1010b3b8:	dc400517 	ldw	r17,20(sp)
1010b3bc:	dc000417 	ldw	r16,16(sp)
1010b3c0:	dec00e04 	addi	sp,sp,56
1010b3c4:	f800283a 	ret
1010b3c8:	2404b03a 	or	r2,r4,r16
1010b3cc:	2027883a 	mov	r19,r4
1010b3d0:	10003926 	beq	r2,zero,1010b4b8 <__divdf3+0x2c0>
1010b3d4:	80012e26 	beq	r16,zero,1010b890 <__divdf3+0x698>
1010b3d8:	8009883a 	mov	r4,r16
1010b3dc:	d9800315 	stw	r6,12(sp)
1010b3e0:	d9c00215 	stw	r7,8(sp)
1010b3e4:	010cf500 	call	1010cf50 <__clzsi2>
1010b3e8:	d9800317 	ldw	r6,12(sp)
1010b3ec:	d9c00217 	ldw	r7,8(sp)
1010b3f0:	113ffd44 	addi	r4,r2,-11
1010b3f4:	00c00704 	movi	r3,28
1010b3f8:	19012116 	blt	r3,r4,1010b880 <__divdf3+0x688>
1010b3fc:	00c00744 	movi	r3,29
1010b400:	147ffe04 	addi	r17,r2,-8
1010b404:	1907c83a 	sub	r3,r3,r4
1010b408:	8460983a 	sll	r16,r16,r17
1010b40c:	98c6d83a 	srl	r3,r19,r3
1010b410:	9c64983a 	sll	r18,r19,r17
1010b414:	1c20b03a 	or	r16,r3,r16
1010b418:	1080fcc4 	addi	r2,r2,1011
1010b41c:	00abc83a 	sub	r21,zero,r2
1010b420:	0027883a 	mov	r19,zero
1010b424:	0013883a 	mov	r9,zero
1010b428:	003f9106 	br	1010b270 <__alt_data_end+0xfffeb270>
1010b42c:	3446b03a 	or	r3,r6,r17
1010b430:	18001f1e 	bne	r3,zero,1010b4b0 <__divdf3+0x2b8>
1010b434:	0023883a 	mov	r17,zero
1010b438:	0011883a 	mov	r8,zero
1010b43c:	01c00084 	movi	r7,2
1010b440:	003f9d06 	br	1010b2b8 <__alt_data_end+0xfffeb2b8>
1010b444:	3446b03a 	or	r3,r6,r17
1010b448:	18001526 	beq	r3,zero,1010b4a0 <__divdf3+0x2a8>
1010b44c:	88011b26 	beq	r17,zero,1010b8bc <__divdf3+0x6c4>
1010b450:	8809883a 	mov	r4,r17
1010b454:	d9800315 	stw	r6,12(sp)
1010b458:	da400115 	stw	r9,4(sp)
1010b45c:	010cf500 	call	1010cf50 <__clzsi2>
1010b460:	d9800317 	ldw	r6,12(sp)
1010b464:	da400117 	ldw	r9,4(sp)
1010b468:	113ffd44 	addi	r4,r2,-11
1010b46c:	00c00704 	movi	r3,28
1010b470:	19010e16 	blt	r3,r4,1010b8ac <__divdf3+0x6b4>
1010b474:	00c00744 	movi	r3,29
1010b478:	123ffe04 	addi	r8,r2,-8
1010b47c:	1907c83a 	sub	r3,r3,r4
1010b480:	8a22983a 	sll	r17,r17,r8
1010b484:	30c6d83a 	srl	r3,r6,r3
1010b488:	3210983a 	sll	r8,r6,r8
1010b48c:	1c62b03a 	or	r17,r3,r17
1010b490:	1080fcc4 	addi	r2,r2,1011
1010b494:	0085c83a 	sub	r2,zero,r2
1010b498:	000f883a 	mov	r7,zero
1010b49c:	003f8606 	br	1010b2b8 <__alt_data_end+0xfffeb2b8>
1010b4a0:	0023883a 	mov	r17,zero
1010b4a4:	0011883a 	mov	r8,zero
1010b4a8:	01c00044 	movi	r7,1
1010b4ac:	003f8206 	br	1010b2b8 <__alt_data_end+0xfffeb2b8>
1010b4b0:	01c000c4 	movi	r7,3
1010b4b4:	003f8006 	br	1010b2b8 <__alt_data_end+0xfffeb2b8>
1010b4b8:	04c00104 	movi	r19,4
1010b4bc:	0021883a 	mov	r16,zero
1010b4c0:	0025883a 	mov	r18,zero
1010b4c4:	02400044 	movi	r9,1
1010b4c8:	003f6906 	br	1010b270 <__alt_data_end+0xfffeb270>
1010b4cc:	04c00304 	movi	r19,12
1010b4d0:	024000c4 	movi	r9,3
1010b4d4:	003f6606 	br	1010b270 <__alt_data_end+0xfffeb270>
1010b4d8:	01400434 	movhi	r5,16
1010b4dc:	0007883a 	mov	r3,zero
1010b4e0:	297fffc4 	addi	r5,r5,-1
1010b4e4:	04bfffc4 	movi	r18,-1
1010b4e8:	0081ffc4 	movi	r2,2047
1010b4ec:	003fa106 	br	1010b374 <__alt_data_end+0xfffeb374>
1010b4f0:	00c00044 	movi	r3,1
1010b4f4:	1887c83a 	sub	r3,r3,r2
1010b4f8:	01000e04 	movi	r4,56
1010b4fc:	20c1210e 	bge	r4,r3,1010b984 <__divdf3+0x78c>
1010b500:	98c0004c 	andi	r3,r19,1
1010b504:	0005883a 	mov	r2,zero
1010b508:	000b883a 	mov	r5,zero
1010b50c:	0025883a 	mov	r18,zero
1010b510:	003f9806 	br	1010b374 <__alt_data_end+0xfffeb374>
1010b514:	8c00fd36 	bltu	r17,r16,1010b90c <__divdf3+0x714>
1010b518:	8440fb26 	beq	r16,r17,1010b908 <__divdf3+0x710>
1010b51c:	8007883a 	mov	r3,r16
1010b520:	ad7fffc4 	addi	r21,r21,-1
1010b524:	0021883a 	mov	r16,zero
1010b528:	4004d63a 	srli	r2,r8,24
1010b52c:	8822923a 	slli	r17,r17,8
1010b530:	1809883a 	mov	r4,r3
1010b534:	402c923a 	slli	r22,r8,8
1010b538:	88b8b03a 	or	fp,r17,r2
1010b53c:	e028d43a 	srli	r20,fp,16
1010b540:	d8c00015 	stw	r3,0(sp)
1010b544:	e5ffffcc 	andi	r23,fp,65535
1010b548:	a00b883a 	mov	r5,r20
1010b54c:	010a8900 	call	1010a890 <__udivsi3>
1010b550:	d8c00017 	ldw	r3,0(sp)
1010b554:	a00b883a 	mov	r5,r20
1010b558:	d8800315 	stw	r2,12(sp)
1010b55c:	1809883a 	mov	r4,r3
1010b560:	010a8f40 	call	1010a8f4 <__umodsi3>
1010b564:	d9800317 	ldw	r6,12(sp)
1010b568:	1006943a 	slli	r3,r2,16
1010b56c:	9004d43a 	srli	r2,r18,16
1010b570:	b9a3383a 	mul	r17,r23,r6
1010b574:	10c4b03a 	or	r2,r2,r3
1010b578:	1440062e 	bgeu	r2,r17,1010b594 <__divdf3+0x39c>
1010b57c:	1705883a 	add	r2,r2,fp
1010b580:	30ffffc4 	addi	r3,r6,-1
1010b584:	1700ee36 	bltu	r2,fp,1010b940 <__divdf3+0x748>
1010b588:	1440ed2e 	bgeu	r2,r17,1010b940 <__divdf3+0x748>
1010b58c:	31bfff84 	addi	r6,r6,-2
1010b590:	1705883a 	add	r2,r2,fp
1010b594:	1463c83a 	sub	r17,r2,r17
1010b598:	a00b883a 	mov	r5,r20
1010b59c:	8809883a 	mov	r4,r17
1010b5a0:	d9800315 	stw	r6,12(sp)
1010b5a4:	010a8900 	call	1010a890 <__udivsi3>
1010b5a8:	a00b883a 	mov	r5,r20
1010b5ac:	8809883a 	mov	r4,r17
1010b5b0:	d8800215 	stw	r2,8(sp)
1010b5b4:	010a8f40 	call	1010a8f4 <__umodsi3>
1010b5b8:	d9c00217 	ldw	r7,8(sp)
1010b5bc:	1004943a 	slli	r2,r2,16
1010b5c0:	94bfffcc 	andi	r18,r18,65535
1010b5c4:	b9d1383a 	mul	r8,r23,r7
1010b5c8:	90a4b03a 	or	r18,r18,r2
1010b5cc:	d9800317 	ldw	r6,12(sp)
1010b5d0:	9200062e 	bgeu	r18,r8,1010b5ec <__divdf3+0x3f4>
1010b5d4:	9725883a 	add	r18,r18,fp
1010b5d8:	38bfffc4 	addi	r2,r7,-1
1010b5dc:	9700d636 	bltu	r18,fp,1010b938 <__divdf3+0x740>
1010b5e0:	9200d52e 	bgeu	r18,r8,1010b938 <__divdf3+0x740>
1010b5e4:	39ffff84 	addi	r7,r7,-2
1010b5e8:	9725883a 	add	r18,r18,fp
1010b5ec:	3004943a 	slli	r2,r6,16
1010b5f0:	b012d43a 	srli	r9,r22,16
1010b5f4:	b1bfffcc 	andi	r6,r22,65535
1010b5f8:	11e2b03a 	or	r17,r2,r7
1010b5fc:	8806d43a 	srli	r3,r17,16
1010b600:	893fffcc 	andi	r4,r17,65535
1010b604:	218b383a 	mul	r5,r4,r6
1010b608:	30c5383a 	mul	r2,r6,r3
1010b60c:	2249383a 	mul	r4,r4,r9
1010b610:	280ed43a 	srli	r7,r5,16
1010b614:	9225c83a 	sub	r18,r18,r8
1010b618:	2089883a 	add	r4,r4,r2
1010b61c:	3909883a 	add	r4,r7,r4
1010b620:	1a47383a 	mul	r3,r3,r9
1010b624:	2080022e 	bgeu	r4,r2,1010b630 <__divdf3+0x438>
1010b628:	00800074 	movhi	r2,1
1010b62c:	1887883a 	add	r3,r3,r2
1010b630:	2004d43a 	srli	r2,r4,16
1010b634:	2008943a 	slli	r4,r4,16
1010b638:	297fffcc 	andi	r5,r5,65535
1010b63c:	10c7883a 	add	r3,r2,r3
1010b640:	2149883a 	add	r4,r4,r5
1010b644:	90c0a536 	bltu	r18,r3,1010b8dc <__divdf3+0x6e4>
1010b648:	90c0bf26 	beq	r18,r3,1010b948 <__divdf3+0x750>
1010b64c:	90c7c83a 	sub	r3,r18,r3
1010b650:	810fc83a 	sub	r7,r16,r4
1010b654:	81e5803a 	cmpltu	r18,r16,r7
1010b658:	1ca5c83a 	sub	r18,r3,r18
1010b65c:	e480c126 	beq	fp,r18,1010b964 <__divdf3+0x76c>
1010b660:	a00b883a 	mov	r5,r20
1010b664:	9009883a 	mov	r4,r18
1010b668:	d9800315 	stw	r6,12(sp)
1010b66c:	d9c00215 	stw	r7,8(sp)
1010b670:	da400115 	stw	r9,4(sp)
1010b674:	010a8900 	call	1010a890 <__udivsi3>
1010b678:	a00b883a 	mov	r5,r20
1010b67c:	9009883a 	mov	r4,r18
1010b680:	d8800015 	stw	r2,0(sp)
1010b684:	010a8f40 	call	1010a8f4 <__umodsi3>
1010b688:	d9c00217 	ldw	r7,8(sp)
1010b68c:	da000017 	ldw	r8,0(sp)
1010b690:	1006943a 	slli	r3,r2,16
1010b694:	3804d43a 	srli	r2,r7,16
1010b698:	ba21383a 	mul	r16,r23,r8
1010b69c:	d9800317 	ldw	r6,12(sp)
1010b6a0:	10c4b03a 	or	r2,r2,r3
1010b6a4:	da400117 	ldw	r9,4(sp)
1010b6a8:	1400062e 	bgeu	r2,r16,1010b6c4 <__divdf3+0x4cc>
1010b6ac:	1705883a 	add	r2,r2,fp
1010b6b0:	40ffffc4 	addi	r3,r8,-1
1010b6b4:	1700ad36 	bltu	r2,fp,1010b96c <__divdf3+0x774>
1010b6b8:	1400ac2e 	bgeu	r2,r16,1010b96c <__divdf3+0x774>
1010b6bc:	423fff84 	addi	r8,r8,-2
1010b6c0:	1705883a 	add	r2,r2,fp
1010b6c4:	1421c83a 	sub	r16,r2,r16
1010b6c8:	a00b883a 	mov	r5,r20
1010b6cc:	8009883a 	mov	r4,r16
1010b6d0:	d9800315 	stw	r6,12(sp)
1010b6d4:	d9c00215 	stw	r7,8(sp)
1010b6d8:	da000015 	stw	r8,0(sp)
1010b6dc:	da400115 	stw	r9,4(sp)
1010b6e0:	010a8900 	call	1010a890 <__udivsi3>
1010b6e4:	8009883a 	mov	r4,r16
1010b6e8:	a00b883a 	mov	r5,r20
1010b6ec:	1025883a 	mov	r18,r2
1010b6f0:	010a8f40 	call	1010a8f4 <__umodsi3>
1010b6f4:	d9c00217 	ldw	r7,8(sp)
1010b6f8:	1004943a 	slli	r2,r2,16
1010b6fc:	bcaf383a 	mul	r23,r23,r18
1010b700:	393fffcc 	andi	r4,r7,65535
1010b704:	2088b03a 	or	r4,r4,r2
1010b708:	d9800317 	ldw	r6,12(sp)
1010b70c:	da000017 	ldw	r8,0(sp)
1010b710:	da400117 	ldw	r9,4(sp)
1010b714:	25c0062e 	bgeu	r4,r23,1010b730 <__divdf3+0x538>
1010b718:	2709883a 	add	r4,r4,fp
1010b71c:	90bfffc4 	addi	r2,r18,-1
1010b720:	27009436 	bltu	r4,fp,1010b974 <__divdf3+0x77c>
1010b724:	25c0932e 	bgeu	r4,r23,1010b974 <__divdf3+0x77c>
1010b728:	94bfff84 	addi	r18,r18,-2
1010b72c:	2709883a 	add	r4,r4,fp
1010b730:	4004943a 	slli	r2,r8,16
1010b734:	25efc83a 	sub	r23,r4,r23
1010b738:	1490b03a 	or	r8,r2,r18
1010b73c:	4008d43a 	srli	r4,r8,16
1010b740:	40ffffcc 	andi	r3,r8,65535
1010b744:	30c5383a 	mul	r2,r6,r3
1010b748:	1a47383a 	mul	r3,r3,r9
1010b74c:	310d383a 	mul	r6,r6,r4
1010b750:	100ad43a 	srli	r5,r2,16
1010b754:	4913383a 	mul	r9,r9,r4
1010b758:	1987883a 	add	r3,r3,r6
1010b75c:	28c7883a 	add	r3,r5,r3
1010b760:	1980022e 	bgeu	r3,r6,1010b76c <__divdf3+0x574>
1010b764:	01000074 	movhi	r4,1
1010b768:	4913883a 	add	r9,r9,r4
1010b76c:	1808d43a 	srli	r4,r3,16
1010b770:	1806943a 	slli	r3,r3,16
1010b774:	10bfffcc 	andi	r2,r2,65535
1010b778:	2253883a 	add	r9,r4,r9
1010b77c:	1887883a 	add	r3,r3,r2
1010b780:	ba403836 	bltu	r23,r9,1010b864 <__divdf3+0x66c>
1010b784:	ba403626 	beq	r23,r9,1010b860 <__divdf3+0x668>
1010b788:	42000054 	ori	r8,r8,1
1010b78c:	a880ffc4 	addi	r2,r21,1023
1010b790:	00bf570e 	bge	zero,r2,1010b4f0 <__alt_data_end+0xfffeb4f0>
1010b794:	40c001cc 	andi	r3,r8,7
1010b798:	18000726 	beq	r3,zero,1010b7b8 <__divdf3+0x5c0>
1010b79c:	40c003cc 	andi	r3,r8,15
1010b7a0:	01000104 	movi	r4,4
1010b7a4:	19000426 	beq	r3,r4,1010b7b8 <__divdf3+0x5c0>
1010b7a8:	4107883a 	add	r3,r8,r4
1010b7ac:	1a11803a 	cmpltu	r8,r3,r8
1010b7b0:	8a23883a 	add	r17,r17,r8
1010b7b4:	1811883a 	mov	r8,r3
1010b7b8:	88c0402c 	andhi	r3,r17,256
1010b7bc:	18000426 	beq	r3,zero,1010b7d0 <__divdf3+0x5d8>
1010b7c0:	00ffc034 	movhi	r3,65280
1010b7c4:	18ffffc4 	addi	r3,r3,-1
1010b7c8:	a8810004 	addi	r2,r21,1024
1010b7cc:	88e2703a 	and	r17,r17,r3
1010b7d0:	00c1ff84 	movi	r3,2046
1010b7d4:	18bee316 	blt	r3,r2,1010b364 <__alt_data_end+0xfffeb364>
1010b7d8:	8824977a 	slli	r18,r17,29
1010b7dc:	4010d0fa 	srli	r8,r8,3
1010b7e0:	8822927a 	slli	r17,r17,9
1010b7e4:	1081ffcc 	andi	r2,r2,2047
1010b7e8:	9224b03a 	or	r18,r18,r8
1010b7ec:	880ad33a 	srli	r5,r17,12
1010b7f0:	98c0004c 	andi	r3,r19,1
1010b7f4:	003edf06 	br	1010b374 <__alt_data_end+0xfffeb374>
1010b7f8:	8080022c 	andhi	r2,r16,8
1010b7fc:	10001226 	beq	r2,zero,1010b848 <__divdf3+0x650>
1010b800:	8880022c 	andhi	r2,r17,8
1010b804:	1000101e 	bne	r2,zero,1010b848 <__divdf3+0x650>
1010b808:	00800434 	movhi	r2,16
1010b80c:	89400234 	orhi	r5,r17,8
1010b810:	10bfffc4 	addi	r2,r2,-1
1010b814:	b007883a 	mov	r3,r22
1010b818:	288a703a 	and	r5,r5,r2
1010b81c:	4025883a 	mov	r18,r8
1010b820:	003f3106 	br	1010b4e8 <__alt_data_end+0xfffeb4e8>
1010b824:	008000c4 	movi	r2,3
1010b828:	3880a626 	beq	r7,r2,1010bac4 <__divdf3+0x8cc>
1010b82c:	00800044 	movi	r2,1
1010b830:	3880521e 	bne	r7,r2,1010b97c <__divdf3+0x784>
1010b834:	b807883a 	mov	r3,r23
1010b838:	0005883a 	mov	r2,zero
1010b83c:	000b883a 	mov	r5,zero
1010b840:	0025883a 	mov	r18,zero
1010b844:	003ecb06 	br	1010b374 <__alt_data_end+0xfffeb374>
1010b848:	00800434 	movhi	r2,16
1010b84c:	81400234 	orhi	r5,r16,8
1010b850:	10bfffc4 	addi	r2,r2,-1
1010b854:	a007883a 	mov	r3,r20
1010b858:	288a703a 	and	r5,r5,r2
1010b85c:	003f2206 	br	1010b4e8 <__alt_data_end+0xfffeb4e8>
1010b860:	183fca26 	beq	r3,zero,1010b78c <__alt_data_end+0xfffeb78c>
1010b864:	e5ef883a 	add	r23,fp,r23
1010b868:	40bfffc4 	addi	r2,r8,-1
1010b86c:	bf00392e 	bgeu	r23,fp,1010b954 <__divdf3+0x75c>
1010b870:	1011883a 	mov	r8,r2
1010b874:	ba7fc41e 	bne	r23,r9,1010b788 <__alt_data_end+0xfffeb788>
1010b878:	b0ffc31e 	bne	r22,r3,1010b788 <__alt_data_end+0xfffeb788>
1010b87c:	003fc306 	br	1010b78c <__alt_data_end+0xfffeb78c>
1010b880:	143ff604 	addi	r16,r2,-40
1010b884:	9c20983a 	sll	r16,r19,r16
1010b888:	0025883a 	mov	r18,zero
1010b88c:	003ee206 	br	1010b418 <__alt_data_end+0xfffeb418>
1010b890:	d9800315 	stw	r6,12(sp)
1010b894:	d9c00215 	stw	r7,8(sp)
1010b898:	010cf500 	call	1010cf50 <__clzsi2>
1010b89c:	10800804 	addi	r2,r2,32
1010b8a0:	d9c00217 	ldw	r7,8(sp)
1010b8a4:	d9800317 	ldw	r6,12(sp)
1010b8a8:	003ed106 	br	1010b3f0 <__alt_data_end+0xfffeb3f0>
1010b8ac:	147ff604 	addi	r17,r2,-40
1010b8b0:	3462983a 	sll	r17,r6,r17
1010b8b4:	0011883a 	mov	r8,zero
1010b8b8:	003ef506 	br	1010b490 <__alt_data_end+0xfffeb490>
1010b8bc:	3009883a 	mov	r4,r6
1010b8c0:	d9800315 	stw	r6,12(sp)
1010b8c4:	da400115 	stw	r9,4(sp)
1010b8c8:	010cf500 	call	1010cf50 <__clzsi2>
1010b8cc:	10800804 	addi	r2,r2,32
1010b8d0:	da400117 	ldw	r9,4(sp)
1010b8d4:	d9800317 	ldw	r6,12(sp)
1010b8d8:	003ee306 	br	1010b468 <__alt_data_end+0xfffeb468>
1010b8dc:	85a1883a 	add	r16,r16,r22
1010b8e0:	8585803a 	cmpltu	r2,r16,r22
1010b8e4:	1705883a 	add	r2,r2,fp
1010b8e8:	14a5883a 	add	r18,r2,r18
1010b8ec:	88bfffc4 	addi	r2,r17,-1
1010b8f0:	e4800c2e 	bgeu	fp,r18,1010b924 <__divdf3+0x72c>
1010b8f4:	90c03e36 	bltu	r18,r3,1010b9f0 <__divdf3+0x7f8>
1010b8f8:	1c806926 	beq	r3,r18,1010baa0 <__divdf3+0x8a8>
1010b8fc:	90c7c83a 	sub	r3,r18,r3
1010b900:	1023883a 	mov	r17,r2
1010b904:	003f5206 	br	1010b650 <__alt_data_end+0xfffeb650>
1010b908:	923f0436 	bltu	r18,r8,1010b51c <__alt_data_end+0xfffeb51c>
1010b90c:	800897fa 	slli	r4,r16,31
1010b910:	9004d07a 	srli	r2,r18,1
1010b914:	8006d07a 	srli	r3,r16,1
1010b918:	902097fa 	slli	r16,r18,31
1010b91c:	20a4b03a 	or	r18,r4,r2
1010b920:	003f0106 	br	1010b528 <__alt_data_end+0xfffeb528>
1010b924:	e4bff51e 	bne	fp,r18,1010b8fc <__alt_data_end+0xfffeb8fc>
1010b928:	85bff22e 	bgeu	r16,r22,1010b8f4 <__alt_data_end+0xfffeb8f4>
1010b92c:	e0c7c83a 	sub	r3,fp,r3
1010b930:	1023883a 	mov	r17,r2
1010b934:	003f4606 	br	1010b650 <__alt_data_end+0xfffeb650>
1010b938:	100f883a 	mov	r7,r2
1010b93c:	003f2b06 	br	1010b5ec <__alt_data_end+0xfffeb5ec>
1010b940:	180d883a 	mov	r6,r3
1010b944:	003f1306 	br	1010b594 <__alt_data_end+0xfffeb594>
1010b948:	813fe436 	bltu	r16,r4,1010b8dc <__alt_data_end+0xfffeb8dc>
1010b94c:	0007883a 	mov	r3,zero
1010b950:	003f3f06 	br	1010b650 <__alt_data_end+0xfffeb650>
1010b954:	ba402c36 	bltu	r23,r9,1010ba08 <__divdf3+0x810>
1010b958:	4dc05426 	beq	r9,r23,1010baac <__divdf3+0x8b4>
1010b95c:	1011883a 	mov	r8,r2
1010b960:	003f8906 	br	1010b788 <__alt_data_end+0xfffeb788>
1010b964:	023fffc4 	movi	r8,-1
1010b968:	003f8806 	br	1010b78c <__alt_data_end+0xfffeb78c>
1010b96c:	1811883a 	mov	r8,r3
1010b970:	003f5406 	br	1010b6c4 <__alt_data_end+0xfffeb6c4>
1010b974:	1025883a 	mov	r18,r2
1010b978:	003f6d06 	br	1010b730 <__alt_data_end+0xfffeb730>
1010b97c:	b827883a 	mov	r19,r23
1010b980:	003f8206 	br	1010b78c <__alt_data_end+0xfffeb78c>
1010b984:	010007c4 	movi	r4,31
1010b988:	20c02616 	blt	r4,r3,1010ba24 <__divdf3+0x82c>
1010b98c:	00800804 	movi	r2,32
1010b990:	10c5c83a 	sub	r2,r2,r3
1010b994:	888a983a 	sll	r5,r17,r2
1010b998:	40c8d83a 	srl	r4,r8,r3
1010b99c:	4084983a 	sll	r2,r8,r2
1010b9a0:	88e2d83a 	srl	r17,r17,r3
1010b9a4:	2906b03a 	or	r3,r5,r4
1010b9a8:	1004c03a 	cmpne	r2,r2,zero
1010b9ac:	1886b03a 	or	r3,r3,r2
1010b9b0:	188001cc 	andi	r2,r3,7
1010b9b4:	10000726 	beq	r2,zero,1010b9d4 <__divdf3+0x7dc>
1010b9b8:	188003cc 	andi	r2,r3,15
1010b9bc:	01000104 	movi	r4,4
1010b9c0:	11000426 	beq	r2,r4,1010b9d4 <__divdf3+0x7dc>
1010b9c4:	1805883a 	mov	r2,r3
1010b9c8:	10c00104 	addi	r3,r2,4
1010b9cc:	1885803a 	cmpltu	r2,r3,r2
1010b9d0:	88a3883a 	add	r17,r17,r2
1010b9d4:	8880202c 	andhi	r2,r17,128
1010b9d8:	10002726 	beq	r2,zero,1010ba78 <__divdf3+0x880>
1010b9dc:	98c0004c 	andi	r3,r19,1
1010b9e0:	00800044 	movi	r2,1
1010b9e4:	000b883a 	mov	r5,zero
1010b9e8:	0025883a 	mov	r18,zero
1010b9ec:	003e6106 	br	1010b374 <__alt_data_end+0xfffeb374>
1010b9f0:	85a1883a 	add	r16,r16,r22
1010b9f4:	8585803a 	cmpltu	r2,r16,r22
1010b9f8:	1705883a 	add	r2,r2,fp
1010b9fc:	14a5883a 	add	r18,r2,r18
1010ba00:	8c7fff84 	addi	r17,r17,-2
1010ba04:	003f1106 	br	1010b64c <__alt_data_end+0xfffeb64c>
1010ba08:	b589883a 	add	r4,r22,r22
1010ba0c:	25ad803a 	cmpltu	r22,r4,r22
1010ba10:	b739883a 	add	fp,r22,fp
1010ba14:	40bfff84 	addi	r2,r8,-2
1010ba18:	bf2f883a 	add	r23,r23,fp
1010ba1c:	202d883a 	mov	r22,r4
1010ba20:	003f9306 	br	1010b870 <__alt_data_end+0xfffeb870>
1010ba24:	013ff844 	movi	r4,-31
1010ba28:	2085c83a 	sub	r2,r4,r2
1010ba2c:	8888d83a 	srl	r4,r17,r2
1010ba30:	00800804 	movi	r2,32
1010ba34:	18802126 	beq	r3,r2,1010babc <__divdf3+0x8c4>
1010ba38:	00801004 	movi	r2,64
1010ba3c:	10c5c83a 	sub	r2,r2,r3
1010ba40:	8884983a 	sll	r2,r17,r2
1010ba44:	1204b03a 	or	r2,r2,r8
1010ba48:	1004c03a 	cmpne	r2,r2,zero
1010ba4c:	2084b03a 	or	r2,r4,r2
1010ba50:	144001cc 	andi	r17,r2,7
1010ba54:	88000d1e 	bne	r17,zero,1010ba8c <__divdf3+0x894>
1010ba58:	000b883a 	mov	r5,zero
1010ba5c:	1024d0fa 	srli	r18,r2,3
1010ba60:	98c0004c 	andi	r3,r19,1
1010ba64:	0005883a 	mov	r2,zero
1010ba68:	9464b03a 	or	r18,r18,r17
1010ba6c:	003e4106 	br	1010b374 <__alt_data_end+0xfffeb374>
1010ba70:	1007883a 	mov	r3,r2
1010ba74:	0023883a 	mov	r17,zero
1010ba78:	880a927a 	slli	r5,r17,9
1010ba7c:	1805883a 	mov	r2,r3
1010ba80:	8822977a 	slli	r17,r17,29
1010ba84:	280ad33a 	srli	r5,r5,12
1010ba88:	003ff406 	br	1010ba5c <__alt_data_end+0xfffeba5c>
1010ba8c:	10c003cc 	andi	r3,r2,15
1010ba90:	01000104 	movi	r4,4
1010ba94:	193ff626 	beq	r3,r4,1010ba70 <__alt_data_end+0xfffeba70>
1010ba98:	0023883a 	mov	r17,zero
1010ba9c:	003fca06 	br	1010b9c8 <__alt_data_end+0xfffeb9c8>
1010baa0:	813fd336 	bltu	r16,r4,1010b9f0 <__alt_data_end+0xfffeb9f0>
1010baa4:	1023883a 	mov	r17,r2
1010baa8:	003fa806 	br	1010b94c <__alt_data_end+0xfffeb94c>
1010baac:	b0ffd636 	bltu	r22,r3,1010ba08 <__alt_data_end+0xfffeba08>
1010bab0:	1011883a 	mov	r8,r2
1010bab4:	b0ff341e 	bne	r22,r3,1010b788 <__alt_data_end+0xfffeb788>
1010bab8:	003f3406 	br	1010b78c <__alt_data_end+0xfffeb78c>
1010babc:	0005883a 	mov	r2,zero
1010bac0:	003fe006 	br	1010ba44 <__alt_data_end+0xfffeba44>
1010bac4:	00800434 	movhi	r2,16
1010bac8:	89400234 	orhi	r5,r17,8
1010bacc:	10bfffc4 	addi	r2,r2,-1
1010bad0:	b807883a 	mov	r3,r23
1010bad4:	288a703a 	and	r5,r5,r2
1010bad8:	4025883a 	mov	r18,r8
1010badc:	003e8206 	br	1010b4e8 <__alt_data_end+0xfffeb4e8>

1010bae0 <__eqdf2>:
1010bae0:	2804d53a 	srli	r2,r5,20
1010bae4:	3806d53a 	srli	r3,r7,20
1010bae8:	02000434 	movhi	r8,16
1010baec:	423fffc4 	addi	r8,r8,-1
1010baf0:	1081ffcc 	andi	r2,r2,2047
1010baf4:	0281ffc4 	movi	r10,2047
1010baf8:	2a12703a 	and	r9,r5,r8
1010bafc:	18c1ffcc 	andi	r3,r3,2047
1010bb00:	3a10703a 	and	r8,r7,r8
1010bb04:	280ad7fa 	srli	r5,r5,31
1010bb08:	380ed7fa 	srli	r7,r7,31
1010bb0c:	12801026 	beq	r2,r10,1010bb50 <__eqdf2+0x70>
1010bb10:	0281ffc4 	movi	r10,2047
1010bb14:	1a800a26 	beq	r3,r10,1010bb40 <__eqdf2+0x60>
1010bb18:	10c00226 	beq	r2,r3,1010bb24 <__eqdf2+0x44>
1010bb1c:	00800044 	movi	r2,1
1010bb20:	f800283a 	ret
1010bb24:	4a3ffd1e 	bne	r9,r8,1010bb1c <__alt_data_end+0xfffebb1c>
1010bb28:	21bffc1e 	bne	r4,r6,1010bb1c <__alt_data_end+0xfffebb1c>
1010bb2c:	29c00c26 	beq	r5,r7,1010bb60 <__eqdf2+0x80>
1010bb30:	103ffa1e 	bne	r2,zero,1010bb1c <__alt_data_end+0xfffebb1c>
1010bb34:	2244b03a 	or	r2,r4,r9
1010bb38:	1004c03a 	cmpne	r2,r2,zero
1010bb3c:	f800283a 	ret
1010bb40:	3214b03a 	or	r10,r6,r8
1010bb44:	503ff426 	beq	r10,zero,1010bb18 <__alt_data_end+0xfffebb18>
1010bb48:	00800044 	movi	r2,1
1010bb4c:	f800283a 	ret
1010bb50:	2254b03a 	or	r10,r4,r9
1010bb54:	503fee26 	beq	r10,zero,1010bb10 <__alt_data_end+0xfffebb10>
1010bb58:	00800044 	movi	r2,1
1010bb5c:	f800283a 	ret
1010bb60:	0005883a 	mov	r2,zero
1010bb64:	f800283a 	ret

1010bb68 <__gedf2>:
1010bb68:	2804d53a 	srli	r2,r5,20
1010bb6c:	3806d53a 	srli	r3,r7,20
1010bb70:	02000434 	movhi	r8,16
1010bb74:	423fffc4 	addi	r8,r8,-1
1010bb78:	1081ffcc 	andi	r2,r2,2047
1010bb7c:	0241ffc4 	movi	r9,2047
1010bb80:	2a14703a 	and	r10,r5,r8
1010bb84:	18c1ffcc 	andi	r3,r3,2047
1010bb88:	3a10703a 	and	r8,r7,r8
1010bb8c:	280ad7fa 	srli	r5,r5,31
1010bb90:	380ed7fa 	srli	r7,r7,31
1010bb94:	12401d26 	beq	r2,r9,1010bc0c <__gedf2+0xa4>
1010bb98:	0241ffc4 	movi	r9,2047
1010bb9c:	1a401226 	beq	r3,r9,1010bbe8 <__gedf2+0x80>
1010bba0:	1000081e 	bne	r2,zero,1010bbc4 <__gedf2+0x5c>
1010bba4:	2296b03a 	or	r11,r4,r10
1010bba8:	5813003a 	cmpeq	r9,r11,zero
1010bbac:	1800091e 	bne	r3,zero,1010bbd4 <__gedf2+0x6c>
1010bbb0:	3218b03a 	or	r12,r6,r8
1010bbb4:	6000071e 	bne	r12,zero,1010bbd4 <__gedf2+0x6c>
1010bbb8:	0005883a 	mov	r2,zero
1010bbbc:	5800101e 	bne	r11,zero,1010bc00 <__gedf2+0x98>
1010bbc0:	f800283a 	ret
1010bbc4:	18000c1e 	bne	r3,zero,1010bbf8 <__gedf2+0x90>
1010bbc8:	3212b03a 	or	r9,r6,r8
1010bbcc:	48000c26 	beq	r9,zero,1010bc00 <__gedf2+0x98>
1010bbd0:	0013883a 	mov	r9,zero
1010bbd4:	39c03fcc 	andi	r7,r7,255
1010bbd8:	48000826 	beq	r9,zero,1010bbfc <__gedf2+0x94>
1010bbdc:	38000926 	beq	r7,zero,1010bc04 <__gedf2+0x9c>
1010bbe0:	00800044 	movi	r2,1
1010bbe4:	f800283a 	ret
1010bbe8:	3212b03a 	or	r9,r6,r8
1010bbec:	483fec26 	beq	r9,zero,1010bba0 <__alt_data_end+0xfffebba0>
1010bbf0:	00bfff84 	movi	r2,-2
1010bbf4:	f800283a 	ret
1010bbf8:	39c03fcc 	andi	r7,r7,255
1010bbfc:	29c00626 	beq	r5,r7,1010bc18 <__gedf2+0xb0>
1010bc00:	283ff726 	beq	r5,zero,1010bbe0 <__alt_data_end+0xfffebbe0>
1010bc04:	00bfffc4 	movi	r2,-1
1010bc08:	f800283a 	ret
1010bc0c:	2292b03a 	or	r9,r4,r10
1010bc10:	483fe126 	beq	r9,zero,1010bb98 <__alt_data_end+0xfffebb98>
1010bc14:	003ff606 	br	1010bbf0 <__alt_data_end+0xfffebbf0>
1010bc18:	18bff916 	blt	r3,r2,1010bc00 <__alt_data_end+0xfffebc00>
1010bc1c:	10c00316 	blt	r2,r3,1010bc2c <__gedf2+0xc4>
1010bc20:	42bff736 	bltu	r8,r10,1010bc00 <__alt_data_end+0xfffebc00>
1010bc24:	52000326 	beq	r10,r8,1010bc34 <__gedf2+0xcc>
1010bc28:	5200042e 	bgeu	r10,r8,1010bc3c <__gedf2+0xd4>
1010bc2c:	283fec1e 	bne	r5,zero,1010bbe0 <__alt_data_end+0xfffebbe0>
1010bc30:	003ff406 	br	1010bc04 <__alt_data_end+0xfffebc04>
1010bc34:	313ff236 	bltu	r6,r4,1010bc00 <__alt_data_end+0xfffebc00>
1010bc38:	21bffc36 	bltu	r4,r6,1010bc2c <__alt_data_end+0xfffebc2c>
1010bc3c:	0005883a 	mov	r2,zero
1010bc40:	f800283a 	ret

1010bc44 <__ledf2>:
1010bc44:	2804d53a 	srli	r2,r5,20
1010bc48:	3810d53a 	srli	r8,r7,20
1010bc4c:	00c00434 	movhi	r3,16
1010bc50:	18ffffc4 	addi	r3,r3,-1
1010bc54:	1081ffcc 	andi	r2,r2,2047
1010bc58:	0241ffc4 	movi	r9,2047
1010bc5c:	28d4703a 	and	r10,r5,r3
1010bc60:	4201ffcc 	andi	r8,r8,2047
1010bc64:	38c6703a 	and	r3,r7,r3
1010bc68:	280ad7fa 	srli	r5,r5,31
1010bc6c:	380ed7fa 	srli	r7,r7,31
1010bc70:	12401f26 	beq	r2,r9,1010bcf0 <__ledf2+0xac>
1010bc74:	0241ffc4 	movi	r9,2047
1010bc78:	42401426 	beq	r8,r9,1010bccc <__ledf2+0x88>
1010bc7c:	1000091e 	bne	r2,zero,1010bca4 <__ledf2+0x60>
1010bc80:	2296b03a 	or	r11,r4,r10
1010bc84:	5813003a 	cmpeq	r9,r11,zero
1010bc88:	29403fcc 	andi	r5,r5,255
1010bc8c:	40000a1e 	bne	r8,zero,1010bcb8 <__ledf2+0x74>
1010bc90:	30d8b03a 	or	r12,r6,r3
1010bc94:	6000081e 	bne	r12,zero,1010bcb8 <__ledf2+0x74>
1010bc98:	0005883a 	mov	r2,zero
1010bc9c:	5800111e 	bne	r11,zero,1010bce4 <__ledf2+0xa0>
1010bca0:	f800283a 	ret
1010bca4:	29403fcc 	andi	r5,r5,255
1010bca8:	40000c1e 	bne	r8,zero,1010bcdc <__ledf2+0x98>
1010bcac:	30d2b03a 	or	r9,r6,r3
1010bcb0:	48000c26 	beq	r9,zero,1010bce4 <__ledf2+0xa0>
1010bcb4:	0013883a 	mov	r9,zero
1010bcb8:	39c03fcc 	andi	r7,r7,255
1010bcbc:	48000826 	beq	r9,zero,1010bce0 <__ledf2+0x9c>
1010bcc0:	38001126 	beq	r7,zero,1010bd08 <__ledf2+0xc4>
1010bcc4:	00800044 	movi	r2,1
1010bcc8:	f800283a 	ret
1010bccc:	30d2b03a 	or	r9,r6,r3
1010bcd0:	483fea26 	beq	r9,zero,1010bc7c <__alt_data_end+0xfffebc7c>
1010bcd4:	00800084 	movi	r2,2
1010bcd8:	f800283a 	ret
1010bcdc:	39c03fcc 	andi	r7,r7,255
1010bce0:	39400726 	beq	r7,r5,1010bd00 <__ledf2+0xbc>
1010bce4:	2800081e 	bne	r5,zero,1010bd08 <__ledf2+0xc4>
1010bce8:	00800044 	movi	r2,1
1010bcec:	f800283a 	ret
1010bcf0:	2292b03a 	or	r9,r4,r10
1010bcf4:	483fdf26 	beq	r9,zero,1010bc74 <__alt_data_end+0xfffebc74>
1010bcf8:	00800084 	movi	r2,2
1010bcfc:	f800283a 	ret
1010bd00:	4080030e 	bge	r8,r2,1010bd10 <__ledf2+0xcc>
1010bd04:	383fef26 	beq	r7,zero,1010bcc4 <__alt_data_end+0xfffebcc4>
1010bd08:	00bfffc4 	movi	r2,-1
1010bd0c:	f800283a 	ret
1010bd10:	123feb16 	blt	r2,r8,1010bcc0 <__alt_data_end+0xfffebcc0>
1010bd14:	1abff336 	bltu	r3,r10,1010bce4 <__alt_data_end+0xfffebce4>
1010bd18:	50c00326 	beq	r10,r3,1010bd28 <__ledf2+0xe4>
1010bd1c:	50c0042e 	bgeu	r10,r3,1010bd30 <__ledf2+0xec>
1010bd20:	283fe81e 	bne	r5,zero,1010bcc4 <__alt_data_end+0xfffebcc4>
1010bd24:	003ff806 	br	1010bd08 <__alt_data_end+0xfffebd08>
1010bd28:	313fee36 	bltu	r6,r4,1010bce4 <__alt_data_end+0xfffebce4>
1010bd2c:	21bffc36 	bltu	r4,r6,1010bd20 <__alt_data_end+0xfffebd20>
1010bd30:	0005883a 	mov	r2,zero
1010bd34:	f800283a 	ret

1010bd38 <__muldf3>:
1010bd38:	defff304 	addi	sp,sp,-52
1010bd3c:	2804d53a 	srli	r2,r5,20
1010bd40:	dd800915 	stw	r22,36(sp)
1010bd44:	282cd7fa 	srli	r22,r5,31
1010bd48:	dc000315 	stw	r16,12(sp)
1010bd4c:	04000434 	movhi	r16,16
1010bd50:	dd400815 	stw	r21,32(sp)
1010bd54:	dc800515 	stw	r18,20(sp)
1010bd58:	843fffc4 	addi	r16,r16,-1
1010bd5c:	dfc00c15 	stw	ra,48(sp)
1010bd60:	df000b15 	stw	fp,44(sp)
1010bd64:	ddc00a15 	stw	r23,40(sp)
1010bd68:	dd000715 	stw	r20,28(sp)
1010bd6c:	dcc00615 	stw	r19,24(sp)
1010bd70:	dc400415 	stw	r17,16(sp)
1010bd74:	1481ffcc 	andi	r18,r2,2047
1010bd78:	2c20703a 	and	r16,r5,r16
1010bd7c:	b02b883a 	mov	r21,r22
1010bd80:	b2403fcc 	andi	r9,r22,255
1010bd84:	90006026 	beq	r18,zero,1010bf08 <__muldf3+0x1d0>
1010bd88:	0081ffc4 	movi	r2,2047
1010bd8c:	2029883a 	mov	r20,r4
1010bd90:	90803626 	beq	r18,r2,1010be6c <__muldf3+0x134>
1010bd94:	80800434 	orhi	r2,r16,16
1010bd98:	100490fa 	slli	r2,r2,3
1010bd9c:	2020d77a 	srli	r16,r4,29
1010bda0:	202890fa 	slli	r20,r4,3
1010bda4:	94bf0044 	addi	r18,r18,-1023
1010bda8:	80a0b03a 	or	r16,r16,r2
1010bdac:	0027883a 	mov	r19,zero
1010bdb0:	0039883a 	mov	fp,zero
1010bdb4:	3804d53a 	srli	r2,r7,20
1010bdb8:	382ed7fa 	srli	r23,r7,31
1010bdbc:	04400434 	movhi	r17,16
1010bdc0:	8c7fffc4 	addi	r17,r17,-1
1010bdc4:	1081ffcc 	andi	r2,r2,2047
1010bdc8:	3011883a 	mov	r8,r6
1010bdcc:	3c62703a 	and	r17,r7,r17
1010bdd0:	ba803fcc 	andi	r10,r23,255
1010bdd4:	10006d26 	beq	r2,zero,1010bf8c <__muldf3+0x254>
1010bdd8:	00c1ffc4 	movi	r3,2047
1010bddc:	10c06526 	beq	r2,r3,1010bf74 <__muldf3+0x23c>
1010bde0:	88c00434 	orhi	r3,r17,16
1010bde4:	180690fa 	slli	r3,r3,3
1010bde8:	3022d77a 	srli	r17,r6,29
1010bdec:	301090fa 	slli	r8,r6,3
1010bdf0:	10bf0044 	addi	r2,r2,-1023
1010bdf4:	88e2b03a 	or	r17,r17,r3
1010bdf8:	000b883a 	mov	r5,zero
1010bdfc:	9085883a 	add	r2,r18,r2
1010be00:	2cc8b03a 	or	r4,r5,r19
1010be04:	00c003c4 	movi	r3,15
1010be08:	bdacf03a 	xor	r22,r23,r22
1010be0c:	12c00044 	addi	r11,r2,1
1010be10:	19009936 	bltu	r3,r4,1010c078 <__muldf3+0x340>
1010be14:	200890ba 	slli	r4,r4,2
1010be18:	00c40474 	movhi	r3,4113
1010be1c:	18ef8b04 	addi	r3,r3,-16852
1010be20:	20c9883a 	add	r4,r4,r3
1010be24:	20c00017 	ldw	r3,0(r4)
1010be28:	1800683a 	jmp	r3
1010be2c:	1010c078 	rdprs	zero,r2,17153
1010be30:	1010be8c 	andi	zero,r2,17146
1010be34:	1010be8c 	andi	zero,r2,17146
1010be38:	1010be88 	cmpgei	zero,r2,17146
1010be3c:	1010c054 	ori	zero,r2,17153
1010be40:	1010c054 	ori	zero,r2,17153
1010be44:	1010c03c 	xorhi	zero,r2,17152
1010be48:	1010be88 	cmpgei	zero,r2,17146
1010be4c:	1010c054 	ori	zero,r2,17153
1010be50:	1010c03c 	xorhi	zero,r2,17152
1010be54:	1010c054 	ori	zero,r2,17153
1010be58:	1010be88 	cmpgei	zero,r2,17146
1010be5c:	1010c064 	muli	zero,r2,17153
1010be60:	1010c064 	muli	zero,r2,17153
1010be64:	1010c064 	muli	zero,r2,17153
1010be68:	1010c280 	call	11010c28 <__alt_data_end+0xef0c28>
1010be6c:	2404b03a 	or	r2,r4,r16
1010be70:	10006f1e 	bne	r2,zero,1010c030 <__muldf3+0x2f8>
1010be74:	04c00204 	movi	r19,8
1010be78:	0021883a 	mov	r16,zero
1010be7c:	0029883a 	mov	r20,zero
1010be80:	07000084 	movi	fp,2
1010be84:	003fcb06 	br	1010bdb4 <__alt_data_end+0xfffebdb4>
1010be88:	502d883a 	mov	r22,r10
1010be8c:	00800084 	movi	r2,2
1010be90:	28805726 	beq	r5,r2,1010bff0 <__muldf3+0x2b8>
1010be94:	008000c4 	movi	r2,3
1010be98:	28816626 	beq	r5,r2,1010c434 <__muldf3+0x6fc>
1010be9c:	00800044 	movi	r2,1
1010bea0:	2881411e 	bne	r5,r2,1010c3a8 <__muldf3+0x670>
1010bea4:	b02b883a 	mov	r21,r22
1010bea8:	0005883a 	mov	r2,zero
1010beac:	000b883a 	mov	r5,zero
1010beb0:	0029883a 	mov	r20,zero
1010beb4:	1004953a 	slli	r2,r2,20
1010beb8:	a8c03fcc 	andi	r3,r21,255
1010bebc:	04400434 	movhi	r17,16
1010bec0:	8c7fffc4 	addi	r17,r17,-1
1010bec4:	180697fa 	slli	r3,r3,31
1010bec8:	2c4a703a 	and	r5,r5,r17
1010becc:	288ab03a 	or	r5,r5,r2
1010bed0:	28c6b03a 	or	r3,r5,r3
1010bed4:	a005883a 	mov	r2,r20
1010bed8:	dfc00c17 	ldw	ra,48(sp)
1010bedc:	df000b17 	ldw	fp,44(sp)
1010bee0:	ddc00a17 	ldw	r23,40(sp)
1010bee4:	dd800917 	ldw	r22,36(sp)
1010bee8:	dd400817 	ldw	r21,32(sp)
1010beec:	dd000717 	ldw	r20,28(sp)
1010bef0:	dcc00617 	ldw	r19,24(sp)
1010bef4:	dc800517 	ldw	r18,20(sp)
1010bef8:	dc400417 	ldw	r17,16(sp)
1010befc:	dc000317 	ldw	r16,12(sp)
1010bf00:	dec00d04 	addi	sp,sp,52
1010bf04:	f800283a 	ret
1010bf08:	2404b03a 	or	r2,r4,r16
1010bf0c:	2027883a 	mov	r19,r4
1010bf10:	10004226 	beq	r2,zero,1010c01c <__muldf3+0x2e4>
1010bf14:	8000fc26 	beq	r16,zero,1010c308 <__muldf3+0x5d0>
1010bf18:	8009883a 	mov	r4,r16
1010bf1c:	d9800215 	stw	r6,8(sp)
1010bf20:	d9c00015 	stw	r7,0(sp)
1010bf24:	da400115 	stw	r9,4(sp)
1010bf28:	010cf500 	call	1010cf50 <__clzsi2>
1010bf2c:	d9800217 	ldw	r6,8(sp)
1010bf30:	d9c00017 	ldw	r7,0(sp)
1010bf34:	da400117 	ldw	r9,4(sp)
1010bf38:	113ffd44 	addi	r4,r2,-11
1010bf3c:	00c00704 	movi	r3,28
1010bf40:	1900ed16 	blt	r3,r4,1010c2f8 <__muldf3+0x5c0>
1010bf44:	00c00744 	movi	r3,29
1010bf48:	147ffe04 	addi	r17,r2,-8
1010bf4c:	1907c83a 	sub	r3,r3,r4
1010bf50:	8460983a 	sll	r16,r16,r17
1010bf54:	98c6d83a 	srl	r3,r19,r3
1010bf58:	9c68983a 	sll	r20,r19,r17
1010bf5c:	1c20b03a 	or	r16,r3,r16
1010bf60:	1080fcc4 	addi	r2,r2,1011
1010bf64:	00a5c83a 	sub	r18,zero,r2
1010bf68:	0027883a 	mov	r19,zero
1010bf6c:	0039883a 	mov	fp,zero
1010bf70:	003f9006 	br	1010bdb4 <__alt_data_end+0xfffebdb4>
1010bf74:	3446b03a 	or	r3,r6,r17
1010bf78:	1800261e 	bne	r3,zero,1010c014 <__muldf3+0x2dc>
1010bf7c:	0023883a 	mov	r17,zero
1010bf80:	0011883a 	mov	r8,zero
1010bf84:	01400084 	movi	r5,2
1010bf88:	003f9c06 	br	1010bdfc <__alt_data_end+0xfffebdfc>
1010bf8c:	3446b03a 	or	r3,r6,r17
1010bf90:	18001c26 	beq	r3,zero,1010c004 <__muldf3+0x2cc>
1010bf94:	8800ce26 	beq	r17,zero,1010c2d0 <__muldf3+0x598>
1010bf98:	8809883a 	mov	r4,r17
1010bf9c:	d9800215 	stw	r6,8(sp)
1010bfa0:	da400115 	stw	r9,4(sp)
1010bfa4:	da800015 	stw	r10,0(sp)
1010bfa8:	010cf500 	call	1010cf50 <__clzsi2>
1010bfac:	d9800217 	ldw	r6,8(sp)
1010bfb0:	da400117 	ldw	r9,4(sp)
1010bfb4:	da800017 	ldw	r10,0(sp)
1010bfb8:	113ffd44 	addi	r4,r2,-11
1010bfbc:	00c00704 	movi	r3,28
1010bfc0:	1900bf16 	blt	r3,r4,1010c2c0 <__muldf3+0x588>
1010bfc4:	00c00744 	movi	r3,29
1010bfc8:	123ffe04 	addi	r8,r2,-8
1010bfcc:	1907c83a 	sub	r3,r3,r4
1010bfd0:	8a22983a 	sll	r17,r17,r8
1010bfd4:	30c6d83a 	srl	r3,r6,r3
1010bfd8:	3210983a 	sll	r8,r6,r8
1010bfdc:	1c62b03a 	or	r17,r3,r17
1010bfe0:	1080fcc4 	addi	r2,r2,1011
1010bfe4:	0085c83a 	sub	r2,zero,r2
1010bfe8:	000b883a 	mov	r5,zero
1010bfec:	003f8306 	br	1010bdfc <__alt_data_end+0xfffebdfc>
1010bff0:	b02b883a 	mov	r21,r22
1010bff4:	0081ffc4 	movi	r2,2047
1010bff8:	000b883a 	mov	r5,zero
1010bffc:	0029883a 	mov	r20,zero
1010c000:	003fac06 	br	1010beb4 <__alt_data_end+0xfffebeb4>
1010c004:	0023883a 	mov	r17,zero
1010c008:	0011883a 	mov	r8,zero
1010c00c:	01400044 	movi	r5,1
1010c010:	003f7a06 	br	1010bdfc <__alt_data_end+0xfffebdfc>
1010c014:	014000c4 	movi	r5,3
1010c018:	003f7806 	br	1010bdfc <__alt_data_end+0xfffebdfc>
1010c01c:	04c00104 	movi	r19,4
1010c020:	0021883a 	mov	r16,zero
1010c024:	0029883a 	mov	r20,zero
1010c028:	07000044 	movi	fp,1
1010c02c:	003f6106 	br	1010bdb4 <__alt_data_end+0xfffebdb4>
1010c030:	04c00304 	movi	r19,12
1010c034:	070000c4 	movi	fp,3
1010c038:	003f5e06 	br	1010bdb4 <__alt_data_end+0xfffebdb4>
1010c03c:	01400434 	movhi	r5,16
1010c040:	002b883a 	mov	r21,zero
1010c044:	297fffc4 	addi	r5,r5,-1
1010c048:	053fffc4 	movi	r20,-1
1010c04c:	0081ffc4 	movi	r2,2047
1010c050:	003f9806 	br	1010beb4 <__alt_data_end+0xfffebeb4>
1010c054:	8023883a 	mov	r17,r16
1010c058:	a011883a 	mov	r8,r20
1010c05c:	e00b883a 	mov	r5,fp
1010c060:	003f8a06 	br	1010be8c <__alt_data_end+0xfffebe8c>
1010c064:	8023883a 	mov	r17,r16
1010c068:	a011883a 	mov	r8,r20
1010c06c:	482d883a 	mov	r22,r9
1010c070:	e00b883a 	mov	r5,fp
1010c074:	003f8506 	br	1010be8c <__alt_data_end+0xfffebe8c>
1010c078:	a00ad43a 	srli	r5,r20,16
1010c07c:	401ad43a 	srli	r13,r8,16
1010c080:	a53fffcc 	andi	r20,r20,65535
1010c084:	423fffcc 	andi	r8,r8,65535
1010c088:	4519383a 	mul	r12,r8,r20
1010c08c:	4147383a 	mul	r3,r8,r5
1010c090:	6d09383a 	mul	r4,r13,r20
1010c094:	600cd43a 	srli	r6,r12,16
1010c098:	2b5d383a 	mul	r14,r5,r13
1010c09c:	20c9883a 	add	r4,r4,r3
1010c0a0:	310d883a 	add	r6,r6,r4
1010c0a4:	30c0022e 	bgeu	r6,r3,1010c0b0 <__muldf3+0x378>
1010c0a8:	00c00074 	movhi	r3,1
1010c0ac:	70dd883a 	add	r14,r14,r3
1010c0b0:	8826d43a 	srli	r19,r17,16
1010c0b4:	8bffffcc 	andi	r15,r17,65535
1010c0b8:	7d23383a 	mul	r17,r15,r20
1010c0bc:	7949383a 	mul	r4,r15,r5
1010c0c0:	9d29383a 	mul	r20,r19,r20
1010c0c4:	8814d43a 	srli	r10,r17,16
1010c0c8:	3012943a 	slli	r9,r6,16
1010c0cc:	a129883a 	add	r20,r20,r4
1010c0d0:	633fffcc 	andi	r12,r12,65535
1010c0d4:	5515883a 	add	r10,r10,r20
1010c0d8:	3006d43a 	srli	r3,r6,16
1010c0dc:	4b13883a 	add	r9,r9,r12
1010c0e0:	2ccb383a 	mul	r5,r5,r19
1010c0e4:	5100022e 	bgeu	r10,r4,1010c0f0 <__muldf3+0x3b8>
1010c0e8:	01000074 	movhi	r4,1
1010c0ec:	290b883a 	add	r5,r5,r4
1010c0f0:	802ad43a 	srli	r21,r16,16
1010c0f4:	843fffcc 	andi	r16,r16,65535
1010c0f8:	440d383a 	mul	r6,r8,r16
1010c0fc:	4565383a 	mul	r18,r8,r21
1010c100:	8349383a 	mul	r4,r16,r13
1010c104:	500e943a 	slli	r7,r10,16
1010c108:	3010d43a 	srli	r8,r6,16
1010c10c:	5028d43a 	srli	r20,r10,16
1010c110:	2489883a 	add	r4,r4,r18
1010c114:	8abfffcc 	andi	r10,r17,65535
1010c118:	3a95883a 	add	r10,r7,r10
1010c11c:	4119883a 	add	r12,r8,r4
1010c120:	a169883a 	add	r20,r20,r5
1010c124:	1a87883a 	add	r3,r3,r10
1010c128:	6d5b383a 	mul	r13,r13,r21
1010c12c:	6480022e 	bgeu	r12,r18,1010c138 <__muldf3+0x400>
1010c130:	01000074 	movhi	r4,1
1010c134:	691b883a 	add	r13,r13,r4
1010c138:	7c25383a 	mul	r18,r15,r16
1010c13c:	7d4b383a 	mul	r5,r15,r21
1010c140:	84cf383a 	mul	r7,r16,r19
1010c144:	901ed43a 	srli	r15,r18,16
1010c148:	6008d43a 	srli	r4,r12,16
1010c14c:	6010943a 	slli	r8,r12,16
1010c150:	394f883a 	add	r7,r7,r5
1010c154:	333fffcc 	andi	r12,r6,65535
1010c158:	79df883a 	add	r15,r15,r7
1010c15c:	235b883a 	add	r13,r4,r13
1010c160:	9d63383a 	mul	r17,r19,r21
1010c164:	4309883a 	add	r4,r8,r12
1010c168:	7940022e 	bgeu	r15,r5,1010c174 <__muldf3+0x43c>
1010c16c:	01400074 	movhi	r5,1
1010c170:	8963883a 	add	r17,r17,r5
1010c174:	780a943a 	slli	r5,r15,16
1010c178:	91bfffcc 	andi	r6,r18,65535
1010c17c:	70c7883a 	add	r3,r14,r3
1010c180:	298d883a 	add	r6,r5,r6
1010c184:	1a8f803a 	cmpltu	r7,r3,r10
1010c188:	350b883a 	add	r5,r6,r20
1010c18c:	20c7883a 	add	r3,r4,r3
1010c190:	3955883a 	add	r10,r7,r5
1010c194:	1909803a 	cmpltu	r4,r3,r4
1010c198:	6a91883a 	add	r8,r13,r10
1010c19c:	780cd43a 	srli	r6,r15,16
1010c1a0:	2219883a 	add	r12,r4,r8
1010c1a4:	2d0b803a 	cmpltu	r5,r5,r20
1010c1a8:	51cf803a 	cmpltu	r7,r10,r7
1010c1ac:	29ceb03a 	or	r7,r5,r7
1010c1b0:	4351803a 	cmpltu	r8,r8,r13
1010c1b4:	610b803a 	cmpltu	r5,r12,r4
1010c1b8:	4148b03a 	or	r4,r8,r5
1010c1bc:	398f883a 	add	r7,r7,r6
1010c1c0:	3909883a 	add	r4,r7,r4
1010c1c4:	1810927a 	slli	r8,r3,9
1010c1c8:	2449883a 	add	r4,r4,r17
1010c1cc:	2008927a 	slli	r4,r4,9
1010c1d0:	6022d5fa 	srli	r17,r12,23
1010c1d4:	1806d5fa 	srli	r3,r3,23
1010c1d8:	4252b03a 	or	r9,r8,r9
1010c1dc:	600a927a 	slli	r5,r12,9
1010c1e0:	4810c03a 	cmpne	r8,r9,zero
1010c1e4:	2462b03a 	or	r17,r4,r17
1010c1e8:	40c6b03a 	or	r3,r8,r3
1010c1ec:	8900402c 	andhi	r4,r17,256
1010c1f0:	1950b03a 	or	r8,r3,r5
1010c1f4:	20000726 	beq	r4,zero,1010c214 <__muldf3+0x4dc>
1010c1f8:	4006d07a 	srli	r3,r8,1
1010c1fc:	880497fa 	slli	r2,r17,31
1010c200:	4200004c 	andi	r8,r8,1
1010c204:	8822d07a 	srli	r17,r17,1
1010c208:	1a10b03a 	or	r8,r3,r8
1010c20c:	1210b03a 	or	r8,r2,r8
1010c210:	5805883a 	mov	r2,r11
1010c214:	1140ffc4 	addi	r5,r2,1023
1010c218:	0140440e 	bge	zero,r5,1010c32c <__muldf3+0x5f4>
1010c21c:	40c001cc 	andi	r3,r8,7
1010c220:	18000726 	beq	r3,zero,1010c240 <__muldf3+0x508>
1010c224:	40c003cc 	andi	r3,r8,15
1010c228:	01000104 	movi	r4,4
1010c22c:	19000426 	beq	r3,r4,1010c240 <__muldf3+0x508>
1010c230:	4107883a 	add	r3,r8,r4
1010c234:	1a11803a 	cmpltu	r8,r3,r8
1010c238:	8a23883a 	add	r17,r17,r8
1010c23c:	1811883a 	mov	r8,r3
1010c240:	88c0402c 	andhi	r3,r17,256
1010c244:	18000426 	beq	r3,zero,1010c258 <__muldf3+0x520>
1010c248:	11410004 	addi	r5,r2,1024
1010c24c:	00bfc034 	movhi	r2,65280
1010c250:	10bfffc4 	addi	r2,r2,-1
1010c254:	88a2703a 	and	r17,r17,r2
1010c258:	0081ff84 	movi	r2,2046
1010c25c:	117f6416 	blt	r2,r5,1010bff0 <__alt_data_end+0xfffebff0>
1010c260:	8828977a 	slli	r20,r17,29
1010c264:	4010d0fa 	srli	r8,r8,3
1010c268:	8822927a 	slli	r17,r17,9
1010c26c:	2881ffcc 	andi	r2,r5,2047
1010c270:	a228b03a 	or	r20,r20,r8
1010c274:	880ad33a 	srli	r5,r17,12
1010c278:	b02b883a 	mov	r21,r22
1010c27c:	003f0d06 	br	1010beb4 <__alt_data_end+0xfffebeb4>
1010c280:	8080022c 	andhi	r2,r16,8
1010c284:	10000926 	beq	r2,zero,1010c2ac <__muldf3+0x574>
1010c288:	8880022c 	andhi	r2,r17,8
1010c28c:	1000071e 	bne	r2,zero,1010c2ac <__muldf3+0x574>
1010c290:	00800434 	movhi	r2,16
1010c294:	89400234 	orhi	r5,r17,8
1010c298:	10bfffc4 	addi	r2,r2,-1
1010c29c:	b82b883a 	mov	r21,r23
1010c2a0:	288a703a 	and	r5,r5,r2
1010c2a4:	4029883a 	mov	r20,r8
1010c2a8:	003f6806 	br	1010c04c <__alt_data_end+0xfffec04c>
1010c2ac:	00800434 	movhi	r2,16
1010c2b0:	81400234 	orhi	r5,r16,8
1010c2b4:	10bfffc4 	addi	r2,r2,-1
1010c2b8:	288a703a 	and	r5,r5,r2
1010c2bc:	003f6306 	br	1010c04c <__alt_data_end+0xfffec04c>
1010c2c0:	147ff604 	addi	r17,r2,-40
1010c2c4:	3462983a 	sll	r17,r6,r17
1010c2c8:	0011883a 	mov	r8,zero
1010c2cc:	003f4406 	br	1010bfe0 <__alt_data_end+0xfffebfe0>
1010c2d0:	3009883a 	mov	r4,r6
1010c2d4:	d9800215 	stw	r6,8(sp)
1010c2d8:	da400115 	stw	r9,4(sp)
1010c2dc:	da800015 	stw	r10,0(sp)
1010c2e0:	010cf500 	call	1010cf50 <__clzsi2>
1010c2e4:	10800804 	addi	r2,r2,32
1010c2e8:	da800017 	ldw	r10,0(sp)
1010c2ec:	da400117 	ldw	r9,4(sp)
1010c2f0:	d9800217 	ldw	r6,8(sp)
1010c2f4:	003f3006 	br	1010bfb8 <__alt_data_end+0xfffebfb8>
1010c2f8:	143ff604 	addi	r16,r2,-40
1010c2fc:	9c20983a 	sll	r16,r19,r16
1010c300:	0029883a 	mov	r20,zero
1010c304:	003f1606 	br	1010bf60 <__alt_data_end+0xfffebf60>
1010c308:	d9800215 	stw	r6,8(sp)
1010c30c:	d9c00015 	stw	r7,0(sp)
1010c310:	da400115 	stw	r9,4(sp)
1010c314:	010cf500 	call	1010cf50 <__clzsi2>
1010c318:	10800804 	addi	r2,r2,32
1010c31c:	da400117 	ldw	r9,4(sp)
1010c320:	d9c00017 	ldw	r7,0(sp)
1010c324:	d9800217 	ldw	r6,8(sp)
1010c328:	003f0306 	br	1010bf38 <__alt_data_end+0xfffebf38>
1010c32c:	00c00044 	movi	r3,1
1010c330:	1947c83a 	sub	r3,r3,r5
1010c334:	00800e04 	movi	r2,56
1010c338:	10feda16 	blt	r2,r3,1010bea4 <__alt_data_end+0xfffebea4>
1010c33c:	008007c4 	movi	r2,31
1010c340:	10c01b16 	blt	r2,r3,1010c3b0 <__muldf3+0x678>
1010c344:	00800804 	movi	r2,32
1010c348:	10c5c83a 	sub	r2,r2,r3
1010c34c:	888a983a 	sll	r5,r17,r2
1010c350:	40c8d83a 	srl	r4,r8,r3
1010c354:	4084983a 	sll	r2,r8,r2
1010c358:	88e2d83a 	srl	r17,r17,r3
1010c35c:	2906b03a 	or	r3,r5,r4
1010c360:	1004c03a 	cmpne	r2,r2,zero
1010c364:	1886b03a 	or	r3,r3,r2
1010c368:	188001cc 	andi	r2,r3,7
1010c36c:	10000726 	beq	r2,zero,1010c38c <__muldf3+0x654>
1010c370:	188003cc 	andi	r2,r3,15
1010c374:	01000104 	movi	r4,4
1010c378:	11000426 	beq	r2,r4,1010c38c <__muldf3+0x654>
1010c37c:	1805883a 	mov	r2,r3
1010c380:	10c00104 	addi	r3,r2,4
1010c384:	1885803a 	cmpltu	r2,r3,r2
1010c388:	88a3883a 	add	r17,r17,r2
1010c38c:	8880202c 	andhi	r2,r17,128
1010c390:	10001c26 	beq	r2,zero,1010c404 <__muldf3+0x6cc>
1010c394:	b02b883a 	mov	r21,r22
1010c398:	00800044 	movi	r2,1
1010c39c:	000b883a 	mov	r5,zero
1010c3a0:	0029883a 	mov	r20,zero
1010c3a4:	003ec306 	br	1010beb4 <__alt_data_end+0xfffebeb4>
1010c3a8:	5805883a 	mov	r2,r11
1010c3ac:	003f9906 	br	1010c214 <__alt_data_end+0xfffec214>
1010c3b0:	00bff844 	movi	r2,-31
1010c3b4:	1145c83a 	sub	r2,r2,r5
1010c3b8:	8888d83a 	srl	r4,r17,r2
1010c3bc:	00800804 	movi	r2,32
1010c3c0:	18801a26 	beq	r3,r2,1010c42c <__muldf3+0x6f4>
1010c3c4:	00801004 	movi	r2,64
1010c3c8:	10c5c83a 	sub	r2,r2,r3
1010c3cc:	8884983a 	sll	r2,r17,r2
1010c3d0:	1204b03a 	or	r2,r2,r8
1010c3d4:	1004c03a 	cmpne	r2,r2,zero
1010c3d8:	2084b03a 	or	r2,r4,r2
1010c3dc:	144001cc 	andi	r17,r2,7
1010c3e0:	88000d1e 	bne	r17,zero,1010c418 <__muldf3+0x6e0>
1010c3e4:	000b883a 	mov	r5,zero
1010c3e8:	1028d0fa 	srli	r20,r2,3
1010c3ec:	b02b883a 	mov	r21,r22
1010c3f0:	0005883a 	mov	r2,zero
1010c3f4:	a468b03a 	or	r20,r20,r17
1010c3f8:	003eae06 	br	1010beb4 <__alt_data_end+0xfffebeb4>
1010c3fc:	1007883a 	mov	r3,r2
1010c400:	0023883a 	mov	r17,zero
1010c404:	880a927a 	slli	r5,r17,9
1010c408:	1805883a 	mov	r2,r3
1010c40c:	8822977a 	slli	r17,r17,29
1010c410:	280ad33a 	srli	r5,r5,12
1010c414:	003ff406 	br	1010c3e8 <__alt_data_end+0xfffec3e8>
1010c418:	10c003cc 	andi	r3,r2,15
1010c41c:	01000104 	movi	r4,4
1010c420:	193ff626 	beq	r3,r4,1010c3fc <__alt_data_end+0xfffec3fc>
1010c424:	0023883a 	mov	r17,zero
1010c428:	003fd506 	br	1010c380 <__alt_data_end+0xfffec380>
1010c42c:	0005883a 	mov	r2,zero
1010c430:	003fe706 	br	1010c3d0 <__alt_data_end+0xfffec3d0>
1010c434:	00800434 	movhi	r2,16
1010c438:	89400234 	orhi	r5,r17,8
1010c43c:	10bfffc4 	addi	r2,r2,-1
1010c440:	b02b883a 	mov	r21,r22
1010c444:	288a703a 	and	r5,r5,r2
1010c448:	4029883a 	mov	r20,r8
1010c44c:	003eff06 	br	1010c04c <__alt_data_end+0xfffec04c>

1010c450 <__subdf3>:
1010c450:	02000434 	movhi	r8,16
1010c454:	423fffc4 	addi	r8,r8,-1
1010c458:	defffb04 	addi	sp,sp,-20
1010c45c:	2a14703a 	and	r10,r5,r8
1010c460:	3812d53a 	srli	r9,r7,20
1010c464:	3a10703a 	and	r8,r7,r8
1010c468:	2006d77a 	srli	r3,r4,29
1010c46c:	3004d77a 	srli	r2,r6,29
1010c470:	dc000015 	stw	r16,0(sp)
1010c474:	501490fa 	slli	r10,r10,3
1010c478:	2820d53a 	srli	r16,r5,20
1010c47c:	401090fa 	slli	r8,r8,3
1010c480:	dc800215 	stw	r18,8(sp)
1010c484:	dc400115 	stw	r17,4(sp)
1010c488:	dfc00415 	stw	ra,16(sp)
1010c48c:	202290fa 	slli	r17,r4,3
1010c490:	dcc00315 	stw	r19,12(sp)
1010c494:	4a41ffcc 	andi	r9,r9,2047
1010c498:	0101ffc4 	movi	r4,2047
1010c49c:	2824d7fa 	srli	r18,r5,31
1010c4a0:	8401ffcc 	andi	r16,r16,2047
1010c4a4:	50c6b03a 	or	r3,r10,r3
1010c4a8:	380ed7fa 	srli	r7,r7,31
1010c4ac:	408ab03a 	or	r5,r8,r2
1010c4b0:	300c90fa 	slli	r6,r6,3
1010c4b4:	49009626 	beq	r9,r4,1010c710 <__subdf3+0x2c0>
1010c4b8:	39c0005c 	xori	r7,r7,1
1010c4bc:	8245c83a 	sub	r2,r16,r9
1010c4c0:	3c807426 	beq	r7,r18,1010c694 <__subdf3+0x244>
1010c4c4:	0080af0e 	bge	zero,r2,1010c784 <__subdf3+0x334>
1010c4c8:	48002a1e 	bne	r9,zero,1010c574 <__subdf3+0x124>
1010c4cc:	2988b03a 	or	r4,r5,r6
1010c4d0:	20009a1e 	bne	r4,zero,1010c73c <__subdf3+0x2ec>
1010c4d4:	888001cc 	andi	r2,r17,7
1010c4d8:	10000726 	beq	r2,zero,1010c4f8 <__subdf3+0xa8>
1010c4dc:	888003cc 	andi	r2,r17,15
1010c4e0:	01000104 	movi	r4,4
1010c4e4:	11000426 	beq	r2,r4,1010c4f8 <__subdf3+0xa8>
1010c4e8:	890b883a 	add	r5,r17,r4
1010c4ec:	2c63803a 	cmpltu	r17,r5,r17
1010c4f0:	1c47883a 	add	r3,r3,r17
1010c4f4:	2823883a 	mov	r17,r5
1010c4f8:	1880202c 	andhi	r2,r3,128
1010c4fc:	10005926 	beq	r2,zero,1010c664 <__subdf3+0x214>
1010c500:	84000044 	addi	r16,r16,1
1010c504:	0081ffc4 	movi	r2,2047
1010c508:	8080be26 	beq	r16,r2,1010c804 <__subdf3+0x3b4>
1010c50c:	017fe034 	movhi	r5,65408
1010c510:	297fffc4 	addi	r5,r5,-1
1010c514:	1946703a 	and	r3,r3,r5
1010c518:	1804977a 	slli	r2,r3,29
1010c51c:	1806927a 	slli	r3,r3,9
1010c520:	8822d0fa 	srli	r17,r17,3
1010c524:	8401ffcc 	andi	r16,r16,2047
1010c528:	180ad33a 	srli	r5,r3,12
1010c52c:	9100004c 	andi	r4,r18,1
1010c530:	1444b03a 	or	r2,r2,r17
1010c534:	80c1ffcc 	andi	r3,r16,2047
1010c538:	1820953a 	slli	r16,r3,20
1010c53c:	20c03fcc 	andi	r3,r4,255
1010c540:	180897fa 	slli	r4,r3,31
1010c544:	00c00434 	movhi	r3,16
1010c548:	18ffffc4 	addi	r3,r3,-1
1010c54c:	28c6703a 	and	r3,r5,r3
1010c550:	1c06b03a 	or	r3,r3,r16
1010c554:	1906b03a 	or	r3,r3,r4
1010c558:	dfc00417 	ldw	ra,16(sp)
1010c55c:	dcc00317 	ldw	r19,12(sp)
1010c560:	dc800217 	ldw	r18,8(sp)
1010c564:	dc400117 	ldw	r17,4(sp)
1010c568:	dc000017 	ldw	r16,0(sp)
1010c56c:	dec00504 	addi	sp,sp,20
1010c570:	f800283a 	ret
1010c574:	0101ffc4 	movi	r4,2047
1010c578:	813fd626 	beq	r16,r4,1010c4d4 <__alt_data_end+0xfffec4d4>
1010c57c:	29402034 	orhi	r5,r5,128
1010c580:	01000e04 	movi	r4,56
1010c584:	2080a316 	blt	r4,r2,1010c814 <__subdf3+0x3c4>
1010c588:	010007c4 	movi	r4,31
1010c58c:	2080c616 	blt	r4,r2,1010c8a8 <__subdf3+0x458>
1010c590:	01000804 	movi	r4,32
1010c594:	2089c83a 	sub	r4,r4,r2
1010c598:	2910983a 	sll	r8,r5,r4
1010c59c:	308ed83a 	srl	r7,r6,r2
1010c5a0:	3108983a 	sll	r4,r6,r4
1010c5a4:	2884d83a 	srl	r2,r5,r2
1010c5a8:	41ccb03a 	or	r6,r8,r7
1010c5ac:	2008c03a 	cmpne	r4,r4,zero
1010c5b0:	310cb03a 	or	r6,r6,r4
1010c5b4:	898dc83a 	sub	r6,r17,r6
1010c5b8:	89a3803a 	cmpltu	r17,r17,r6
1010c5bc:	1887c83a 	sub	r3,r3,r2
1010c5c0:	1c47c83a 	sub	r3,r3,r17
1010c5c4:	3023883a 	mov	r17,r6
1010c5c8:	1880202c 	andhi	r2,r3,128
1010c5cc:	10002326 	beq	r2,zero,1010c65c <__subdf3+0x20c>
1010c5d0:	04c02034 	movhi	r19,128
1010c5d4:	9cffffc4 	addi	r19,r19,-1
1010c5d8:	1ce6703a 	and	r19,r3,r19
1010c5dc:	98007a26 	beq	r19,zero,1010c7c8 <__subdf3+0x378>
1010c5e0:	9809883a 	mov	r4,r19
1010c5e4:	010cf500 	call	1010cf50 <__clzsi2>
1010c5e8:	113ffe04 	addi	r4,r2,-8
1010c5ec:	00c007c4 	movi	r3,31
1010c5f0:	19007b16 	blt	r3,r4,1010c7e0 <__subdf3+0x390>
1010c5f4:	00800804 	movi	r2,32
1010c5f8:	1105c83a 	sub	r2,r2,r4
1010c5fc:	8884d83a 	srl	r2,r17,r2
1010c600:	9906983a 	sll	r3,r19,r4
1010c604:	8922983a 	sll	r17,r17,r4
1010c608:	10c4b03a 	or	r2,r2,r3
1010c60c:	24007816 	blt	r4,r16,1010c7f0 <__subdf3+0x3a0>
1010c610:	2421c83a 	sub	r16,r4,r16
1010c614:	80c00044 	addi	r3,r16,1
1010c618:	010007c4 	movi	r4,31
1010c61c:	20c09516 	blt	r4,r3,1010c874 <__subdf3+0x424>
1010c620:	01400804 	movi	r5,32
1010c624:	28cbc83a 	sub	r5,r5,r3
1010c628:	88c8d83a 	srl	r4,r17,r3
1010c62c:	8962983a 	sll	r17,r17,r5
1010c630:	114a983a 	sll	r5,r2,r5
1010c634:	10c6d83a 	srl	r3,r2,r3
1010c638:	8804c03a 	cmpne	r2,r17,zero
1010c63c:	290ab03a 	or	r5,r5,r4
1010c640:	28a2b03a 	or	r17,r5,r2
1010c644:	0021883a 	mov	r16,zero
1010c648:	003fa206 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010c64c:	2090b03a 	or	r8,r4,r2
1010c650:	40018e26 	beq	r8,zero,1010cc8c <__subdf3+0x83c>
1010c654:	1007883a 	mov	r3,r2
1010c658:	2023883a 	mov	r17,r4
1010c65c:	888001cc 	andi	r2,r17,7
1010c660:	103f9e1e 	bne	r2,zero,1010c4dc <__alt_data_end+0xfffec4dc>
1010c664:	1804977a 	slli	r2,r3,29
1010c668:	8822d0fa 	srli	r17,r17,3
1010c66c:	1810d0fa 	srli	r8,r3,3
1010c670:	9100004c 	andi	r4,r18,1
1010c674:	1444b03a 	or	r2,r2,r17
1010c678:	00c1ffc4 	movi	r3,2047
1010c67c:	80c02826 	beq	r16,r3,1010c720 <__subdf3+0x2d0>
1010c680:	01400434 	movhi	r5,16
1010c684:	297fffc4 	addi	r5,r5,-1
1010c688:	80e0703a 	and	r16,r16,r3
1010c68c:	414a703a 	and	r5,r8,r5
1010c690:	003fa806 	br	1010c534 <__alt_data_end+0xfffec534>
1010c694:	0080630e 	bge	zero,r2,1010c824 <__subdf3+0x3d4>
1010c698:	48003026 	beq	r9,zero,1010c75c <__subdf3+0x30c>
1010c69c:	0101ffc4 	movi	r4,2047
1010c6a0:	813f8c26 	beq	r16,r4,1010c4d4 <__alt_data_end+0xfffec4d4>
1010c6a4:	29402034 	orhi	r5,r5,128
1010c6a8:	01000e04 	movi	r4,56
1010c6ac:	2080a90e 	bge	r4,r2,1010c954 <__subdf3+0x504>
1010c6b0:	298cb03a 	or	r6,r5,r6
1010c6b4:	3012c03a 	cmpne	r9,r6,zero
1010c6b8:	0005883a 	mov	r2,zero
1010c6bc:	4c53883a 	add	r9,r9,r17
1010c6c0:	4c63803a 	cmpltu	r17,r9,r17
1010c6c4:	10c7883a 	add	r3,r2,r3
1010c6c8:	88c7883a 	add	r3,r17,r3
1010c6cc:	4823883a 	mov	r17,r9
1010c6d0:	1880202c 	andhi	r2,r3,128
1010c6d4:	1000d026 	beq	r2,zero,1010ca18 <__subdf3+0x5c8>
1010c6d8:	84000044 	addi	r16,r16,1
1010c6dc:	0081ffc4 	movi	r2,2047
1010c6e0:	8080fe26 	beq	r16,r2,1010cadc <__subdf3+0x68c>
1010c6e4:	00bfe034 	movhi	r2,65408
1010c6e8:	10bfffc4 	addi	r2,r2,-1
1010c6ec:	1886703a 	and	r3,r3,r2
1010c6f0:	880ad07a 	srli	r5,r17,1
1010c6f4:	180497fa 	slli	r2,r3,31
1010c6f8:	8900004c 	andi	r4,r17,1
1010c6fc:	2922b03a 	or	r17,r5,r4
1010c700:	1806d07a 	srli	r3,r3,1
1010c704:	1462b03a 	or	r17,r2,r17
1010c708:	3825883a 	mov	r18,r7
1010c70c:	003f7106 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010c710:	2984b03a 	or	r2,r5,r6
1010c714:	103f6826 	beq	r2,zero,1010c4b8 <__alt_data_end+0xfffec4b8>
1010c718:	39c03fcc 	andi	r7,r7,255
1010c71c:	003f6706 	br	1010c4bc <__alt_data_end+0xfffec4bc>
1010c720:	4086b03a 	or	r3,r8,r2
1010c724:	18015226 	beq	r3,zero,1010cc70 <__subdf3+0x820>
1010c728:	00c00434 	movhi	r3,16
1010c72c:	41400234 	orhi	r5,r8,8
1010c730:	18ffffc4 	addi	r3,r3,-1
1010c734:	28ca703a 	and	r5,r5,r3
1010c738:	003f7e06 	br	1010c534 <__alt_data_end+0xfffec534>
1010c73c:	10bfffc4 	addi	r2,r2,-1
1010c740:	1000491e 	bne	r2,zero,1010c868 <__subdf3+0x418>
1010c744:	898fc83a 	sub	r7,r17,r6
1010c748:	89e3803a 	cmpltu	r17,r17,r7
1010c74c:	1947c83a 	sub	r3,r3,r5
1010c750:	1c47c83a 	sub	r3,r3,r17
1010c754:	3823883a 	mov	r17,r7
1010c758:	003f9b06 	br	1010c5c8 <__alt_data_end+0xfffec5c8>
1010c75c:	2988b03a 	or	r4,r5,r6
1010c760:	203f5c26 	beq	r4,zero,1010c4d4 <__alt_data_end+0xfffec4d4>
1010c764:	10bfffc4 	addi	r2,r2,-1
1010c768:	1000931e 	bne	r2,zero,1010c9b8 <__subdf3+0x568>
1010c76c:	898d883a 	add	r6,r17,r6
1010c770:	3463803a 	cmpltu	r17,r6,r17
1010c774:	1947883a 	add	r3,r3,r5
1010c778:	88c7883a 	add	r3,r17,r3
1010c77c:	3023883a 	mov	r17,r6
1010c780:	003fd306 	br	1010c6d0 <__alt_data_end+0xfffec6d0>
1010c784:	1000541e 	bne	r2,zero,1010c8d8 <__subdf3+0x488>
1010c788:	80800044 	addi	r2,r16,1
1010c78c:	1081ffcc 	andi	r2,r2,2047
1010c790:	01000044 	movi	r4,1
1010c794:	2080a20e 	bge	r4,r2,1010ca20 <__subdf3+0x5d0>
1010c798:	8989c83a 	sub	r4,r17,r6
1010c79c:	8905803a 	cmpltu	r2,r17,r4
1010c7a0:	1967c83a 	sub	r19,r3,r5
1010c7a4:	98a7c83a 	sub	r19,r19,r2
1010c7a8:	9880202c 	andhi	r2,r19,128
1010c7ac:	10006326 	beq	r2,zero,1010c93c <__subdf3+0x4ec>
1010c7b0:	3463c83a 	sub	r17,r6,r17
1010c7b4:	28c7c83a 	sub	r3,r5,r3
1010c7b8:	344d803a 	cmpltu	r6,r6,r17
1010c7bc:	19a7c83a 	sub	r19,r3,r6
1010c7c0:	3825883a 	mov	r18,r7
1010c7c4:	983f861e 	bne	r19,zero,1010c5e0 <__alt_data_end+0xfffec5e0>
1010c7c8:	8809883a 	mov	r4,r17
1010c7cc:	010cf500 	call	1010cf50 <__clzsi2>
1010c7d0:	10800804 	addi	r2,r2,32
1010c7d4:	113ffe04 	addi	r4,r2,-8
1010c7d8:	00c007c4 	movi	r3,31
1010c7dc:	193f850e 	bge	r3,r4,1010c5f4 <__alt_data_end+0xfffec5f4>
1010c7e0:	10bff604 	addi	r2,r2,-40
1010c7e4:	8884983a 	sll	r2,r17,r2
1010c7e8:	0023883a 	mov	r17,zero
1010c7ec:	243f880e 	bge	r4,r16,1010c610 <__alt_data_end+0xfffec610>
1010c7f0:	00ffe034 	movhi	r3,65408
1010c7f4:	18ffffc4 	addi	r3,r3,-1
1010c7f8:	8121c83a 	sub	r16,r16,r4
1010c7fc:	10c6703a 	and	r3,r2,r3
1010c800:	003f3406 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010c804:	9100004c 	andi	r4,r18,1
1010c808:	000b883a 	mov	r5,zero
1010c80c:	0005883a 	mov	r2,zero
1010c810:	003f4806 	br	1010c534 <__alt_data_end+0xfffec534>
1010c814:	298cb03a 	or	r6,r5,r6
1010c818:	300cc03a 	cmpne	r6,r6,zero
1010c81c:	0005883a 	mov	r2,zero
1010c820:	003f6406 	br	1010c5b4 <__alt_data_end+0xfffec5b4>
1010c824:	10009a1e 	bne	r2,zero,1010ca90 <__subdf3+0x640>
1010c828:	82400044 	addi	r9,r16,1
1010c82c:	4881ffcc 	andi	r2,r9,2047
1010c830:	02800044 	movi	r10,1
1010c834:	5080670e 	bge	r10,r2,1010c9d4 <__subdf3+0x584>
1010c838:	0081ffc4 	movi	r2,2047
1010c83c:	4880af26 	beq	r9,r2,1010cafc <__subdf3+0x6ac>
1010c840:	898d883a 	add	r6,r17,r6
1010c844:	1945883a 	add	r2,r3,r5
1010c848:	3447803a 	cmpltu	r3,r6,r17
1010c84c:	1887883a 	add	r3,r3,r2
1010c850:	182297fa 	slli	r17,r3,31
1010c854:	300cd07a 	srli	r6,r6,1
1010c858:	1806d07a 	srli	r3,r3,1
1010c85c:	4821883a 	mov	r16,r9
1010c860:	89a2b03a 	or	r17,r17,r6
1010c864:	003f1b06 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010c868:	0101ffc4 	movi	r4,2047
1010c86c:	813f441e 	bne	r16,r4,1010c580 <__alt_data_end+0xfffec580>
1010c870:	003f1806 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010c874:	843ff844 	addi	r16,r16,-31
1010c878:	01400804 	movi	r5,32
1010c87c:	1408d83a 	srl	r4,r2,r16
1010c880:	19405026 	beq	r3,r5,1010c9c4 <__subdf3+0x574>
1010c884:	01401004 	movi	r5,64
1010c888:	28c7c83a 	sub	r3,r5,r3
1010c88c:	10c4983a 	sll	r2,r2,r3
1010c890:	88a2b03a 	or	r17,r17,r2
1010c894:	8822c03a 	cmpne	r17,r17,zero
1010c898:	2462b03a 	or	r17,r4,r17
1010c89c:	0007883a 	mov	r3,zero
1010c8a0:	0021883a 	mov	r16,zero
1010c8a4:	003f6d06 	br	1010c65c <__alt_data_end+0xfffec65c>
1010c8a8:	11fff804 	addi	r7,r2,-32
1010c8ac:	01000804 	movi	r4,32
1010c8b0:	29ced83a 	srl	r7,r5,r7
1010c8b4:	11004526 	beq	r2,r4,1010c9cc <__subdf3+0x57c>
1010c8b8:	01001004 	movi	r4,64
1010c8bc:	2089c83a 	sub	r4,r4,r2
1010c8c0:	2904983a 	sll	r2,r5,r4
1010c8c4:	118cb03a 	or	r6,r2,r6
1010c8c8:	300cc03a 	cmpne	r6,r6,zero
1010c8cc:	398cb03a 	or	r6,r7,r6
1010c8d0:	0005883a 	mov	r2,zero
1010c8d4:	003f3706 	br	1010c5b4 <__alt_data_end+0xfffec5b4>
1010c8d8:	80002a26 	beq	r16,zero,1010c984 <__subdf3+0x534>
1010c8dc:	0101ffc4 	movi	r4,2047
1010c8e0:	49006626 	beq	r9,r4,1010ca7c <__subdf3+0x62c>
1010c8e4:	0085c83a 	sub	r2,zero,r2
1010c8e8:	18c02034 	orhi	r3,r3,128
1010c8ec:	01000e04 	movi	r4,56
1010c8f0:	20807e16 	blt	r4,r2,1010caec <__subdf3+0x69c>
1010c8f4:	010007c4 	movi	r4,31
1010c8f8:	2080e716 	blt	r4,r2,1010cc98 <__subdf3+0x848>
1010c8fc:	01000804 	movi	r4,32
1010c900:	2089c83a 	sub	r4,r4,r2
1010c904:	1914983a 	sll	r10,r3,r4
1010c908:	8890d83a 	srl	r8,r17,r2
1010c90c:	8908983a 	sll	r4,r17,r4
1010c910:	1884d83a 	srl	r2,r3,r2
1010c914:	5222b03a 	or	r17,r10,r8
1010c918:	2006c03a 	cmpne	r3,r4,zero
1010c91c:	88e2b03a 	or	r17,r17,r3
1010c920:	3463c83a 	sub	r17,r6,r17
1010c924:	2885c83a 	sub	r2,r5,r2
1010c928:	344d803a 	cmpltu	r6,r6,r17
1010c92c:	1187c83a 	sub	r3,r2,r6
1010c930:	4821883a 	mov	r16,r9
1010c934:	3825883a 	mov	r18,r7
1010c938:	003f2306 	br	1010c5c8 <__alt_data_end+0xfffec5c8>
1010c93c:	24d0b03a 	or	r8,r4,r19
1010c940:	40001b1e 	bne	r8,zero,1010c9b0 <__subdf3+0x560>
1010c944:	0005883a 	mov	r2,zero
1010c948:	0009883a 	mov	r4,zero
1010c94c:	0021883a 	mov	r16,zero
1010c950:	003f4906 	br	1010c678 <__alt_data_end+0xfffec678>
1010c954:	010007c4 	movi	r4,31
1010c958:	20803a16 	blt	r4,r2,1010ca44 <__subdf3+0x5f4>
1010c95c:	01000804 	movi	r4,32
1010c960:	2089c83a 	sub	r4,r4,r2
1010c964:	2912983a 	sll	r9,r5,r4
1010c968:	3090d83a 	srl	r8,r6,r2
1010c96c:	3108983a 	sll	r4,r6,r4
1010c970:	2884d83a 	srl	r2,r5,r2
1010c974:	4a12b03a 	or	r9,r9,r8
1010c978:	2008c03a 	cmpne	r4,r4,zero
1010c97c:	4912b03a 	or	r9,r9,r4
1010c980:	003f4e06 	br	1010c6bc <__alt_data_end+0xfffec6bc>
1010c984:	1c48b03a 	or	r4,r3,r17
1010c988:	20003c26 	beq	r4,zero,1010ca7c <__subdf3+0x62c>
1010c98c:	0084303a 	nor	r2,zero,r2
1010c990:	1000381e 	bne	r2,zero,1010ca74 <__subdf3+0x624>
1010c994:	3463c83a 	sub	r17,r6,r17
1010c998:	28c5c83a 	sub	r2,r5,r3
1010c99c:	344d803a 	cmpltu	r6,r6,r17
1010c9a0:	1187c83a 	sub	r3,r2,r6
1010c9a4:	4821883a 	mov	r16,r9
1010c9a8:	3825883a 	mov	r18,r7
1010c9ac:	003f0606 	br	1010c5c8 <__alt_data_end+0xfffec5c8>
1010c9b0:	2023883a 	mov	r17,r4
1010c9b4:	003f0906 	br	1010c5dc <__alt_data_end+0xfffec5dc>
1010c9b8:	0101ffc4 	movi	r4,2047
1010c9bc:	813f3a1e 	bne	r16,r4,1010c6a8 <__alt_data_end+0xfffec6a8>
1010c9c0:	003ec406 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010c9c4:	0005883a 	mov	r2,zero
1010c9c8:	003fb106 	br	1010c890 <__alt_data_end+0xfffec890>
1010c9cc:	0005883a 	mov	r2,zero
1010c9d0:	003fbc06 	br	1010c8c4 <__alt_data_end+0xfffec8c4>
1010c9d4:	1c44b03a 	or	r2,r3,r17
1010c9d8:	80008e1e 	bne	r16,zero,1010cc14 <__subdf3+0x7c4>
1010c9dc:	1000c826 	beq	r2,zero,1010cd00 <__subdf3+0x8b0>
1010c9e0:	2984b03a 	or	r2,r5,r6
1010c9e4:	103ebb26 	beq	r2,zero,1010c4d4 <__alt_data_end+0xfffec4d4>
1010c9e8:	8989883a 	add	r4,r17,r6
1010c9ec:	1945883a 	add	r2,r3,r5
1010c9f0:	2447803a 	cmpltu	r3,r4,r17
1010c9f4:	1887883a 	add	r3,r3,r2
1010c9f8:	1880202c 	andhi	r2,r3,128
1010c9fc:	2023883a 	mov	r17,r4
1010ca00:	103f1626 	beq	r2,zero,1010c65c <__alt_data_end+0xfffec65c>
1010ca04:	00bfe034 	movhi	r2,65408
1010ca08:	10bfffc4 	addi	r2,r2,-1
1010ca0c:	5021883a 	mov	r16,r10
1010ca10:	1886703a 	and	r3,r3,r2
1010ca14:	003eaf06 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010ca18:	3825883a 	mov	r18,r7
1010ca1c:	003f0f06 	br	1010c65c <__alt_data_end+0xfffec65c>
1010ca20:	1c44b03a 	or	r2,r3,r17
1010ca24:	8000251e 	bne	r16,zero,1010cabc <__subdf3+0x66c>
1010ca28:	1000661e 	bne	r2,zero,1010cbc4 <__subdf3+0x774>
1010ca2c:	2990b03a 	or	r8,r5,r6
1010ca30:	40009626 	beq	r8,zero,1010cc8c <__subdf3+0x83c>
1010ca34:	2807883a 	mov	r3,r5
1010ca38:	3023883a 	mov	r17,r6
1010ca3c:	3825883a 	mov	r18,r7
1010ca40:	003ea406 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010ca44:	127ff804 	addi	r9,r2,-32
1010ca48:	01000804 	movi	r4,32
1010ca4c:	2a52d83a 	srl	r9,r5,r9
1010ca50:	11008c26 	beq	r2,r4,1010cc84 <__subdf3+0x834>
1010ca54:	01001004 	movi	r4,64
1010ca58:	2085c83a 	sub	r2,r4,r2
1010ca5c:	2884983a 	sll	r2,r5,r2
1010ca60:	118cb03a 	or	r6,r2,r6
1010ca64:	300cc03a 	cmpne	r6,r6,zero
1010ca68:	4992b03a 	or	r9,r9,r6
1010ca6c:	0005883a 	mov	r2,zero
1010ca70:	003f1206 	br	1010c6bc <__alt_data_end+0xfffec6bc>
1010ca74:	0101ffc4 	movi	r4,2047
1010ca78:	493f9c1e 	bne	r9,r4,1010c8ec <__alt_data_end+0xfffec8ec>
1010ca7c:	2807883a 	mov	r3,r5
1010ca80:	3023883a 	mov	r17,r6
1010ca84:	4821883a 	mov	r16,r9
1010ca88:	3825883a 	mov	r18,r7
1010ca8c:	003e9106 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010ca90:	80001f1e 	bne	r16,zero,1010cb10 <__subdf3+0x6c0>
1010ca94:	1c48b03a 	or	r4,r3,r17
1010ca98:	20005a26 	beq	r4,zero,1010cc04 <__subdf3+0x7b4>
1010ca9c:	0084303a 	nor	r2,zero,r2
1010caa0:	1000561e 	bne	r2,zero,1010cbfc <__subdf3+0x7ac>
1010caa4:	89a3883a 	add	r17,r17,r6
1010caa8:	1945883a 	add	r2,r3,r5
1010caac:	898d803a 	cmpltu	r6,r17,r6
1010cab0:	3087883a 	add	r3,r6,r2
1010cab4:	4821883a 	mov	r16,r9
1010cab8:	003f0506 	br	1010c6d0 <__alt_data_end+0xfffec6d0>
1010cabc:	10002b1e 	bne	r2,zero,1010cb6c <__subdf3+0x71c>
1010cac0:	2984b03a 	or	r2,r5,r6
1010cac4:	10008026 	beq	r2,zero,1010ccc8 <__subdf3+0x878>
1010cac8:	2807883a 	mov	r3,r5
1010cacc:	3023883a 	mov	r17,r6
1010cad0:	3825883a 	mov	r18,r7
1010cad4:	0401ffc4 	movi	r16,2047
1010cad8:	003e7e06 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010cadc:	3809883a 	mov	r4,r7
1010cae0:	0011883a 	mov	r8,zero
1010cae4:	0005883a 	mov	r2,zero
1010cae8:	003ee306 	br	1010c678 <__alt_data_end+0xfffec678>
1010caec:	1c62b03a 	or	r17,r3,r17
1010caf0:	8822c03a 	cmpne	r17,r17,zero
1010caf4:	0005883a 	mov	r2,zero
1010caf8:	003f8906 	br	1010c920 <__alt_data_end+0xfffec920>
1010cafc:	3809883a 	mov	r4,r7
1010cb00:	4821883a 	mov	r16,r9
1010cb04:	0011883a 	mov	r8,zero
1010cb08:	0005883a 	mov	r2,zero
1010cb0c:	003eda06 	br	1010c678 <__alt_data_end+0xfffec678>
1010cb10:	0101ffc4 	movi	r4,2047
1010cb14:	49003b26 	beq	r9,r4,1010cc04 <__subdf3+0x7b4>
1010cb18:	0085c83a 	sub	r2,zero,r2
1010cb1c:	18c02034 	orhi	r3,r3,128
1010cb20:	01000e04 	movi	r4,56
1010cb24:	20806e16 	blt	r4,r2,1010cce0 <__subdf3+0x890>
1010cb28:	010007c4 	movi	r4,31
1010cb2c:	20807716 	blt	r4,r2,1010cd0c <__subdf3+0x8bc>
1010cb30:	01000804 	movi	r4,32
1010cb34:	2089c83a 	sub	r4,r4,r2
1010cb38:	1914983a 	sll	r10,r3,r4
1010cb3c:	8890d83a 	srl	r8,r17,r2
1010cb40:	8908983a 	sll	r4,r17,r4
1010cb44:	1884d83a 	srl	r2,r3,r2
1010cb48:	5222b03a 	or	r17,r10,r8
1010cb4c:	2006c03a 	cmpne	r3,r4,zero
1010cb50:	88e2b03a 	or	r17,r17,r3
1010cb54:	89a3883a 	add	r17,r17,r6
1010cb58:	1145883a 	add	r2,r2,r5
1010cb5c:	898d803a 	cmpltu	r6,r17,r6
1010cb60:	3087883a 	add	r3,r6,r2
1010cb64:	4821883a 	mov	r16,r9
1010cb68:	003ed906 	br	1010c6d0 <__alt_data_end+0xfffec6d0>
1010cb6c:	2984b03a 	or	r2,r5,r6
1010cb70:	10004226 	beq	r2,zero,1010cc7c <__subdf3+0x82c>
1010cb74:	1808d0fa 	srli	r4,r3,3
1010cb78:	8822d0fa 	srli	r17,r17,3
1010cb7c:	1806977a 	slli	r3,r3,29
1010cb80:	2080022c 	andhi	r2,r4,8
1010cb84:	1c62b03a 	or	r17,r3,r17
1010cb88:	10000826 	beq	r2,zero,1010cbac <__subdf3+0x75c>
1010cb8c:	2812d0fa 	srli	r9,r5,3
1010cb90:	4880022c 	andhi	r2,r9,8
1010cb94:	1000051e 	bne	r2,zero,1010cbac <__subdf3+0x75c>
1010cb98:	300cd0fa 	srli	r6,r6,3
1010cb9c:	2804977a 	slli	r2,r5,29
1010cba0:	4809883a 	mov	r4,r9
1010cba4:	3825883a 	mov	r18,r7
1010cba8:	11a2b03a 	or	r17,r2,r6
1010cbac:	8806d77a 	srli	r3,r17,29
1010cbb0:	200890fa 	slli	r4,r4,3
1010cbb4:	882290fa 	slli	r17,r17,3
1010cbb8:	0401ffc4 	movi	r16,2047
1010cbbc:	1906b03a 	or	r3,r3,r4
1010cbc0:	003e4406 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010cbc4:	2984b03a 	or	r2,r5,r6
1010cbc8:	103e4226 	beq	r2,zero,1010c4d4 <__alt_data_end+0xfffec4d4>
1010cbcc:	8989c83a 	sub	r4,r17,r6
1010cbd0:	8911803a 	cmpltu	r8,r17,r4
1010cbd4:	1945c83a 	sub	r2,r3,r5
1010cbd8:	1205c83a 	sub	r2,r2,r8
1010cbdc:	1200202c 	andhi	r8,r2,128
1010cbe0:	403e9a26 	beq	r8,zero,1010c64c <__alt_data_end+0xfffec64c>
1010cbe4:	3463c83a 	sub	r17,r6,r17
1010cbe8:	28c5c83a 	sub	r2,r5,r3
1010cbec:	344d803a 	cmpltu	r6,r6,r17
1010cbf0:	1187c83a 	sub	r3,r2,r6
1010cbf4:	3825883a 	mov	r18,r7
1010cbf8:	003e3606 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010cbfc:	0101ffc4 	movi	r4,2047
1010cc00:	493fc71e 	bne	r9,r4,1010cb20 <__alt_data_end+0xfffecb20>
1010cc04:	2807883a 	mov	r3,r5
1010cc08:	3023883a 	mov	r17,r6
1010cc0c:	4821883a 	mov	r16,r9
1010cc10:	003e3006 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010cc14:	10003626 	beq	r2,zero,1010ccf0 <__subdf3+0x8a0>
1010cc18:	2984b03a 	or	r2,r5,r6
1010cc1c:	10001726 	beq	r2,zero,1010cc7c <__subdf3+0x82c>
1010cc20:	1808d0fa 	srli	r4,r3,3
1010cc24:	8822d0fa 	srli	r17,r17,3
1010cc28:	1806977a 	slli	r3,r3,29
1010cc2c:	2080022c 	andhi	r2,r4,8
1010cc30:	1c62b03a 	or	r17,r3,r17
1010cc34:	10000726 	beq	r2,zero,1010cc54 <__subdf3+0x804>
1010cc38:	2812d0fa 	srli	r9,r5,3
1010cc3c:	4880022c 	andhi	r2,r9,8
1010cc40:	1000041e 	bne	r2,zero,1010cc54 <__subdf3+0x804>
1010cc44:	300cd0fa 	srli	r6,r6,3
1010cc48:	2804977a 	slli	r2,r5,29
1010cc4c:	4809883a 	mov	r4,r9
1010cc50:	11a2b03a 	or	r17,r2,r6
1010cc54:	8806d77a 	srli	r3,r17,29
1010cc58:	200890fa 	slli	r4,r4,3
1010cc5c:	882290fa 	slli	r17,r17,3
1010cc60:	3825883a 	mov	r18,r7
1010cc64:	1906b03a 	or	r3,r3,r4
1010cc68:	0401ffc4 	movi	r16,2047
1010cc6c:	003e1906 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010cc70:	000b883a 	mov	r5,zero
1010cc74:	0005883a 	mov	r2,zero
1010cc78:	003e2e06 	br	1010c534 <__alt_data_end+0xfffec534>
1010cc7c:	0401ffc4 	movi	r16,2047
1010cc80:	003e1406 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010cc84:	0005883a 	mov	r2,zero
1010cc88:	003f7506 	br	1010ca60 <__alt_data_end+0xfffeca60>
1010cc8c:	0005883a 	mov	r2,zero
1010cc90:	0009883a 	mov	r4,zero
1010cc94:	003e7806 	br	1010c678 <__alt_data_end+0xfffec678>
1010cc98:	123ff804 	addi	r8,r2,-32
1010cc9c:	01000804 	movi	r4,32
1010cca0:	1a10d83a 	srl	r8,r3,r8
1010cca4:	11002526 	beq	r2,r4,1010cd3c <__subdf3+0x8ec>
1010cca8:	01001004 	movi	r4,64
1010ccac:	2085c83a 	sub	r2,r4,r2
1010ccb0:	1884983a 	sll	r2,r3,r2
1010ccb4:	1444b03a 	or	r2,r2,r17
1010ccb8:	1004c03a 	cmpne	r2,r2,zero
1010ccbc:	40a2b03a 	or	r17,r8,r2
1010ccc0:	0005883a 	mov	r2,zero
1010ccc4:	003f1606 	br	1010c920 <__alt_data_end+0xfffec920>
1010ccc8:	02000434 	movhi	r8,16
1010cccc:	0009883a 	mov	r4,zero
1010ccd0:	423fffc4 	addi	r8,r8,-1
1010ccd4:	00bfffc4 	movi	r2,-1
1010ccd8:	0401ffc4 	movi	r16,2047
1010ccdc:	003e6606 	br	1010c678 <__alt_data_end+0xfffec678>
1010cce0:	1c62b03a 	or	r17,r3,r17
1010cce4:	8822c03a 	cmpne	r17,r17,zero
1010cce8:	0005883a 	mov	r2,zero
1010ccec:	003f9906 	br	1010cb54 <__alt_data_end+0xfffecb54>
1010ccf0:	2807883a 	mov	r3,r5
1010ccf4:	3023883a 	mov	r17,r6
1010ccf8:	0401ffc4 	movi	r16,2047
1010ccfc:	003df506 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010cd00:	2807883a 	mov	r3,r5
1010cd04:	3023883a 	mov	r17,r6
1010cd08:	003df206 	br	1010c4d4 <__alt_data_end+0xfffec4d4>
1010cd0c:	123ff804 	addi	r8,r2,-32
1010cd10:	01000804 	movi	r4,32
1010cd14:	1a10d83a 	srl	r8,r3,r8
1010cd18:	11000a26 	beq	r2,r4,1010cd44 <__subdf3+0x8f4>
1010cd1c:	01001004 	movi	r4,64
1010cd20:	2085c83a 	sub	r2,r4,r2
1010cd24:	1884983a 	sll	r2,r3,r2
1010cd28:	1444b03a 	or	r2,r2,r17
1010cd2c:	1004c03a 	cmpne	r2,r2,zero
1010cd30:	40a2b03a 	or	r17,r8,r2
1010cd34:	0005883a 	mov	r2,zero
1010cd38:	003f8606 	br	1010cb54 <__alt_data_end+0xfffecb54>
1010cd3c:	0005883a 	mov	r2,zero
1010cd40:	003fdc06 	br	1010ccb4 <__alt_data_end+0xfffeccb4>
1010cd44:	0005883a 	mov	r2,zero
1010cd48:	003ff706 	br	1010cd28 <__alt_data_end+0xfffecd28>

1010cd4c <__fixdfsi>:
1010cd4c:	280cd53a 	srli	r6,r5,20
1010cd50:	00c00434 	movhi	r3,16
1010cd54:	18ffffc4 	addi	r3,r3,-1
1010cd58:	3181ffcc 	andi	r6,r6,2047
1010cd5c:	01c0ff84 	movi	r7,1022
1010cd60:	28c6703a 	and	r3,r5,r3
1010cd64:	280ad7fa 	srli	r5,r5,31
1010cd68:	3980120e 	bge	r7,r6,1010cdb4 <__fixdfsi+0x68>
1010cd6c:	00810744 	movi	r2,1053
1010cd70:	11800c16 	blt	r2,r6,1010cda4 <__fixdfsi+0x58>
1010cd74:	00810cc4 	movi	r2,1075
1010cd78:	1185c83a 	sub	r2,r2,r6
1010cd7c:	01c007c4 	movi	r7,31
1010cd80:	18c00434 	orhi	r3,r3,16
1010cd84:	38800d16 	blt	r7,r2,1010cdbc <__fixdfsi+0x70>
1010cd88:	31befb44 	addi	r6,r6,-1043
1010cd8c:	2084d83a 	srl	r2,r4,r2
1010cd90:	1986983a 	sll	r3,r3,r6
1010cd94:	1884b03a 	or	r2,r3,r2
1010cd98:	28000726 	beq	r5,zero,1010cdb8 <__fixdfsi+0x6c>
1010cd9c:	0085c83a 	sub	r2,zero,r2
1010cda0:	f800283a 	ret
1010cda4:	00a00034 	movhi	r2,32768
1010cda8:	10bfffc4 	addi	r2,r2,-1
1010cdac:	2885883a 	add	r2,r5,r2
1010cdb0:	f800283a 	ret
1010cdb4:	0005883a 	mov	r2,zero
1010cdb8:	f800283a 	ret
1010cdbc:	008104c4 	movi	r2,1043
1010cdc0:	1185c83a 	sub	r2,r2,r6
1010cdc4:	1884d83a 	srl	r2,r3,r2
1010cdc8:	003ff306 	br	1010cd98 <__alt_data_end+0xfffecd98>

1010cdcc <__floatsidf>:
1010cdcc:	defffd04 	addi	sp,sp,-12
1010cdd0:	dfc00215 	stw	ra,8(sp)
1010cdd4:	dc400115 	stw	r17,4(sp)
1010cdd8:	dc000015 	stw	r16,0(sp)
1010cddc:	20002b26 	beq	r4,zero,1010ce8c <__floatsidf+0xc0>
1010cde0:	2023883a 	mov	r17,r4
1010cde4:	2020d7fa 	srli	r16,r4,31
1010cde8:	20002d16 	blt	r4,zero,1010cea0 <__floatsidf+0xd4>
1010cdec:	8809883a 	mov	r4,r17
1010cdf0:	010cf500 	call	1010cf50 <__clzsi2>
1010cdf4:	01410784 	movi	r5,1054
1010cdf8:	288bc83a 	sub	r5,r5,r2
1010cdfc:	01010cc4 	movi	r4,1075
1010ce00:	2149c83a 	sub	r4,r4,r5
1010ce04:	00c007c4 	movi	r3,31
1010ce08:	1900160e 	bge	r3,r4,1010ce64 <__floatsidf+0x98>
1010ce0c:	00c104c4 	movi	r3,1043
1010ce10:	1947c83a 	sub	r3,r3,r5
1010ce14:	88c6983a 	sll	r3,r17,r3
1010ce18:	00800434 	movhi	r2,16
1010ce1c:	10bfffc4 	addi	r2,r2,-1
1010ce20:	1886703a 	and	r3,r3,r2
1010ce24:	2941ffcc 	andi	r5,r5,2047
1010ce28:	800d883a 	mov	r6,r16
1010ce2c:	0005883a 	mov	r2,zero
1010ce30:	280a953a 	slli	r5,r5,20
1010ce34:	31803fcc 	andi	r6,r6,255
1010ce38:	01000434 	movhi	r4,16
1010ce3c:	300c97fa 	slli	r6,r6,31
1010ce40:	213fffc4 	addi	r4,r4,-1
1010ce44:	1906703a 	and	r3,r3,r4
1010ce48:	1946b03a 	or	r3,r3,r5
1010ce4c:	1986b03a 	or	r3,r3,r6
1010ce50:	dfc00217 	ldw	ra,8(sp)
1010ce54:	dc400117 	ldw	r17,4(sp)
1010ce58:	dc000017 	ldw	r16,0(sp)
1010ce5c:	dec00304 	addi	sp,sp,12
1010ce60:	f800283a 	ret
1010ce64:	00c002c4 	movi	r3,11
1010ce68:	1887c83a 	sub	r3,r3,r2
1010ce6c:	88c6d83a 	srl	r3,r17,r3
1010ce70:	8904983a 	sll	r2,r17,r4
1010ce74:	01000434 	movhi	r4,16
1010ce78:	213fffc4 	addi	r4,r4,-1
1010ce7c:	2941ffcc 	andi	r5,r5,2047
1010ce80:	1906703a 	and	r3,r3,r4
1010ce84:	800d883a 	mov	r6,r16
1010ce88:	003fe906 	br	1010ce30 <__alt_data_end+0xfffece30>
1010ce8c:	000d883a 	mov	r6,zero
1010ce90:	000b883a 	mov	r5,zero
1010ce94:	0007883a 	mov	r3,zero
1010ce98:	0005883a 	mov	r2,zero
1010ce9c:	003fe406 	br	1010ce30 <__alt_data_end+0xfffece30>
1010cea0:	0123c83a 	sub	r17,zero,r4
1010cea4:	003fd106 	br	1010cdec <__alt_data_end+0xfffecdec>

1010cea8 <__floatunsidf>:
1010cea8:	defffe04 	addi	sp,sp,-8
1010ceac:	dc000015 	stw	r16,0(sp)
1010ceb0:	dfc00115 	stw	ra,4(sp)
1010ceb4:	2021883a 	mov	r16,r4
1010ceb8:	20002226 	beq	r4,zero,1010cf44 <__floatunsidf+0x9c>
1010cebc:	010cf500 	call	1010cf50 <__clzsi2>
1010cec0:	01010784 	movi	r4,1054
1010cec4:	2089c83a 	sub	r4,r4,r2
1010cec8:	01810cc4 	movi	r6,1075
1010cecc:	310dc83a 	sub	r6,r6,r4
1010ced0:	00c007c4 	movi	r3,31
1010ced4:	1980120e 	bge	r3,r6,1010cf20 <__floatunsidf+0x78>
1010ced8:	00c104c4 	movi	r3,1043
1010cedc:	1907c83a 	sub	r3,r3,r4
1010cee0:	80ca983a 	sll	r5,r16,r3
1010cee4:	00800434 	movhi	r2,16
1010cee8:	10bfffc4 	addi	r2,r2,-1
1010ceec:	2101ffcc 	andi	r4,r4,2047
1010cef0:	0021883a 	mov	r16,zero
1010cef4:	288a703a 	and	r5,r5,r2
1010cef8:	2008953a 	slli	r4,r4,20
1010cefc:	00c00434 	movhi	r3,16
1010cf00:	18ffffc4 	addi	r3,r3,-1
1010cf04:	28c6703a 	and	r3,r5,r3
1010cf08:	8005883a 	mov	r2,r16
1010cf0c:	1906b03a 	or	r3,r3,r4
1010cf10:	dfc00117 	ldw	ra,4(sp)
1010cf14:	dc000017 	ldw	r16,0(sp)
1010cf18:	dec00204 	addi	sp,sp,8
1010cf1c:	f800283a 	ret
1010cf20:	00c002c4 	movi	r3,11
1010cf24:	188bc83a 	sub	r5,r3,r2
1010cf28:	814ad83a 	srl	r5,r16,r5
1010cf2c:	00c00434 	movhi	r3,16
1010cf30:	18ffffc4 	addi	r3,r3,-1
1010cf34:	81a0983a 	sll	r16,r16,r6
1010cf38:	2101ffcc 	andi	r4,r4,2047
1010cf3c:	28ca703a 	and	r5,r5,r3
1010cf40:	003fed06 	br	1010cef8 <__alt_data_end+0xfffecef8>
1010cf44:	0009883a 	mov	r4,zero
1010cf48:	000b883a 	mov	r5,zero
1010cf4c:	003fea06 	br	1010cef8 <__alt_data_end+0xfffecef8>

1010cf50 <__clzsi2>:
1010cf50:	00bfffd4 	movui	r2,65535
1010cf54:	11000536 	bltu	r2,r4,1010cf6c <__clzsi2+0x1c>
1010cf58:	00803fc4 	movi	r2,255
1010cf5c:	11000f36 	bltu	r2,r4,1010cf9c <__clzsi2+0x4c>
1010cf60:	00800804 	movi	r2,32
1010cf64:	0007883a 	mov	r3,zero
1010cf68:	00000506 	br	1010cf80 <__clzsi2+0x30>
1010cf6c:	00804034 	movhi	r2,256
1010cf70:	10bfffc4 	addi	r2,r2,-1
1010cf74:	11000c2e 	bgeu	r2,r4,1010cfa8 <__clzsi2+0x58>
1010cf78:	00800204 	movi	r2,8
1010cf7c:	00c00604 	movi	r3,24
1010cf80:	20c8d83a 	srl	r4,r4,r3
1010cf84:	00c40474 	movhi	r3,4113
1010cf88:	18fe8d04 	addi	r3,r3,-1484
1010cf8c:	1909883a 	add	r4,r3,r4
1010cf90:	20c00003 	ldbu	r3,0(r4)
1010cf94:	10c5c83a 	sub	r2,r2,r3
1010cf98:	f800283a 	ret
1010cf9c:	00800604 	movi	r2,24
1010cfa0:	00c00204 	movi	r3,8
1010cfa4:	003ff606 	br	1010cf80 <__alt_data_end+0xfffecf80>
1010cfa8:	00800404 	movi	r2,16
1010cfac:	1007883a 	mov	r3,r2
1010cfb0:	003ff306 	br	1010cf80 <__alt_data_end+0xfffecf80>

1010cfb4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010cfb4:	defffe04 	addi	sp,sp,-8
1010cfb8:	dfc00115 	stw	ra,4(sp)
1010cfbc:	df000015 	stw	fp,0(sp)
1010cfc0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010cfc4:	d0a00d17 	ldw	r2,-32716(gp)
1010cfc8:	10000326 	beq	r2,zero,1010cfd8 <alt_get_errno+0x24>
1010cfcc:	d0a00d17 	ldw	r2,-32716(gp)
1010cfd0:	103ee83a 	callr	r2
1010cfd4:	00000106 	br	1010cfdc <alt_get_errno+0x28>
1010cfd8:	d0a6d504 	addi	r2,gp,-25772
}
1010cfdc:	e037883a 	mov	sp,fp
1010cfe0:	dfc00117 	ldw	ra,4(sp)
1010cfe4:	df000017 	ldw	fp,0(sp)
1010cfe8:	dec00204 	addi	sp,sp,8
1010cfec:	f800283a 	ret

1010cff0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1010cff0:	defffb04 	addi	sp,sp,-20
1010cff4:	dfc00415 	stw	ra,16(sp)
1010cff8:	df000315 	stw	fp,12(sp)
1010cffc:	df000304 	addi	fp,sp,12
1010d000:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1010d004:	e0bfff17 	ldw	r2,-4(fp)
1010d008:	10000616 	blt	r2,zero,1010d024 <close+0x34>
1010d00c:	e0bfff17 	ldw	r2,-4(fp)
1010d010:	10c00324 	muli	r3,r2,12
1010d014:	00840474 	movhi	r2,4113
1010d018:	10810d04 	addi	r2,r2,1076
1010d01c:	1885883a 	add	r2,r3,r2
1010d020:	00000106 	br	1010d028 <close+0x38>
1010d024:	0005883a 	mov	r2,zero
1010d028:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1010d02c:	e0bffd17 	ldw	r2,-12(fp)
1010d030:	10001926 	beq	r2,zero,1010d098 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1010d034:	e0bffd17 	ldw	r2,-12(fp)
1010d038:	10800017 	ldw	r2,0(r2)
1010d03c:	10800417 	ldw	r2,16(r2)
1010d040:	10000626 	beq	r2,zero,1010d05c <close+0x6c>
1010d044:	e0bffd17 	ldw	r2,-12(fp)
1010d048:	10800017 	ldw	r2,0(r2)
1010d04c:	10800417 	ldw	r2,16(r2)
1010d050:	e13ffd17 	ldw	r4,-12(fp)
1010d054:	103ee83a 	callr	r2
1010d058:	00000106 	br	1010d060 <close+0x70>
1010d05c:	0005883a 	mov	r2,zero
1010d060:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1010d064:	e13fff17 	ldw	r4,-4(fp)
1010d068:	010d8700 	call	1010d870 <alt_release_fd>
    if (rval < 0)
1010d06c:	e0bffe17 	ldw	r2,-8(fp)
1010d070:	1000070e 	bge	r2,zero,1010d090 <close+0xa0>
    {
      ALT_ERRNO = -rval;
1010d074:	010cfb40 	call	1010cfb4 <alt_get_errno>
1010d078:	1007883a 	mov	r3,r2
1010d07c:	e0bffe17 	ldw	r2,-8(fp)
1010d080:	0085c83a 	sub	r2,zero,r2
1010d084:	18800015 	stw	r2,0(r3)
      return -1;
1010d088:	00bfffc4 	movi	r2,-1
1010d08c:	00000706 	br	1010d0ac <close+0xbc>
    }
    return 0;
1010d090:	0005883a 	mov	r2,zero
1010d094:	00000506 	br	1010d0ac <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d098:	010cfb40 	call	1010cfb4 <alt_get_errno>
1010d09c:	1007883a 	mov	r3,r2
1010d0a0:	00801444 	movi	r2,81
1010d0a4:	18800015 	stw	r2,0(r3)
    return -1;
1010d0a8:	00bfffc4 	movi	r2,-1
  }
}
1010d0ac:	e037883a 	mov	sp,fp
1010d0b0:	dfc00117 	ldw	ra,4(sp)
1010d0b4:	df000017 	ldw	fp,0(sp)
1010d0b8:	dec00204 	addi	sp,sp,8
1010d0bc:	f800283a 	ret

1010d0c0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1010d0c0:	defffc04 	addi	sp,sp,-16
1010d0c4:	df000315 	stw	fp,12(sp)
1010d0c8:	df000304 	addi	fp,sp,12
1010d0cc:	e13ffd15 	stw	r4,-12(fp)
1010d0d0:	e17ffe15 	stw	r5,-8(fp)
1010d0d4:	e1bfff15 	stw	r6,-4(fp)
  return len;
1010d0d8:	e0bfff17 	ldw	r2,-4(fp)
}
1010d0dc:	e037883a 	mov	sp,fp
1010d0e0:	df000017 	ldw	fp,0(sp)
1010d0e4:	dec00104 	addi	sp,sp,4
1010d0e8:	f800283a 	ret

1010d0ec <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
1010d0ec:	defffd04 	addi	sp,sp,-12
1010d0f0:	df000215 	stw	fp,8(sp)
1010d0f4:	df000204 	addi	fp,sp,8
1010d0f8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
1010d0fc:	0001883a 	nop
1010d100:	e0bfff17 	ldw	r2,-4(fp)
1010d104:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1010d108:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
1010d10c:	10000226 	beq	r2,zero,1010d118 <_exit+0x2c>
    ALT_SIM_FAIL();
1010d110:	002af070 	cmpltui	zero,zero,43969
1010d114:	00000106 	br	1010d11c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1010d118:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
1010d11c:	003fff06 	br	1010d11c <__alt_data_end+0xfffed11c>

1010d120 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d120:	defffe04 	addi	sp,sp,-8
1010d124:	dfc00115 	stw	ra,4(sp)
1010d128:	df000015 	stw	fp,0(sp)
1010d12c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d130:	d0a00d17 	ldw	r2,-32716(gp)
1010d134:	10000326 	beq	r2,zero,1010d144 <alt_get_errno+0x24>
1010d138:	d0a00d17 	ldw	r2,-32716(gp)
1010d13c:	103ee83a 	callr	r2
1010d140:	00000106 	br	1010d148 <alt_get_errno+0x28>
1010d144:	d0a6d504 	addi	r2,gp,-25772
}
1010d148:	e037883a 	mov	sp,fp
1010d14c:	dfc00117 	ldw	ra,4(sp)
1010d150:	df000017 	ldw	fp,0(sp)
1010d154:	dec00204 	addi	sp,sp,8
1010d158:	f800283a 	ret

1010d15c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1010d15c:	defffb04 	addi	sp,sp,-20
1010d160:	dfc00415 	stw	ra,16(sp)
1010d164:	df000315 	stw	fp,12(sp)
1010d168:	df000304 	addi	fp,sp,12
1010d16c:	e13ffe15 	stw	r4,-8(fp)
1010d170:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d174:	e0bffe17 	ldw	r2,-8(fp)
1010d178:	10000616 	blt	r2,zero,1010d194 <fstat+0x38>
1010d17c:	e0bffe17 	ldw	r2,-8(fp)
1010d180:	10c00324 	muli	r3,r2,12
1010d184:	00840474 	movhi	r2,4113
1010d188:	10810d04 	addi	r2,r2,1076
1010d18c:	1885883a 	add	r2,r3,r2
1010d190:	00000106 	br	1010d198 <fstat+0x3c>
1010d194:	0005883a 	mov	r2,zero
1010d198:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1010d19c:	e0bffd17 	ldw	r2,-12(fp)
1010d1a0:	10001026 	beq	r2,zero,1010d1e4 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1010d1a4:	e0bffd17 	ldw	r2,-12(fp)
1010d1a8:	10800017 	ldw	r2,0(r2)
1010d1ac:	10800817 	ldw	r2,32(r2)
1010d1b0:	10000726 	beq	r2,zero,1010d1d0 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
1010d1b4:	e0bffd17 	ldw	r2,-12(fp)
1010d1b8:	10800017 	ldw	r2,0(r2)
1010d1bc:	10800817 	ldw	r2,32(r2)
1010d1c0:	e17fff17 	ldw	r5,-4(fp)
1010d1c4:	e13ffd17 	ldw	r4,-12(fp)
1010d1c8:	103ee83a 	callr	r2
1010d1cc:	00000a06 	br	1010d1f8 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1010d1d0:	e0bfff17 	ldw	r2,-4(fp)
1010d1d4:	00c80004 	movi	r3,8192
1010d1d8:	10c00115 	stw	r3,4(r2)
      return 0;
1010d1dc:	0005883a 	mov	r2,zero
1010d1e0:	00000506 	br	1010d1f8 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d1e4:	010d1200 	call	1010d120 <alt_get_errno>
1010d1e8:	1007883a 	mov	r3,r2
1010d1ec:	00801444 	movi	r2,81
1010d1f0:	18800015 	stw	r2,0(r3)
    return -1;
1010d1f4:	00bfffc4 	movi	r2,-1
  }
}
1010d1f8:	e037883a 	mov	sp,fp
1010d1fc:	dfc00117 	ldw	ra,4(sp)
1010d200:	df000017 	ldw	fp,0(sp)
1010d204:	dec00204 	addi	sp,sp,8
1010d208:	f800283a 	ret

1010d20c <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
1010d20c:	deffff04 	addi	sp,sp,-4
1010d210:	df000015 	stw	fp,0(sp)
1010d214:	d839883a 	mov	fp,sp
  return 0;
1010d218:	0005883a 	mov	r2,zero
}
1010d21c:	e037883a 	mov	sp,fp
1010d220:	df000017 	ldw	fp,0(sp)
1010d224:	dec00104 	addi	sp,sp,4
1010d228:	f800283a 	ret

1010d22c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d22c:	defffe04 	addi	sp,sp,-8
1010d230:	dfc00115 	stw	ra,4(sp)
1010d234:	df000015 	stw	fp,0(sp)
1010d238:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d23c:	d0a00d17 	ldw	r2,-32716(gp)
1010d240:	10000326 	beq	r2,zero,1010d250 <alt_get_errno+0x24>
1010d244:	d0a00d17 	ldw	r2,-32716(gp)
1010d248:	103ee83a 	callr	r2
1010d24c:	00000106 	br	1010d254 <alt_get_errno+0x28>
1010d250:	d0a6d504 	addi	r2,gp,-25772
}
1010d254:	e037883a 	mov	sp,fp
1010d258:	dfc00117 	ldw	ra,4(sp)
1010d25c:	df000017 	ldw	fp,0(sp)
1010d260:	dec00204 	addi	sp,sp,8
1010d264:	f800283a 	ret

1010d268 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1010d268:	deffed04 	addi	sp,sp,-76
1010d26c:	dfc01215 	stw	ra,72(sp)
1010d270:	df001115 	stw	fp,68(sp)
1010d274:	df001104 	addi	fp,sp,68
1010d278:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d27c:	e0bfff17 	ldw	r2,-4(fp)
1010d280:	10000616 	blt	r2,zero,1010d29c <isatty+0x34>
1010d284:	e0bfff17 	ldw	r2,-4(fp)
1010d288:	10c00324 	muli	r3,r2,12
1010d28c:	00840474 	movhi	r2,4113
1010d290:	10810d04 	addi	r2,r2,1076
1010d294:	1885883a 	add	r2,r3,r2
1010d298:	00000106 	br	1010d2a0 <isatty+0x38>
1010d29c:	0005883a 	mov	r2,zero
1010d2a0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1010d2a4:	e0bfef17 	ldw	r2,-68(fp)
1010d2a8:	10000e26 	beq	r2,zero,1010d2e4 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1010d2ac:	e0bfef17 	ldw	r2,-68(fp)
1010d2b0:	10800017 	ldw	r2,0(r2)
1010d2b4:	10800817 	ldw	r2,32(r2)
1010d2b8:	1000021e 	bne	r2,zero,1010d2c4 <isatty+0x5c>
    {
      return 1;
1010d2bc:	00800044 	movi	r2,1
1010d2c0:	00000d06 	br	1010d2f8 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1010d2c4:	e0bff004 	addi	r2,fp,-64
1010d2c8:	100b883a 	mov	r5,r2
1010d2cc:	e13fff17 	ldw	r4,-4(fp)
1010d2d0:	010d15c0 	call	1010d15c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1010d2d4:	e0bff117 	ldw	r2,-60(fp)
1010d2d8:	10880020 	cmpeqi	r2,r2,8192
1010d2dc:	10803fcc 	andi	r2,r2,255
1010d2e0:	00000506 	br	1010d2f8 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d2e4:	010d22c0 	call	1010d22c <alt_get_errno>
1010d2e8:	1007883a 	mov	r3,r2
1010d2ec:	00801444 	movi	r2,81
1010d2f0:	18800015 	stw	r2,0(r3)
    return 0;
1010d2f4:	0005883a 	mov	r2,zero
  }
}
1010d2f8:	e037883a 	mov	sp,fp
1010d2fc:	dfc00117 	ldw	ra,4(sp)
1010d300:	df000017 	ldw	fp,0(sp)
1010d304:	dec00204 	addi	sp,sp,8
1010d308:	f800283a 	ret

1010d30c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d30c:	defffe04 	addi	sp,sp,-8
1010d310:	dfc00115 	stw	ra,4(sp)
1010d314:	df000015 	stw	fp,0(sp)
1010d318:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d31c:	d0a00d17 	ldw	r2,-32716(gp)
1010d320:	10000326 	beq	r2,zero,1010d330 <alt_get_errno+0x24>
1010d324:	d0a00d17 	ldw	r2,-32716(gp)
1010d328:	103ee83a 	callr	r2
1010d32c:	00000106 	br	1010d334 <alt_get_errno+0x28>
1010d330:	d0a6d504 	addi	r2,gp,-25772
}
1010d334:	e037883a 	mov	sp,fp
1010d338:	dfc00117 	ldw	ra,4(sp)
1010d33c:	df000017 	ldw	fp,0(sp)
1010d340:	dec00204 	addi	sp,sp,8
1010d344:	f800283a 	ret

1010d348 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
1010d348:	defffb04 	addi	sp,sp,-20
1010d34c:	dfc00415 	stw	ra,16(sp)
1010d350:	df000315 	stw	fp,12(sp)
1010d354:	df000304 	addi	fp,sp,12
1010d358:	e13ffe15 	stw	r4,-8(fp)
1010d35c:	e17fff15 	stw	r5,-4(fp)
  int status = 0;
1010d360:	e03ffd15 	stw	zero,-12(fp)

  if (pid <= 0)
1010d364:	e0bffe17 	ldw	r2,-8(fp)
1010d368:	00802f16 	blt	zero,r2,1010d428 <kill+0xe0>
  {
    switch (sig)
1010d36c:	e0bfff17 	ldw	r2,-4(fp)
1010d370:	10800828 	cmpgeui	r2,r2,32
1010d374:	1000291e 	bne	r2,zero,1010d41c <kill+0xd4>
1010d378:	e0bfff17 	ldw	r2,-4(fp)
1010d37c:	100690ba 	slli	r3,r2,2
1010d380:	00840474 	movhi	r2,4113
1010d384:	10b4e504 	addi	r2,r2,-11372
1010d388:	1885883a 	add	r2,r3,r2
1010d38c:	10800017 	ldw	r2,0(r2)
1010d390:	1000683a 	jmp	r2
1010d394:	1010d43c 	xorhi	zero,r2,17232
1010d398:	1010d41c 	xori	zero,r2,17232
1010d39c:	1010d41c 	xori	zero,r2,17232
1010d3a0:	1010d414 	ori	zero,r2,17232
1010d3a4:	1010d414 	ori	zero,r2,17232
1010d3a8:	1010d414 	ori	zero,r2,17232
1010d3ac:	1010d414 	ori	zero,r2,17232
1010d3b0:	1010d41c 	xori	zero,r2,17232
1010d3b4:	1010d414 	ori	zero,r2,17232
1010d3b8:	1010d414 	ori	zero,r2,17232
1010d3bc:	1010d414 	ori	zero,r2,17232
1010d3c0:	1010d414 	ori	zero,r2,17232
1010d3c4:	1010d414 	ori	zero,r2,17232
1010d3c8:	1010d414 	ori	zero,r2,17232
1010d3cc:	1010d414 	ori	zero,r2,17232
1010d3d0:	1010d414 	ori	zero,r2,17232
1010d3d4:	1010d43c 	xorhi	zero,r2,17232
1010d3d8:	1010d41c 	xori	zero,r2,17232
1010d3dc:	1010d41c 	xori	zero,r2,17232
1010d3e0:	1010d41c 	xori	zero,r2,17232
1010d3e4:	1010d43c 	xorhi	zero,r2,17232
1010d3e8:	1010d41c 	xori	zero,r2,17232
1010d3ec:	1010d41c 	xori	zero,r2,17232
1010d3f0:	1010d414 	ori	zero,r2,17232
1010d3f4:	1010d414 	ori	zero,r2,17232
1010d3f8:	1010d414 	ori	zero,r2,17232
1010d3fc:	1010d414 	ori	zero,r2,17232
1010d400:	1010d414 	ori	zero,r2,17232
1010d404:	1010d41c 	xori	zero,r2,17232
1010d408:	1010d41c 	xori	zero,r2,17232
1010d40c:	1010d414 	ori	zero,r2,17232
1010d410:	1010d414 	ori	zero,r2,17232
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
1010d414:	0009883a 	mov	r4,zero
1010d418:	010d0ec0 	call	1010d0ec <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
1010d41c:	00800584 	movi	r2,22
1010d420:	e0bffd15 	stw	r2,-12(fp)
1010d424:	00000606 	br	1010d440 <kill+0xf8>
    }
  }

  else if (pid > 0)
1010d428:	e0bffe17 	ldw	r2,-8(fp)
1010d42c:	0080040e 	bge	zero,r2,1010d440 <kill+0xf8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
1010d430:	008000c4 	movi	r2,3
1010d434:	e0bffd15 	stw	r2,-12(fp)
1010d438:	00000106 	br	1010d440 <kill+0xf8>
    {
    case 0:

      /* The null signal is used to check that a pid is valid. */

      break;
1010d43c:	0001883a 	nop
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  }

  if (status)
1010d440:	e0bffd17 	ldw	r2,-12(fp)
1010d444:	10000626 	beq	r2,zero,1010d460 <kill+0x118>
  {
    ALT_ERRNO = status;
1010d448:	010d30c0 	call	1010d30c <alt_get_errno>
1010d44c:	1007883a 	mov	r3,r2
1010d450:	e0bffd17 	ldw	r2,-12(fp)
1010d454:	18800015 	stw	r2,0(r3)
    return -1;
1010d458:	00bfffc4 	movi	r2,-1
1010d45c:	00000106 	br	1010d464 <kill+0x11c>
  }

  return 0;
1010d460:	0005883a 	mov	r2,zero
}
1010d464:	e037883a 	mov	sp,fp
1010d468:	dfc00117 	ldw	ra,4(sp)
1010d46c:	df000017 	ldw	fp,0(sp)
1010d470:	dec00204 	addi	sp,sp,8
1010d474:	f800283a 	ret

1010d478 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1010d478:	defffc04 	addi	sp,sp,-16
1010d47c:	df000315 	stw	fp,12(sp)
1010d480:	df000304 	addi	fp,sp,12
1010d484:	e13ffd15 	stw	r4,-12(fp)
1010d488:	e17ffe15 	stw	r5,-8(fp)
1010d48c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1010d490:	e0fffe17 	ldw	r3,-8(fp)
1010d494:	e0bffd17 	ldw	r2,-12(fp)
1010d498:	18800c26 	beq	r3,r2,1010d4cc <alt_load_section+0x54>
  {
    while( to != end )
1010d49c:	00000806 	br	1010d4c0 <alt_load_section+0x48>
    {
      *to++ = *from++;
1010d4a0:	e0bffe17 	ldw	r2,-8(fp)
1010d4a4:	10c00104 	addi	r3,r2,4
1010d4a8:	e0fffe15 	stw	r3,-8(fp)
1010d4ac:	e0fffd17 	ldw	r3,-12(fp)
1010d4b0:	19000104 	addi	r4,r3,4
1010d4b4:	e13ffd15 	stw	r4,-12(fp)
1010d4b8:	18c00017 	ldw	r3,0(r3)
1010d4bc:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1010d4c0:	e0fffe17 	ldw	r3,-8(fp)
1010d4c4:	e0bfff17 	ldw	r2,-4(fp)
1010d4c8:	18bff51e 	bne	r3,r2,1010d4a0 <__alt_data_end+0xfffed4a0>
    {
      *to++ = *from++;
    }
  }
}
1010d4cc:	0001883a 	nop
1010d4d0:	e037883a 	mov	sp,fp
1010d4d4:	df000017 	ldw	fp,0(sp)
1010d4d8:	dec00104 	addi	sp,sp,4
1010d4dc:	f800283a 	ret

1010d4e0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1010d4e0:	defffe04 	addi	sp,sp,-8
1010d4e4:	dfc00115 	stw	ra,4(sp)
1010d4e8:	df000015 	stw	fp,0(sp)
1010d4ec:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1010d4f0:	01840474 	movhi	r6,4113
1010d4f4:	31859704 	addi	r6,r6,5724
1010d4f8:	01440474 	movhi	r5,4113
1010d4fc:	297eda04 	addi	r5,r5,-1176
1010d500:	01040474 	movhi	r4,4113
1010d504:	21059704 	addi	r4,r4,5724
1010d508:	010d4780 	call	1010d478 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1010d50c:	01840434 	movhi	r6,4112
1010d510:	31809104 	addi	r6,r6,580
1010d514:	01440434 	movhi	r5,4112
1010d518:	29400804 	addi	r5,r5,32
1010d51c:	01040434 	movhi	r4,4112
1010d520:	21000804 	addi	r4,r4,32
1010d524:	010d4780 	call	1010d478 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1010d528:	01840474 	movhi	r6,4113
1010d52c:	31beda04 	addi	r6,r6,-1176
1010d530:	01440474 	movhi	r5,4113
1010d534:	297df804 	addi	r5,r5,-2080
1010d538:	01040474 	movhi	r4,4113
1010d53c:	213df804 	addi	r4,r4,-2080
1010d540:	010d4780 	call	1010d478 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1010d544:	010e7000 	call	1010e700 <alt_dcache_flush_all>
  alt_icache_flush_all();
1010d548:	010e8e80 	call	1010e8e8 <alt_icache_flush_all>
}
1010d54c:	0001883a 	nop
1010d550:	e037883a 	mov	sp,fp
1010d554:	dfc00117 	ldw	ra,4(sp)
1010d558:	df000017 	ldw	fp,0(sp)
1010d55c:	dec00204 	addi	sp,sp,8
1010d560:	f800283a 	ret

1010d564 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d564:	defffe04 	addi	sp,sp,-8
1010d568:	dfc00115 	stw	ra,4(sp)
1010d56c:	df000015 	stw	fp,0(sp)
1010d570:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d574:	d0a00d17 	ldw	r2,-32716(gp)
1010d578:	10000326 	beq	r2,zero,1010d588 <alt_get_errno+0x24>
1010d57c:	d0a00d17 	ldw	r2,-32716(gp)
1010d580:	103ee83a 	callr	r2
1010d584:	00000106 	br	1010d58c <alt_get_errno+0x28>
1010d588:	d0a6d504 	addi	r2,gp,-25772
}
1010d58c:	e037883a 	mov	sp,fp
1010d590:	dfc00117 	ldw	ra,4(sp)
1010d594:	df000017 	ldw	fp,0(sp)
1010d598:	dec00204 	addi	sp,sp,8
1010d59c:	f800283a 	ret

1010d5a0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1010d5a0:	defff904 	addi	sp,sp,-28
1010d5a4:	dfc00615 	stw	ra,24(sp)
1010d5a8:	df000515 	stw	fp,20(sp)
1010d5ac:	df000504 	addi	fp,sp,20
1010d5b0:	e13ffd15 	stw	r4,-12(fp)
1010d5b4:	e17ffe15 	stw	r5,-8(fp)
1010d5b8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1010d5bc:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d5c0:	e0bffd17 	ldw	r2,-12(fp)
1010d5c4:	10000616 	blt	r2,zero,1010d5e0 <lseek+0x40>
1010d5c8:	e0bffd17 	ldw	r2,-12(fp)
1010d5cc:	10c00324 	muli	r3,r2,12
1010d5d0:	00840474 	movhi	r2,4113
1010d5d4:	10810d04 	addi	r2,r2,1076
1010d5d8:	1885883a 	add	r2,r3,r2
1010d5dc:	00000106 	br	1010d5e4 <lseek+0x44>
1010d5e0:	0005883a 	mov	r2,zero
1010d5e4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1010d5e8:	e0bffc17 	ldw	r2,-16(fp)
1010d5ec:	10001026 	beq	r2,zero,1010d630 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1010d5f0:	e0bffc17 	ldw	r2,-16(fp)
1010d5f4:	10800017 	ldw	r2,0(r2)
1010d5f8:	10800717 	ldw	r2,28(r2)
1010d5fc:	10000926 	beq	r2,zero,1010d624 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1010d600:	e0bffc17 	ldw	r2,-16(fp)
1010d604:	10800017 	ldw	r2,0(r2)
1010d608:	10800717 	ldw	r2,28(r2)
1010d60c:	e1bfff17 	ldw	r6,-4(fp)
1010d610:	e17ffe17 	ldw	r5,-8(fp)
1010d614:	e13ffc17 	ldw	r4,-16(fp)
1010d618:	103ee83a 	callr	r2
1010d61c:	e0bffb15 	stw	r2,-20(fp)
1010d620:	00000506 	br	1010d638 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1010d624:	00bfde84 	movi	r2,-134
1010d628:	e0bffb15 	stw	r2,-20(fp)
1010d62c:	00000206 	br	1010d638 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
1010d630:	00bfebc4 	movi	r2,-81
1010d634:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1010d638:	e0bffb17 	ldw	r2,-20(fp)
1010d63c:	1000070e 	bge	r2,zero,1010d65c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
1010d640:	010d5640 	call	1010d564 <alt_get_errno>
1010d644:	1007883a 	mov	r3,r2
1010d648:	e0bffb17 	ldw	r2,-20(fp)
1010d64c:	0085c83a 	sub	r2,zero,r2
1010d650:	18800015 	stw	r2,0(r3)
    rc = -1;
1010d654:	00bfffc4 	movi	r2,-1
1010d658:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1010d65c:	e0bffb17 	ldw	r2,-20(fp)
}
1010d660:	e037883a 	mov	sp,fp
1010d664:	dfc00117 	ldw	ra,4(sp)
1010d668:	df000017 	ldw	fp,0(sp)
1010d66c:	dec00204 	addi	sp,sp,8
1010d670:	f800283a 	ret

1010d674 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1010d674:	defffd04 	addi	sp,sp,-12
1010d678:	dfc00215 	stw	ra,8(sp)
1010d67c:	df000115 	stw	fp,4(sp)
1010d680:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1010d684:	0009883a 	mov	r4,zero
1010d688:	010daec0 	call	1010daec <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1010d68c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1010d690:	010db240 	call	1010db24 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1010d694:	01840474 	movhi	r6,4113
1010d698:	31bed004 	addi	r6,r6,-1216
1010d69c:	01440474 	movhi	r5,4113
1010d6a0:	297ed004 	addi	r5,r5,-1216
1010d6a4:	01040474 	movhi	r4,4113
1010d6a8:	213ed004 	addi	r4,r4,-1216
1010d6ac:	010ec800 	call	1010ec80 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1010d6b0:	010e8280 	call	1010e828 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1010d6b4:	01040474 	movhi	r4,4113
1010d6b8:	213a2204 	addi	r4,r4,-6008
1010d6bc:	010f4800 	call	1010f480 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1010d6c0:	d0a6d617 	ldw	r2,-25768(gp)
1010d6c4:	d0e6d717 	ldw	r3,-25764(gp)
1010d6c8:	d126d817 	ldw	r4,-25760(gp)
1010d6cc:	200d883a 	mov	r6,r4
1010d6d0:	180b883a 	mov	r5,r3
1010d6d4:	1009883a 	mov	r4,r2
1010d6d8:	01002900 	call	10100290 <main>
1010d6dc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1010d6e0:	01000044 	movi	r4,1
1010d6e4:	010cff00 	call	1010cff0 <close>
  exit (result);
1010d6e8:	e13fff17 	ldw	r4,-4(fp)
1010d6ec:	010f4940 	call	1010f494 <exit>

1010d6f0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1010d6f0:	defffe04 	addi	sp,sp,-8
1010d6f4:	df000115 	stw	fp,4(sp)
1010d6f8:	df000104 	addi	fp,sp,4
1010d6fc:	e13fff15 	stw	r4,-4(fp)
}
1010d700:	0001883a 	nop
1010d704:	e037883a 	mov	sp,fp
1010d708:	df000017 	ldw	fp,0(sp)
1010d70c:	dec00104 	addi	sp,sp,4
1010d710:	f800283a 	ret

1010d714 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1010d714:	defffe04 	addi	sp,sp,-8
1010d718:	df000115 	stw	fp,4(sp)
1010d71c:	df000104 	addi	fp,sp,4
1010d720:	e13fff15 	stw	r4,-4(fp)
}
1010d724:	0001883a 	nop
1010d728:	e037883a 	mov	sp,fp
1010d72c:	df000017 	ldw	fp,0(sp)
1010d730:	dec00104 	addi	sp,sp,4
1010d734:	f800283a 	ret

1010d738 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d738:	defffe04 	addi	sp,sp,-8
1010d73c:	dfc00115 	stw	ra,4(sp)
1010d740:	df000015 	stw	fp,0(sp)
1010d744:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d748:	d0a00d17 	ldw	r2,-32716(gp)
1010d74c:	10000326 	beq	r2,zero,1010d75c <alt_get_errno+0x24>
1010d750:	d0a00d17 	ldw	r2,-32716(gp)
1010d754:	103ee83a 	callr	r2
1010d758:	00000106 	br	1010d760 <alt_get_errno+0x28>
1010d75c:	d0a6d504 	addi	r2,gp,-25772
}
1010d760:	e037883a 	mov	sp,fp
1010d764:	dfc00117 	ldw	ra,4(sp)
1010d768:	df000017 	ldw	fp,0(sp)
1010d76c:	dec00204 	addi	sp,sp,8
1010d770:	f800283a 	ret

1010d774 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1010d774:	defff904 	addi	sp,sp,-28
1010d778:	dfc00615 	stw	ra,24(sp)
1010d77c:	df000515 	stw	fp,20(sp)
1010d780:	df000504 	addi	fp,sp,20
1010d784:	e13ffd15 	stw	r4,-12(fp)
1010d788:	e17ffe15 	stw	r5,-8(fp)
1010d78c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d790:	e0bffd17 	ldw	r2,-12(fp)
1010d794:	10000616 	blt	r2,zero,1010d7b0 <read+0x3c>
1010d798:	e0bffd17 	ldw	r2,-12(fp)
1010d79c:	10c00324 	muli	r3,r2,12
1010d7a0:	00840474 	movhi	r2,4113
1010d7a4:	10810d04 	addi	r2,r2,1076
1010d7a8:	1885883a 	add	r2,r3,r2
1010d7ac:	00000106 	br	1010d7b4 <read+0x40>
1010d7b0:	0005883a 	mov	r2,zero
1010d7b4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010d7b8:	e0bffb17 	ldw	r2,-20(fp)
1010d7bc:	10002226 	beq	r2,zero,1010d848 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010d7c0:	e0bffb17 	ldw	r2,-20(fp)
1010d7c4:	10800217 	ldw	r2,8(r2)
1010d7c8:	108000cc 	andi	r2,r2,3
1010d7cc:	10800060 	cmpeqi	r2,r2,1
1010d7d0:	1000181e 	bne	r2,zero,1010d834 <read+0xc0>
        (fd->dev->read))
1010d7d4:	e0bffb17 	ldw	r2,-20(fp)
1010d7d8:	10800017 	ldw	r2,0(r2)
1010d7dc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010d7e0:	10001426 	beq	r2,zero,1010d834 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1010d7e4:	e0bffb17 	ldw	r2,-20(fp)
1010d7e8:	10800017 	ldw	r2,0(r2)
1010d7ec:	10800517 	ldw	r2,20(r2)
1010d7f0:	e0ffff17 	ldw	r3,-4(fp)
1010d7f4:	180d883a 	mov	r6,r3
1010d7f8:	e17ffe17 	ldw	r5,-8(fp)
1010d7fc:	e13ffb17 	ldw	r4,-20(fp)
1010d800:	103ee83a 	callr	r2
1010d804:	e0bffc15 	stw	r2,-16(fp)
1010d808:	e0bffc17 	ldw	r2,-16(fp)
1010d80c:	1000070e 	bge	r2,zero,1010d82c <read+0xb8>
        {
          ALT_ERRNO = -rval;
1010d810:	010d7380 	call	1010d738 <alt_get_errno>
1010d814:	1007883a 	mov	r3,r2
1010d818:	e0bffc17 	ldw	r2,-16(fp)
1010d81c:	0085c83a 	sub	r2,zero,r2
1010d820:	18800015 	stw	r2,0(r3)
          return -1;
1010d824:	00bfffc4 	movi	r2,-1
1010d828:	00000c06 	br	1010d85c <read+0xe8>
        }
        return rval;
1010d82c:	e0bffc17 	ldw	r2,-16(fp)
1010d830:	00000a06 	br	1010d85c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
1010d834:	010d7380 	call	1010d738 <alt_get_errno>
1010d838:	1007883a 	mov	r3,r2
1010d83c:	00800344 	movi	r2,13
1010d840:	18800015 	stw	r2,0(r3)
1010d844:	00000406 	br	1010d858 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1010d848:	010d7380 	call	1010d738 <alt_get_errno>
1010d84c:	1007883a 	mov	r3,r2
1010d850:	00801444 	movi	r2,81
1010d854:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010d858:	00bfffc4 	movi	r2,-1
}
1010d85c:	e037883a 	mov	sp,fp
1010d860:	dfc00117 	ldw	ra,4(sp)
1010d864:	df000017 	ldw	fp,0(sp)
1010d868:	dec00204 	addi	sp,sp,8
1010d86c:	f800283a 	ret

1010d870 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1010d870:	defffe04 	addi	sp,sp,-8
1010d874:	df000115 	stw	fp,4(sp)
1010d878:	df000104 	addi	fp,sp,4
1010d87c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
1010d880:	e0bfff17 	ldw	r2,-4(fp)
1010d884:	108000d0 	cmplti	r2,r2,3
1010d888:	10000d1e 	bne	r2,zero,1010d8c0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
1010d88c:	00840474 	movhi	r2,4113
1010d890:	10810d04 	addi	r2,r2,1076
1010d894:	e0ffff17 	ldw	r3,-4(fp)
1010d898:	18c00324 	muli	r3,r3,12
1010d89c:	10c5883a 	add	r2,r2,r3
1010d8a0:	10800204 	addi	r2,r2,8
1010d8a4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1010d8a8:	00840474 	movhi	r2,4113
1010d8ac:	10810d04 	addi	r2,r2,1076
1010d8b0:	e0ffff17 	ldw	r3,-4(fp)
1010d8b4:	18c00324 	muli	r3,r3,12
1010d8b8:	10c5883a 	add	r2,r2,r3
1010d8bc:	10000015 	stw	zero,0(r2)
  }
}
1010d8c0:	0001883a 	nop
1010d8c4:	e037883a 	mov	sp,fp
1010d8c8:	df000017 	ldw	fp,0(sp)
1010d8cc:	dec00104 	addi	sp,sp,4
1010d8d0:	f800283a 	ret

1010d8d4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1010d8d4:	defff904 	addi	sp,sp,-28
1010d8d8:	df000615 	stw	fp,24(sp)
1010d8dc:	df000604 	addi	fp,sp,24
1010d8e0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010d8e4:	0005303a 	rdctl	r2,status
1010d8e8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010d8ec:	e0fffe17 	ldw	r3,-8(fp)
1010d8f0:	00bfff84 	movi	r2,-2
1010d8f4:	1884703a 	and	r2,r3,r2
1010d8f8:	1001703a 	wrctl	status,r2
  
  return context;
1010d8fc:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1010d900:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1010d904:	d0a00e17 	ldw	r2,-32712(gp)
1010d908:	10c000c4 	addi	r3,r2,3
1010d90c:	00bfff04 	movi	r2,-4
1010d910:	1884703a 	and	r2,r3,r2
1010d914:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1010d918:	d0e00e17 	ldw	r3,-32712(gp)
1010d91c:	e0bfff17 	ldw	r2,-4(fp)
1010d920:	1887883a 	add	r3,r3,r2
1010d924:	008404b4 	movhi	r2,4114
1010d928:	10800004 	addi	r2,r2,0
1010d92c:	10c0062e 	bgeu	r2,r3,1010d948 <sbrk+0x74>
1010d930:	e0bffb17 	ldw	r2,-20(fp)
1010d934:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010d938:	e0bffa17 	ldw	r2,-24(fp)
1010d93c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1010d940:	00bfffc4 	movi	r2,-1
1010d944:	00000b06 	br	1010d974 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1010d948:	d0a00e17 	ldw	r2,-32712(gp)
1010d94c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
1010d950:	d0e00e17 	ldw	r3,-32712(gp)
1010d954:	e0bfff17 	ldw	r2,-4(fp)
1010d958:	1885883a 	add	r2,r3,r2
1010d95c:	d0a00e15 	stw	r2,-32712(gp)
1010d960:	e0bffb17 	ldw	r2,-20(fp)
1010d964:	e0bffc15 	stw	r2,-16(fp)
1010d968:	e0bffc17 	ldw	r2,-16(fp)
1010d96c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1010d970:	e0bffd17 	ldw	r2,-12(fp)
} 
1010d974:	e037883a 	mov	sp,fp
1010d978:	df000017 	ldw	fp,0(sp)
1010d97c:	dec00104 	addi	sp,sp,4
1010d980:	f800283a 	ret

1010d984 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d984:	defffe04 	addi	sp,sp,-8
1010d988:	dfc00115 	stw	ra,4(sp)
1010d98c:	df000015 	stw	fp,0(sp)
1010d990:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d994:	d0a00d17 	ldw	r2,-32716(gp)
1010d998:	10000326 	beq	r2,zero,1010d9a8 <alt_get_errno+0x24>
1010d99c:	d0a00d17 	ldw	r2,-32716(gp)
1010d9a0:	103ee83a 	callr	r2
1010d9a4:	00000106 	br	1010d9ac <alt_get_errno+0x28>
1010d9a8:	d0a6d504 	addi	r2,gp,-25772
}
1010d9ac:	e037883a 	mov	sp,fp
1010d9b0:	dfc00117 	ldw	ra,4(sp)
1010d9b4:	df000017 	ldw	fp,0(sp)
1010d9b8:	dec00204 	addi	sp,sp,8
1010d9bc:	f800283a 	ret

1010d9c0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1010d9c0:	defff904 	addi	sp,sp,-28
1010d9c4:	dfc00615 	stw	ra,24(sp)
1010d9c8:	df000515 	stw	fp,20(sp)
1010d9cc:	df000504 	addi	fp,sp,20
1010d9d0:	e13ffd15 	stw	r4,-12(fp)
1010d9d4:	e17ffe15 	stw	r5,-8(fp)
1010d9d8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d9dc:	e0bffd17 	ldw	r2,-12(fp)
1010d9e0:	10000616 	blt	r2,zero,1010d9fc <write+0x3c>
1010d9e4:	e0bffd17 	ldw	r2,-12(fp)
1010d9e8:	10c00324 	muli	r3,r2,12
1010d9ec:	00840474 	movhi	r2,4113
1010d9f0:	10810d04 	addi	r2,r2,1076
1010d9f4:	1885883a 	add	r2,r3,r2
1010d9f8:	00000106 	br	1010da00 <write+0x40>
1010d9fc:	0005883a 	mov	r2,zero
1010da00:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010da04:	e0bffb17 	ldw	r2,-20(fp)
1010da08:	10002126 	beq	r2,zero,1010da90 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1010da0c:	e0bffb17 	ldw	r2,-20(fp)
1010da10:	10800217 	ldw	r2,8(r2)
1010da14:	108000cc 	andi	r2,r2,3
1010da18:	10001826 	beq	r2,zero,1010da7c <write+0xbc>
1010da1c:	e0bffb17 	ldw	r2,-20(fp)
1010da20:	10800017 	ldw	r2,0(r2)
1010da24:	10800617 	ldw	r2,24(r2)
1010da28:	10001426 	beq	r2,zero,1010da7c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1010da2c:	e0bffb17 	ldw	r2,-20(fp)
1010da30:	10800017 	ldw	r2,0(r2)
1010da34:	10800617 	ldw	r2,24(r2)
1010da38:	e0ffff17 	ldw	r3,-4(fp)
1010da3c:	180d883a 	mov	r6,r3
1010da40:	e17ffe17 	ldw	r5,-8(fp)
1010da44:	e13ffb17 	ldw	r4,-20(fp)
1010da48:	103ee83a 	callr	r2
1010da4c:	e0bffc15 	stw	r2,-16(fp)
1010da50:	e0bffc17 	ldw	r2,-16(fp)
1010da54:	1000070e 	bge	r2,zero,1010da74 <write+0xb4>
      {
        ALT_ERRNO = -rval;
1010da58:	010d9840 	call	1010d984 <alt_get_errno>
1010da5c:	1007883a 	mov	r3,r2
1010da60:	e0bffc17 	ldw	r2,-16(fp)
1010da64:	0085c83a 	sub	r2,zero,r2
1010da68:	18800015 	stw	r2,0(r3)
        return -1;
1010da6c:	00bfffc4 	movi	r2,-1
1010da70:	00000c06 	br	1010daa4 <write+0xe4>
      }
      return rval;
1010da74:	e0bffc17 	ldw	r2,-16(fp)
1010da78:	00000a06 	br	1010daa4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
1010da7c:	010d9840 	call	1010d984 <alt_get_errno>
1010da80:	1007883a 	mov	r3,r2
1010da84:	00800344 	movi	r2,13
1010da88:	18800015 	stw	r2,0(r3)
1010da8c:	00000406 	br	1010daa0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1010da90:	010d9840 	call	1010d984 <alt_get_errno>
1010da94:	1007883a 	mov	r3,r2
1010da98:	00801444 	movi	r2,81
1010da9c:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010daa0:	00bfffc4 	movi	r2,-1
}
1010daa4:	e037883a 	mov	sp,fp
1010daa8:	dfc00117 	ldw	ra,4(sp)
1010daac:	df000017 	ldw	fp,0(sp)
1010dab0:	dec00204 	addi	sp,sp,8
1010dab4:	f800283a 	ret

1010dab8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1010dab8:	defffd04 	addi	sp,sp,-12
1010dabc:	dfc00215 	stw	ra,8(sp)
1010dac0:	df000115 	stw	fp,4(sp)
1010dac4:	df000104 	addi	fp,sp,4
1010dac8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1010dacc:	d1600a04 	addi	r5,gp,-32728
1010dad0:	e13fff17 	ldw	r4,-4(fp)
1010dad4:	010e7840 	call	1010e784 <alt_dev_llist_insert>
}
1010dad8:	e037883a 	mov	sp,fp
1010dadc:	dfc00117 	ldw	ra,4(sp)
1010dae0:	df000017 	ldw	fp,0(sp)
1010dae4:	dec00204 	addi	sp,sp,8
1010dae8:	f800283a 	ret

1010daec <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1010daec:	defffd04 	addi	sp,sp,-12
1010daf0:	dfc00215 	stw	ra,8(sp)
1010daf4:	df000115 	stw	fp,4(sp)
1010daf8:	df000104 	addi	fp,sp,4
1010dafc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1010db00:	010f0f40 	call	1010f0f4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1010db04:	00800044 	movi	r2,1
1010db08:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1010db0c:	0001883a 	nop
1010db10:	e037883a 	mov	sp,fp
1010db14:	dfc00117 	ldw	ra,4(sp)
1010db18:	df000017 	ldw	fp,0(sp)
1010db1c:	dec00204 	addi	sp,sp,8
1010db20:	f800283a 	ret

1010db24 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1010db24:	defffe04 	addi	sp,sp,-8
1010db28:	dfc00115 	stw	ra,4(sp)
1010db2c:	df000015 	stw	fp,0(sp)
1010db30:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1010db34:	000d883a 	mov	r6,zero
1010db38:	000b883a 	mov	r5,zero
1010db3c:	01040474 	movhi	r4,4113
1010db40:	21017704 	addi	r4,r4,1500
1010db44:	010dcd00 	call	1010dcd0 <altera_avalon_jtag_uart_init>
1010db48:	01040474 	movhi	r4,4113
1010db4c:	21016d04 	addi	r4,r4,1460
1010db50:	010dab80 	call	1010dab8 <alt_dev_reg>
}
1010db54:	0001883a 	nop
1010db58:	e037883a 	mov	sp,fp
1010db5c:	dfc00117 	ldw	ra,4(sp)
1010db60:	df000017 	ldw	fp,0(sp)
1010db64:	dec00204 	addi	sp,sp,8
1010db68:	f800283a 	ret

1010db6c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1010db6c:	defffa04 	addi	sp,sp,-24
1010db70:	dfc00515 	stw	ra,20(sp)
1010db74:	df000415 	stw	fp,16(sp)
1010db78:	df000404 	addi	fp,sp,16
1010db7c:	e13ffd15 	stw	r4,-12(fp)
1010db80:	e17ffe15 	stw	r5,-8(fp)
1010db84:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010db88:	e0bffd17 	ldw	r2,-12(fp)
1010db8c:	10800017 	ldw	r2,0(r2)
1010db90:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1010db94:	e0bffc17 	ldw	r2,-16(fp)
1010db98:	10c00a04 	addi	r3,r2,40
1010db9c:	e0bffd17 	ldw	r2,-12(fp)
1010dba0:	10800217 	ldw	r2,8(r2)
1010dba4:	100f883a 	mov	r7,r2
1010dba8:	e1bfff17 	ldw	r6,-4(fp)
1010dbac:	e17ffe17 	ldw	r5,-8(fp)
1010dbb0:	1809883a 	mov	r4,r3
1010dbb4:	010e1940 	call	1010e194 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1010dbb8:	e037883a 	mov	sp,fp
1010dbbc:	dfc00117 	ldw	ra,4(sp)
1010dbc0:	df000017 	ldw	fp,0(sp)
1010dbc4:	dec00204 	addi	sp,sp,8
1010dbc8:	f800283a 	ret

1010dbcc <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1010dbcc:	defffa04 	addi	sp,sp,-24
1010dbd0:	dfc00515 	stw	ra,20(sp)
1010dbd4:	df000415 	stw	fp,16(sp)
1010dbd8:	df000404 	addi	fp,sp,16
1010dbdc:	e13ffd15 	stw	r4,-12(fp)
1010dbe0:	e17ffe15 	stw	r5,-8(fp)
1010dbe4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010dbe8:	e0bffd17 	ldw	r2,-12(fp)
1010dbec:	10800017 	ldw	r2,0(r2)
1010dbf0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1010dbf4:	e0bffc17 	ldw	r2,-16(fp)
1010dbf8:	10c00a04 	addi	r3,r2,40
1010dbfc:	e0bffd17 	ldw	r2,-12(fp)
1010dc00:	10800217 	ldw	r2,8(r2)
1010dc04:	100f883a 	mov	r7,r2
1010dc08:	e1bfff17 	ldw	r6,-4(fp)
1010dc0c:	e17ffe17 	ldw	r5,-8(fp)
1010dc10:	1809883a 	mov	r4,r3
1010dc14:	010e3b00 	call	1010e3b0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1010dc18:	e037883a 	mov	sp,fp
1010dc1c:	dfc00117 	ldw	ra,4(sp)
1010dc20:	df000017 	ldw	fp,0(sp)
1010dc24:	dec00204 	addi	sp,sp,8
1010dc28:	f800283a 	ret

1010dc2c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1010dc2c:	defffc04 	addi	sp,sp,-16
1010dc30:	dfc00315 	stw	ra,12(sp)
1010dc34:	df000215 	stw	fp,8(sp)
1010dc38:	df000204 	addi	fp,sp,8
1010dc3c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010dc40:	e0bfff17 	ldw	r2,-4(fp)
1010dc44:	10800017 	ldw	r2,0(r2)
1010dc48:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1010dc4c:	e0bffe17 	ldw	r2,-8(fp)
1010dc50:	10c00a04 	addi	r3,r2,40
1010dc54:	e0bfff17 	ldw	r2,-4(fp)
1010dc58:	10800217 	ldw	r2,8(r2)
1010dc5c:	100b883a 	mov	r5,r2
1010dc60:	1809883a 	mov	r4,r3
1010dc64:	010e03c0 	call	1010e03c <altera_avalon_jtag_uart_close>
}
1010dc68:	e037883a 	mov	sp,fp
1010dc6c:	dfc00117 	ldw	ra,4(sp)
1010dc70:	df000017 	ldw	fp,0(sp)
1010dc74:	dec00204 	addi	sp,sp,8
1010dc78:	f800283a 	ret

1010dc7c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1010dc7c:	defffa04 	addi	sp,sp,-24
1010dc80:	dfc00515 	stw	ra,20(sp)
1010dc84:	df000415 	stw	fp,16(sp)
1010dc88:	df000404 	addi	fp,sp,16
1010dc8c:	e13ffd15 	stw	r4,-12(fp)
1010dc90:	e17ffe15 	stw	r5,-8(fp)
1010dc94:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1010dc98:	e0bffd17 	ldw	r2,-12(fp)
1010dc9c:	10800017 	ldw	r2,0(r2)
1010dca0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1010dca4:	e0bffc17 	ldw	r2,-16(fp)
1010dca8:	10800a04 	addi	r2,r2,40
1010dcac:	e1bfff17 	ldw	r6,-4(fp)
1010dcb0:	e17ffe17 	ldw	r5,-8(fp)
1010dcb4:	1009883a 	mov	r4,r2
1010dcb8:	010e0a40 	call	1010e0a4 <altera_avalon_jtag_uart_ioctl>
}
1010dcbc:	e037883a 	mov	sp,fp
1010dcc0:	dfc00117 	ldw	ra,4(sp)
1010dcc4:	df000017 	ldw	fp,0(sp)
1010dcc8:	dec00204 	addi	sp,sp,8
1010dccc:	f800283a 	ret

1010dcd0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1010dcd0:	defffa04 	addi	sp,sp,-24
1010dcd4:	dfc00515 	stw	ra,20(sp)
1010dcd8:	df000415 	stw	fp,16(sp)
1010dcdc:	df000404 	addi	fp,sp,16
1010dce0:	e13ffd15 	stw	r4,-12(fp)
1010dce4:	e17ffe15 	stw	r5,-8(fp)
1010dce8:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010dcec:	e0bffd17 	ldw	r2,-12(fp)
1010dcf0:	00c00044 	movi	r3,1
1010dcf4:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1010dcf8:	e0bffd17 	ldw	r2,-12(fp)
1010dcfc:	10800017 	ldw	r2,0(r2)
1010dd00:	10800104 	addi	r2,r2,4
1010dd04:	1007883a 	mov	r3,r2
1010dd08:	e0bffd17 	ldw	r2,-12(fp)
1010dd0c:	10800817 	ldw	r2,32(r2)
1010dd10:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1010dd14:	e0bffe17 	ldw	r2,-8(fp)
1010dd18:	e0ffff17 	ldw	r3,-4(fp)
1010dd1c:	d8000015 	stw	zero,0(sp)
1010dd20:	e1fffd17 	ldw	r7,-12(fp)
1010dd24:	01840474 	movhi	r6,4113
1010dd28:	31b76404 	addi	r6,r6,-8816
1010dd2c:	180b883a 	mov	r5,r3
1010dd30:	1009883a 	mov	r4,r2
1010dd34:	010e91c0 	call	1010e91c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1010dd38:	e0bffd17 	ldw	r2,-12(fp)
1010dd3c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1010dd40:	e0bffd17 	ldw	r2,-12(fp)
1010dd44:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1010dd48:	d0e6da17 	ldw	r3,-25752(gp)
1010dd4c:	e1fffd17 	ldw	r7,-12(fp)
1010dd50:	01840474 	movhi	r6,4113
1010dd54:	31b7e704 	addi	r6,r6,-8292
1010dd58:	180b883a 	mov	r5,r3
1010dd5c:	1009883a 	mov	r4,r2
1010dd60:	010e5d40 	call	1010e5d4 <alt_alarm_start>
1010dd64:	1000040e 	bge	r2,zero,1010dd78 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1010dd68:	e0fffd17 	ldw	r3,-12(fp)
1010dd6c:	00a00034 	movhi	r2,32768
1010dd70:	10bfffc4 	addi	r2,r2,-1
1010dd74:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1010dd78:	0001883a 	nop
1010dd7c:	e037883a 	mov	sp,fp
1010dd80:	dfc00117 	ldw	ra,4(sp)
1010dd84:	df000017 	ldw	fp,0(sp)
1010dd88:	dec00204 	addi	sp,sp,8
1010dd8c:	f800283a 	ret

1010dd90 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1010dd90:	defff804 	addi	sp,sp,-32
1010dd94:	df000715 	stw	fp,28(sp)
1010dd98:	df000704 	addi	fp,sp,28
1010dd9c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1010dda0:	e0bfff17 	ldw	r2,-4(fp)
1010dda4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1010dda8:	e0bffb17 	ldw	r2,-20(fp)
1010ddac:	10800017 	ldw	r2,0(r2)
1010ddb0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010ddb4:	e0bffc17 	ldw	r2,-16(fp)
1010ddb8:	10800104 	addi	r2,r2,4
1010ddbc:	10800037 	ldwio	r2,0(r2)
1010ddc0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1010ddc4:	e0bffd17 	ldw	r2,-12(fp)
1010ddc8:	1080c00c 	andi	r2,r2,768
1010ddcc:	10006d26 	beq	r2,zero,1010df84 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1010ddd0:	e0bffd17 	ldw	r2,-12(fp)
1010ddd4:	1080400c 	andi	r2,r2,256
1010ddd8:	10003526 	beq	r2,zero,1010deb0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1010dddc:	00800074 	movhi	r2,1
1010dde0:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010dde4:	e0bffb17 	ldw	r2,-20(fp)
1010dde8:	10800a17 	ldw	r2,40(r2)
1010ddec:	10800044 	addi	r2,r2,1
1010ddf0:	1081ffcc 	andi	r2,r2,2047
1010ddf4:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1010ddf8:	e0bffb17 	ldw	r2,-20(fp)
1010ddfc:	10c00b17 	ldw	r3,44(r2)
1010de00:	e0bffe17 	ldw	r2,-8(fp)
1010de04:	18801526 	beq	r3,r2,1010de5c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1010de08:	e0bffc17 	ldw	r2,-16(fp)
1010de0c:	10800037 	ldwio	r2,0(r2)
1010de10:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1010de14:	e0bff917 	ldw	r2,-28(fp)
1010de18:	10a0000c 	andi	r2,r2,32768
1010de1c:	10001126 	beq	r2,zero,1010de64 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1010de20:	e0bffb17 	ldw	r2,-20(fp)
1010de24:	10800a17 	ldw	r2,40(r2)
1010de28:	e0fff917 	ldw	r3,-28(fp)
1010de2c:	1809883a 	mov	r4,r3
1010de30:	e0fffb17 	ldw	r3,-20(fp)
1010de34:	1885883a 	add	r2,r3,r2
1010de38:	10800e04 	addi	r2,r2,56
1010de3c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010de40:	e0bffb17 	ldw	r2,-20(fp)
1010de44:	10800a17 	ldw	r2,40(r2)
1010de48:	10800044 	addi	r2,r2,1
1010de4c:	10c1ffcc 	andi	r3,r2,2047
1010de50:	e0bffb17 	ldw	r2,-20(fp)
1010de54:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1010de58:	003fe206 	br	1010dde4 <__alt_data_end+0xfffedde4>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1010de5c:	0001883a 	nop
1010de60:	00000106 	br	1010de68 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1010de64:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1010de68:	e0bff917 	ldw	r2,-28(fp)
1010de6c:	10bfffec 	andhi	r2,r2,65535
1010de70:	10000f26 	beq	r2,zero,1010deb0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010de74:	e0bffb17 	ldw	r2,-20(fp)
1010de78:	10c00817 	ldw	r3,32(r2)
1010de7c:	00bfff84 	movi	r2,-2
1010de80:	1886703a 	and	r3,r3,r2
1010de84:	e0bffb17 	ldw	r2,-20(fp)
1010de88:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1010de8c:	e0bffc17 	ldw	r2,-16(fp)
1010de90:	10800104 	addi	r2,r2,4
1010de94:	1007883a 	mov	r3,r2
1010de98:	e0bffb17 	ldw	r2,-20(fp)
1010de9c:	10800817 	ldw	r2,32(r2)
1010dea0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010dea4:	e0bffc17 	ldw	r2,-16(fp)
1010dea8:	10800104 	addi	r2,r2,4
1010deac:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1010deb0:	e0bffd17 	ldw	r2,-12(fp)
1010deb4:	1080800c 	andi	r2,r2,512
1010deb8:	103fbe26 	beq	r2,zero,1010ddb4 <__alt_data_end+0xfffeddb4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1010debc:	e0bffd17 	ldw	r2,-12(fp)
1010dec0:	1004d43a 	srli	r2,r2,16
1010dec4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1010dec8:	00001406 	br	1010df1c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1010decc:	e0bffc17 	ldw	r2,-16(fp)
1010ded0:	e0fffb17 	ldw	r3,-20(fp)
1010ded4:	18c00d17 	ldw	r3,52(r3)
1010ded8:	e13ffb17 	ldw	r4,-20(fp)
1010dedc:	20c7883a 	add	r3,r4,r3
1010dee0:	18c20e04 	addi	r3,r3,2104
1010dee4:	18c00003 	ldbu	r3,0(r3)
1010dee8:	18c03fcc 	andi	r3,r3,255
1010deec:	18c0201c 	xori	r3,r3,128
1010def0:	18ffe004 	addi	r3,r3,-128
1010def4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010def8:	e0bffb17 	ldw	r2,-20(fp)
1010defc:	10800d17 	ldw	r2,52(r2)
1010df00:	10800044 	addi	r2,r2,1
1010df04:	10c1ffcc 	andi	r3,r2,2047
1010df08:	e0bffb17 	ldw	r2,-20(fp)
1010df0c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1010df10:	e0bffa17 	ldw	r2,-24(fp)
1010df14:	10bfffc4 	addi	r2,r2,-1
1010df18:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1010df1c:	e0bffa17 	ldw	r2,-24(fp)
1010df20:	10000526 	beq	r2,zero,1010df38 <altera_avalon_jtag_uart_irq+0x1a8>
1010df24:	e0bffb17 	ldw	r2,-20(fp)
1010df28:	10c00d17 	ldw	r3,52(r2)
1010df2c:	e0bffb17 	ldw	r2,-20(fp)
1010df30:	10800c17 	ldw	r2,48(r2)
1010df34:	18bfe51e 	bne	r3,r2,1010decc <__alt_data_end+0xfffedecc>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1010df38:	e0bffa17 	ldw	r2,-24(fp)
1010df3c:	103f9d26 	beq	r2,zero,1010ddb4 <__alt_data_end+0xfffeddb4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010df40:	e0bffb17 	ldw	r2,-20(fp)
1010df44:	10c00817 	ldw	r3,32(r2)
1010df48:	00bfff44 	movi	r2,-3
1010df4c:	1886703a 	and	r3,r3,r2
1010df50:	e0bffb17 	ldw	r2,-20(fp)
1010df54:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010df58:	e0bffb17 	ldw	r2,-20(fp)
1010df5c:	10800017 	ldw	r2,0(r2)
1010df60:	10800104 	addi	r2,r2,4
1010df64:	1007883a 	mov	r3,r2
1010df68:	e0bffb17 	ldw	r2,-20(fp)
1010df6c:	10800817 	ldw	r2,32(r2)
1010df70:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010df74:	e0bffc17 	ldw	r2,-16(fp)
1010df78:	10800104 	addi	r2,r2,4
1010df7c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1010df80:	003f8c06 	br	1010ddb4 <__alt_data_end+0xfffeddb4>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1010df84:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1010df88:	0001883a 	nop
1010df8c:	e037883a 	mov	sp,fp
1010df90:	df000017 	ldw	fp,0(sp)
1010df94:	dec00104 	addi	sp,sp,4
1010df98:	f800283a 	ret

1010df9c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1010df9c:	defff804 	addi	sp,sp,-32
1010dfa0:	df000715 	stw	fp,28(sp)
1010dfa4:	df000704 	addi	fp,sp,28
1010dfa8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1010dfac:	e0bffb17 	ldw	r2,-20(fp)
1010dfb0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1010dfb4:	e0bff917 	ldw	r2,-28(fp)
1010dfb8:	10800017 	ldw	r2,0(r2)
1010dfbc:	10800104 	addi	r2,r2,4
1010dfc0:	10800037 	ldwio	r2,0(r2)
1010dfc4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1010dfc8:	e0bffa17 	ldw	r2,-24(fp)
1010dfcc:	1081000c 	andi	r2,r2,1024
1010dfd0:	10000b26 	beq	r2,zero,1010e000 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1010dfd4:	e0bff917 	ldw	r2,-28(fp)
1010dfd8:	10800017 	ldw	r2,0(r2)
1010dfdc:	10800104 	addi	r2,r2,4
1010dfe0:	1007883a 	mov	r3,r2
1010dfe4:	e0bff917 	ldw	r2,-28(fp)
1010dfe8:	10800817 	ldw	r2,32(r2)
1010dfec:	10810014 	ori	r2,r2,1024
1010dff0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1010dff4:	e0bff917 	ldw	r2,-28(fp)
1010dff8:	10000915 	stw	zero,36(r2)
1010dffc:	00000a06 	br	1010e028 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1010e000:	e0bff917 	ldw	r2,-28(fp)
1010e004:	10c00917 	ldw	r3,36(r2)
1010e008:	00a00034 	movhi	r2,32768
1010e00c:	10bfff04 	addi	r2,r2,-4
1010e010:	10c00536 	bltu	r2,r3,1010e028 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1010e014:	e0bff917 	ldw	r2,-28(fp)
1010e018:	10800917 	ldw	r2,36(r2)
1010e01c:	10c00044 	addi	r3,r2,1
1010e020:	e0bff917 	ldw	r2,-28(fp)
1010e024:	10c00915 	stw	r3,36(r2)
1010e028:	d0a6da17 	ldw	r2,-25752(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1010e02c:	e037883a 	mov	sp,fp
1010e030:	df000017 	ldw	fp,0(sp)
1010e034:	dec00104 	addi	sp,sp,4
1010e038:	f800283a 	ret

1010e03c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1010e03c:	defffd04 	addi	sp,sp,-12
1010e040:	df000215 	stw	fp,8(sp)
1010e044:	df000204 	addi	fp,sp,8
1010e048:	e13ffe15 	stw	r4,-8(fp)
1010e04c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010e050:	00000506 	br	1010e068 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1010e054:	e0bfff17 	ldw	r2,-4(fp)
1010e058:	1090000c 	andi	r2,r2,16384
1010e05c:	10000226 	beq	r2,zero,1010e068 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1010e060:	00bffd44 	movi	r2,-11
1010e064:	00000b06 	br	1010e094 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010e068:	e0bffe17 	ldw	r2,-8(fp)
1010e06c:	10c00d17 	ldw	r3,52(r2)
1010e070:	e0bffe17 	ldw	r2,-8(fp)
1010e074:	10800c17 	ldw	r2,48(r2)
1010e078:	18800526 	beq	r3,r2,1010e090 <altera_avalon_jtag_uart_close+0x54>
1010e07c:	e0bffe17 	ldw	r2,-8(fp)
1010e080:	10c00917 	ldw	r3,36(r2)
1010e084:	e0bffe17 	ldw	r2,-8(fp)
1010e088:	10800117 	ldw	r2,4(r2)
1010e08c:	18bff136 	bltu	r3,r2,1010e054 <__alt_data_end+0xfffee054>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1010e090:	0005883a 	mov	r2,zero
}
1010e094:	e037883a 	mov	sp,fp
1010e098:	df000017 	ldw	fp,0(sp)
1010e09c:	dec00104 	addi	sp,sp,4
1010e0a0:	f800283a 	ret

1010e0a4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1010e0a4:	defffa04 	addi	sp,sp,-24
1010e0a8:	df000515 	stw	fp,20(sp)
1010e0ac:	df000504 	addi	fp,sp,20
1010e0b0:	e13ffd15 	stw	r4,-12(fp)
1010e0b4:	e17ffe15 	stw	r5,-8(fp)
1010e0b8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1010e0bc:	00bff9c4 	movi	r2,-25
1010e0c0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1010e0c4:	e0bffe17 	ldw	r2,-8(fp)
1010e0c8:	10da8060 	cmpeqi	r3,r2,27137
1010e0cc:	1800031e 	bne	r3,zero,1010e0dc <altera_avalon_jtag_uart_ioctl+0x38>
1010e0d0:	109a80a0 	cmpeqi	r2,r2,27138
1010e0d4:	1000181e 	bne	r2,zero,1010e138 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1010e0d8:	00002906 	br	1010e180 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1010e0dc:	e0bffd17 	ldw	r2,-12(fp)
1010e0e0:	10c00117 	ldw	r3,4(r2)
1010e0e4:	00a00034 	movhi	r2,32768
1010e0e8:	10bfffc4 	addi	r2,r2,-1
1010e0ec:	18802126 	beq	r3,r2,1010e174 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1010e0f0:	e0bfff17 	ldw	r2,-4(fp)
1010e0f4:	10800017 	ldw	r2,0(r2)
1010e0f8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1010e0fc:	e0bffc17 	ldw	r2,-16(fp)
1010e100:	10800090 	cmplti	r2,r2,2
1010e104:	1000061e 	bne	r2,zero,1010e120 <altera_avalon_jtag_uart_ioctl+0x7c>
1010e108:	e0fffc17 	ldw	r3,-16(fp)
1010e10c:	00a00034 	movhi	r2,32768
1010e110:	10bfffc4 	addi	r2,r2,-1
1010e114:	18800226 	beq	r3,r2,1010e120 <altera_avalon_jtag_uart_ioctl+0x7c>
1010e118:	e0bffc17 	ldw	r2,-16(fp)
1010e11c:	00000206 	br	1010e128 <altera_avalon_jtag_uart_ioctl+0x84>
1010e120:	00a00034 	movhi	r2,32768
1010e124:	10bfff84 	addi	r2,r2,-2
1010e128:	e0fffd17 	ldw	r3,-12(fp)
1010e12c:	18800115 	stw	r2,4(r3)
      rc = 0;
1010e130:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010e134:	00000f06 	br	1010e174 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1010e138:	e0bffd17 	ldw	r2,-12(fp)
1010e13c:	10c00117 	ldw	r3,4(r2)
1010e140:	00a00034 	movhi	r2,32768
1010e144:	10bfffc4 	addi	r2,r2,-1
1010e148:	18800c26 	beq	r3,r2,1010e17c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1010e14c:	e0bffd17 	ldw	r2,-12(fp)
1010e150:	10c00917 	ldw	r3,36(r2)
1010e154:	e0bffd17 	ldw	r2,-12(fp)
1010e158:	10800117 	ldw	r2,4(r2)
1010e15c:	1885803a 	cmpltu	r2,r3,r2
1010e160:	10c03fcc 	andi	r3,r2,255
1010e164:	e0bfff17 	ldw	r2,-4(fp)
1010e168:	10c00015 	stw	r3,0(r2)
      rc = 0;
1010e16c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010e170:	00000206 	br	1010e17c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1010e174:	0001883a 	nop
1010e178:	00000106 	br	1010e180 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1010e17c:	0001883a 	nop

  default:
    break;
  }

  return rc;
1010e180:	e0bffb17 	ldw	r2,-20(fp)
}
1010e184:	e037883a 	mov	sp,fp
1010e188:	df000017 	ldw	fp,0(sp)
1010e18c:	dec00104 	addi	sp,sp,4
1010e190:	f800283a 	ret

1010e194 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1010e194:	defff304 	addi	sp,sp,-52
1010e198:	dfc00c15 	stw	ra,48(sp)
1010e19c:	df000b15 	stw	fp,44(sp)
1010e1a0:	df000b04 	addi	fp,sp,44
1010e1a4:	e13ffc15 	stw	r4,-16(fp)
1010e1a8:	e17ffd15 	stw	r5,-12(fp)
1010e1ac:	e1bffe15 	stw	r6,-8(fp)
1010e1b0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1010e1b4:	e0bffd17 	ldw	r2,-12(fp)
1010e1b8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010e1bc:	00004706 	br	1010e2dc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1010e1c0:	e0bffc17 	ldw	r2,-16(fp)
1010e1c4:	10800a17 	ldw	r2,40(r2)
1010e1c8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1010e1cc:	e0bffc17 	ldw	r2,-16(fp)
1010e1d0:	10800b17 	ldw	r2,44(r2)
1010e1d4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1010e1d8:	e0fff717 	ldw	r3,-36(fp)
1010e1dc:	e0bff817 	ldw	r2,-32(fp)
1010e1e0:	18800536 	bltu	r3,r2,1010e1f8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1010e1e4:	e0fff717 	ldw	r3,-36(fp)
1010e1e8:	e0bff817 	ldw	r2,-32(fp)
1010e1ec:	1885c83a 	sub	r2,r3,r2
1010e1f0:	e0bff615 	stw	r2,-40(fp)
1010e1f4:	00000406 	br	1010e208 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1010e1f8:	00c20004 	movi	r3,2048
1010e1fc:	e0bff817 	ldw	r2,-32(fp)
1010e200:	1885c83a 	sub	r2,r3,r2
1010e204:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010e208:	e0bff617 	ldw	r2,-40(fp)
1010e20c:	10001e26 	beq	r2,zero,1010e288 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1010e210:	e0fffe17 	ldw	r3,-8(fp)
1010e214:	e0bff617 	ldw	r2,-40(fp)
1010e218:	1880022e 	bgeu	r3,r2,1010e224 <altera_avalon_jtag_uart_read+0x90>
        n = space;
1010e21c:	e0bffe17 	ldw	r2,-8(fp)
1010e220:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1010e224:	e0bffc17 	ldw	r2,-16(fp)
1010e228:	10c00e04 	addi	r3,r2,56
1010e22c:	e0bff817 	ldw	r2,-32(fp)
1010e230:	1885883a 	add	r2,r3,r2
1010e234:	e1bff617 	ldw	r6,-40(fp)
1010e238:	100b883a 	mov	r5,r2
1010e23c:	e13ff517 	ldw	r4,-44(fp)
1010e240:	01059080 	call	10105908 <memcpy>
      ptr   += n;
1010e244:	e0fff517 	ldw	r3,-44(fp)
1010e248:	e0bff617 	ldw	r2,-40(fp)
1010e24c:	1885883a 	add	r2,r3,r2
1010e250:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1010e254:	e0fffe17 	ldw	r3,-8(fp)
1010e258:	e0bff617 	ldw	r2,-40(fp)
1010e25c:	1885c83a 	sub	r2,r3,r2
1010e260:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e264:	e0fff817 	ldw	r3,-32(fp)
1010e268:	e0bff617 	ldw	r2,-40(fp)
1010e26c:	1885883a 	add	r2,r3,r2
1010e270:	10c1ffcc 	andi	r3,r2,2047
1010e274:	e0bffc17 	ldw	r2,-16(fp)
1010e278:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1010e27c:	e0bffe17 	ldw	r2,-8(fp)
1010e280:	00bfcf16 	blt	zero,r2,1010e1c0 <__alt_data_end+0xfffee1c0>
1010e284:	00000106 	br	1010e28c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1010e288:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1010e28c:	e0fff517 	ldw	r3,-44(fp)
1010e290:	e0bffd17 	ldw	r2,-12(fp)
1010e294:	1880141e 	bne	r3,r2,1010e2e8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1010e298:	e0bfff17 	ldw	r2,-4(fp)
1010e29c:	1090000c 	andi	r2,r2,16384
1010e2a0:	1000131e 	bne	r2,zero,1010e2f0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1010e2a4:	0001883a 	nop
1010e2a8:	e0bffc17 	ldw	r2,-16(fp)
1010e2ac:	10c00a17 	ldw	r3,40(r2)
1010e2b0:	e0bff717 	ldw	r2,-36(fp)
1010e2b4:	1880051e 	bne	r3,r2,1010e2cc <altera_avalon_jtag_uart_read+0x138>
1010e2b8:	e0bffc17 	ldw	r2,-16(fp)
1010e2bc:	10c00917 	ldw	r3,36(r2)
1010e2c0:	e0bffc17 	ldw	r2,-16(fp)
1010e2c4:	10800117 	ldw	r2,4(r2)
1010e2c8:	18bff736 	bltu	r3,r2,1010e2a8 <__alt_data_end+0xfffee2a8>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1010e2cc:	e0bffc17 	ldw	r2,-16(fp)
1010e2d0:	10c00a17 	ldw	r3,40(r2)
1010e2d4:	e0bff717 	ldw	r2,-36(fp)
1010e2d8:	18800726 	beq	r3,r2,1010e2f8 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010e2dc:	e0bffe17 	ldw	r2,-8(fp)
1010e2e0:	00bfb716 	blt	zero,r2,1010e1c0 <__alt_data_end+0xfffee1c0>
1010e2e4:	00000506 	br	1010e2fc <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1010e2e8:	0001883a 	nop
1010e2ec:	00000306 	br	1010e2fc <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1010e2f0:	0001883a 	nop
1010e2f4:	00000106 	br	1010e2fc <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1010e2f8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1010e2fc:	e0fff517 	ldw	r3,-44(fp)
1010e300:	e0bffd17 	ldw	r2,-12(fp)
1010e304:	18801826 	beq	r3,r2,1010e368 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e308:	0005303a 	rdctl	r2,status
1010e30c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e310:	e0fffb17 	ldw	r3,-20(fp)
1010e314:	00bfff84 	movi	r2,-2
1010e318:	1884703a 	and	r2,r3,r2
1010e31c:	1001703a 	wrctl	status,r2
  
  return context;
1010e320:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1010e324:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e328:	e0bffc17 	ldw	r2,-16(fp)
1010e32c:	10800817 	ldw	r2,32(r2)
1010e330:	10c00054 	ori	r3,r2,1
1010e334:	e0bffc17 	ldw	r2,-16(fp)
1010e338:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e33c:	e0bffc17 	ldw	r2,-16(fp)
1010e340:	10800017 	ldw	r2,0(r2)
1010e344:	10800104 	addi	r2,r2,4
1010e348:	1007883a 	mov	r3,r2
1010e34c:	e0bffc17 	ldw	r2,-16(fp)
1010e350:	10800817 	ldw	r2,32(r2)
1010e354:	18800035 	stwio	r2,0(r3)
1010e358:	e0bffa17 	ldw	r2,-24(fp)
1010e35c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e360:	e0bff917 	ldw	r2,-28(fp)
1010e364:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1010e368:	e0fff517 	ldw	r3,-44(fp)
1010e36c:	e0bffd17 	ldw	r2,-12(fp)
1010e370:	18800426 	beq	r3,r2,1010e384 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1010e374:	e0fff517 	ldw	r3,-44(fp)
1010e378:	e0bffd17 	ldw	r2,-12(fp)
1010e37c:	1885c83a 	sub	r2,r3,r2
1010e380:	00000606 	br	1010e39c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1010e384:	e0bfff17 	ldw	r2,-4(fp)
1010e388:	1090000c 	andi	r2,r2,16384
1010e38c:	10000226 	beq	r2,zero,1010e398 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1010e390:	00bffd44 	movi	r2,-11
1010e394:	00000106 	br	1010e39c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1010e398:	00bffec4 	movi	r2,-5
}
1010e39c:	e037883a 	mov	sp,fp
1010e3a0:	dfc00117 	ldw	ra,4(sp)
1010e3a4:	df000017 	ldw	fp,0(sp)
1010e3a8:	dec00204 	addi	sp,sp,8
1010e3ac:	f800283a 	ret

1010e3b0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1010e3b0:	defff304 	addi	sp,sp,-52
1010e3b4:	dfc00c15 	stw	ra,48(sp)
1010e3b8:	df000b15 	stw	fp,44(sp)
1010e3bc:	df000b04 	addi	fp,sp,44
1010e3c0:	e13ffc15 	stw	r4,-16(fp)
1010e3c4:	e17ffd15 	stw	r5,-12(fp)
1010e3c8:	e1bffe15 	stw	r6,-8(fp)
1010e3cc:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1010e3d0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1010e3d4:	e0bffd17 	ldw	r2,-12(fp)
1010e3d8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010e3dc:	00003706 	br	1010e4bc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1010e3e0:	e0bffc17 	ldw	r2,-16(fp)
1010e3e4:	10800c17 	ldw	r2,48(r2)
1010e3e8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1010e3ec:	e0bffc17 	ldw	r2,-16(fp)
1010e3f0:	10800d17 	ldw	r2,52(r2)
1010e3f4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1010e3f8:	e0fff917 	ldw	r3,-28(fp)
1010e3fc:	e0bff517 	ldw	r2,-44(fp)
1010e400:	1880062e 	bgeu	r3,r2,1010e41c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1010e404:	e0fff517 	ldw	r3,-44(fp)
1010e408:	e0bff917 	ldw	r2,-28(fp)
1010e40c:	1885c83a 	sub	r2,r3,r2
1010e410:	10bfffc4 	addi	r2,r2,-1
1010e414:	e0bff615 	stw	r2,-40(fp)
1010e418:	00000b06 	br	1010e448 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1010e41c:	e0bff517 	ldw	r2,-44(fp)
1010e420:	10000526 	beq	r2,zero,1010e438 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1010e424:	00c20004 	movi	r3,2048
1010e428:	e0bff917 	ldw	r2,-28(fp)
1010e42c:	1885c83a 	sub	r2,r3,r2
1010e430:	e0bff615 	stw	r2,-40(fp)
1010e434:	00000406 	br	1010e448 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1010e438:	00c1ffc4 	movi	r3,2047
1010e43c:	e0bff917 	ldw	r2,-28(fp)
1010e440:	1885c83a 	sub	r2,r3,r2
1010e444:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010e448:	e0bff617 	ldw	r2,-40(fp)
1010e44c:	10001e26 	beq	r2,zero,1010e4c8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1010e450:	e0fffe17 	ldw	r3,-8(fp)
1010e454:	e0bff617 	ldw	r2,-40(fp)
1010e458:	1880022e 	bgeu	r3,r2,1010e464 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1010e45c:	e0bffe17 	ldw	r2,-8(fp)
1010e460:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1010e464:	e0bffc17 	ldw	r2,-16(fp)
1010e468:	10c20e04 	addi	r3,r2,2104
1010e46c:	e0bff917 	ldw	r2,-28(fp)
1010e470:	1885883a 	add	r2,r3,r2
1010e474:	e1bff617 	ldw	r6,-40(fp)
1010e478:	e17ffd17 	ldw	r5,-12(fp)
1010e47c:	1009883a 	mov	r4,r2
1010e480:	01059080 	call	10105908 <memcpy>
      ptr   += n;
1010e484:	e0fffd17 	ldw	r3,-12(fp)
1010e488:	e0bff617 	ldw	r2,-40(fp)
1010e48c:	1885883a 	add	r2,r3,r2
1010e490:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1010e494:	e0fffe17 	ldw	r3,-8(fp)
1010e498:	e0bff617 	ldw	r2,-40(fp)
1010e49c:	1885c83a 	sub	r2,r3,r2
1010e4a0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e4a4:	e0fff917 	ldw	r3,-28(fp)
1010e4a8:	e0bff617 	ldw	r2,-40(fp)
1010e4ac:	1885883a 	add	r2,r3,r2
1010e4b0:	10c1ffcc 	andi	r3,r2,2047
1010e4b4:	e0bffc17 	ldw	r2,-16(fp)
1010e4b8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010e4bc:	e0bffe17 	ldw	r2,-8(fp)
1010e4c0:	00bfc716 	blt	zero,r2,1010e3e0 <__alt_data_end+0xfffee3e0>
1010e4c4:	00000106 	br	1010e4cc <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1010e4c8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e4cc:	0005303a 	rdctl	r2,status
1010e4d0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e4d4:	e0fffb17 	ldw	r3,-20(fp)
1010e4d8:	00bfff84 	movi	r2,-2
1010e4dc:	1884703a 	and	r2,r3,r2
1010e4e0:	1001703a 	wrctl	status,r2
  
  return context;
1010e4e4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1010e4e8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010e4ec:	e0bffc17 	ldw	r2,-16(fp)
1010e4f0:	10800817 	ldw	r2,32(r2)
1010e4f4:	10c00094 	ori	r3,r2,2
1010e4f8:	e0bffc17 	ldw	r2,-16(fp)
1010e4fc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e500:	e0bffc17 	ldw	r2,-16(fp)
1010e504:	10800017 	ldw	r2,0(r2)
1010e508:	10800104 	addi	r2,r2,4
1010e50c:	1007883a 	mov	r3,r2
1010e510:	e0bffc17 	ldw	r2,-16(fp)
1010e514:	10800817 	ldw	r2,32(r2)
1010e518:	18800035 	stwio	r2,0(r3)
1010e51c:	e0bffa17 	ldw	r2,-24(fp)
1010e520:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e524:	e0bff817 	ldw	r2,-32(fp)
1010e528:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1010e52c:	e0bffe17 	ldw	r2,-8(fp)
1010e530:	0080100e 	bge	zero,r2,1010e574 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1010e534:	e0bfff17 	ldw	r2,-4(fp)
1010e538:	1090000c 	andi	r2,r2,16384
1010e53c:	1000101e 	bne	r2,zero,1010e580 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1010e540:	0001883a 	nop
1010e544:	e0bffc17 	ldw	r2,-16(fp)
1010e548:	10c00d17 	ldw	r3,52(r2)
1010e54c:	e0bff517 	ldw	r2,-44(fp)
1010e550:	1880051e 	bne	r3,r2,1010e568 <altera_avalon_jtag_uart_write+0x1b8>
1010e554:	e0bffc17 	ldw	r2,-16(fp)
1010e558:	10c00917 	ldw	r3,36(r2)
1010e55c:	e0bffc17 	ldw	r2,-16(fp)
1010e560:	10800117 	ldw	r2,4(r2)
1010e564:	18bff736 	bltu	r3,r2,1010e544 <__alt_data_end+0xfffee544>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1010e568:	e0bffc17 	ldw	r2,-16(fp)
1010e56c:	10800917 	ldw	r2,36(r2)
1010e570:	1000051e 	bne	r2,zero,1010e588 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1010e574:	e0bffe17 	ldw	r2,-8(fp)
1010e578:	00bfd016 	blt	zero,r2,1010e4bc <__alt_data_end+0xfffee4bc>
1010e57c:	00000306 	br	1010e58c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1010e580:	0001883a 	nop
1010e584:	00000106 	br	1010e58c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1010e588:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1010e58c:	e0fffd17 	ldw	r3,-12(fp)
1010e590:	e0bff717 	ldw	r2,-36(fp)
1010e594:	18800426 	beq	r3,r2,1010e5a8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1010e598:	e0fffd17 	ldw	r3,-12(fp)
1010e59c:	e0bff717 	ldw	r2,-36(fp)
1010e5a0:	1885c83a 	sub	r2,r3,r2
1010e5a4:	00000606 	br	1010e5c0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1010e5a8:	e0bfff17 	ldw	r2,-4(fp)
1010e5ac:	1090000c 	andi	r2,r2,16384
1010e5b0:	10000226 	beq	r2,zero,1010e5bc <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1010e5b4:	00bffd44 	movi	r2,-11
1010e5b8:	00000106 	br	1010e5c0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1010e5bc:	00bffec4 	movi	r2,-5
}
1010e5c0:	e037883a 	mov	sp,fp
1010e5c4:	dfc00117 	ldw	ra,4(sp)
1010e5c8:	df000017 	ldw	fp,0(sp)
1010e5cc:	dec00204 	addi	sp,sp,8
1010e5d0:	f800283a 	ret

1010e5d4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1010e5d4:	defff504 	addi	sp,sp,-44
1010e5d8:	df000a15 	stw	fp,40(sp)
1010e5dc:	df000a04 	addi	fp,sp,40
1010e5e0:	e13ffc15 	stw	r4,-16(fp)
1010e5e4:	e17ffd15 	stw	r5,-12(fp)
1010e5e8:	e1bffe15 	stw	r6,-8(fp)
1010e5ec:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1010e5f0:	e03ff615 	stw	zero,-40(fp)
1010e5f4:	d0a6da17 	ldw	r2,-25752(gp)
  
  if (alt_ticks_per_second ())
1010e5f8:	10003c26 	beq	r2,zero,1010e6ec <alt_alarm_start+0x118>
  {
    if (alarm)
1010e5fc:	e0bffc17 	ldw	r2,-16(fp)
1010e600:	10003826 	beq	r2,zero,1010e6e4 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
1010e604:	e0bffc17 	ldw	r2,-16(fp)
1010e608:	e0fffe17 	ldw	r3,-8(fp)
1010e60c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1010e610:	e0bffc17 	ldw	r2,-16(fp)
1010e614:	e0ffff17 	ldw	r3,-4(fp)
1010e618:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e61c:	0005303a 	rdctl	r2,status
1010e620:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e624:	e0fff917 	ldw	r3,-28(fp)
1010e628:	00bfff84 	movi	r2,-2
1010e62c:	1884703a 	and	r2,r3,r2
1010e630:	1001703a 	wrctl	status,r2
  
  return context;
1010e634:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1010e638:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1010e63c:	d0a6db17 	ldw	r2,-25748(gp)
      
      current_nticks = alt_nticks();
1010e640:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1010e644:	e0fffd17 	ldw	r3,-12(fp)
1010e648:	e0bff617 	ldw	r2,-40(fp)
1010e64c:	1885883a 	add	r2,r3,r2
1010e650:	10c00044 	addi	r3,r2,1
1010e654:	e0bffc17 	ldw	r2,-16(fp)
1010e658:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1010e65c:	e0bffc17 	ldw	r2,-16(fp)
1010e660:	10c00217 	ldw	r3,8(r2)
1010e664:	e0bff617 	ldw	r2,-40(fp)
1010e668:	1880042e 	bgeu	r3,r2,1010e67c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
1010e66c:	e0bffc17 	ldw	r2,-16(fp)
1010e670:	00c00044 	movi	r3,1
1010e674:	10c00405 	stb	r3,16(r2)
1010e678:	00000206 	br	1010e684 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
1010e67c:	e0bffc17 	ldw	r2,-16(fp)
1010e680:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1010e684:	e0bffc17 	ldw	r2,-16(fp)
1010e688:	d0e01004 	addi	r3,gp,-32704
1010e68c:	e0fffa15 	stw	r3,-24(fp)
1010e690:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010e694:	e0bffb17 	ldw	r2,-20(fp)
1010e698:	e0fffa17 	ldw	r3,-24(fp)
1010e69c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010e6a0:	e0bffa17 	ldw	r2,-24(fp)
1010e6a4:	10c00017 	ldw	r3,0(r2)
1010e6a8:	e0bffb17 	ldw	r2,-20(fp)
1010e6ac:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010e6b0:	e0bffa17 	ldw	r2,-24(fp)
1010e6b4:	10800017 	ldw	r2,0(r2)
1010e6b8:	e0fffb17 	ldw	r3,-20(fp)
1010e6bc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010e6c0:	e0bffa17 	ldw	r2,-24(fp)
1010e6c4:	e0fffb17 	ldw	r3,-20(fp)
1010e6c8:	10c00015 	stw	r3,0(r2)
1010e6cc:	e0bff817 	ldw	r2,-32(fp)
1010e6d0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e6d4:	e0bff717 	ldw	r2,-36(fp)
1010e6d8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1010e6dc:	0005883a 	mov	r2,zero
1010e6e0:	00000306 	br	1010e6f0 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
1010e6e4:	00bffa84 	movi	r2,-22
1010e6e8:	00000106 	br	1010e6f0 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
1010e6ec:	00bfde84 	movi	r2,-134
  }
}
1010e6f0:	e037883a 	mov	sp,fp
1010e6f4:	df000017 	ldw	fp,0(sp)
1010e6f8:	dec00104 	addi	sp,sp,4
1010e6fc:	f800283a 	ret

1010e700 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1010e700:	defffe04 	addi	sp,sp,-8
1010e704:	df000115 	stw	fp,4(sp)
1010e708:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010e70c:	e03fff15 	stw	zero,-4(fp)
1010e710:	00000506 	br	1010e728 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
1010e714:	e0bfff17 	ldw	r2,-4(fp)
1010e718:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010e71c:	e0bfff17 	ldw	r2,-4(fp)
1010e720:	10800804 	addi	r2,r2,32
1010e724:	e0bfff15 	stw	r2,-4(fp)
1010e728:	e0bfff17 	ldw	r2,-4(fp)
1010e72c:	10820030 	cmpltui	r2,r2,2048
1010e730:	103ff81e 	bne	r2,zero,1010e714 <__alt_data_end+0xfffee714>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1010e734:	0001883a 	nop
1010e738:	e037883a 	mov	sp,fp
1010e73c:	df000017 	ldw	fp,0(sp)
1010e740:	dec00104 	addi	sp,sp,4
1010e744:	f800283a 	ret

1010e748 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e748:	defffe04 	addi	sp,sp,-8
1010e74c:	dfc00115 	stw	ra,4(sp)
1010e750:	df000015 	stw	fp,0(sp)
1010e754:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e758:	d0a00d17 	ldw	r2,-32716(gp)
1010e75c:	10000326 	beq	r2,zero,1010e76c <alt_get_errno+0x24>
1010e760:	d0a00d17 	ldw	r2,-32716(gp)
1010e764:	103ee83a 	callr	r2
1010e768:	00000106 	br	1010e770 <alt_get_errno+0x28>
1010e76c:	d0a6d504 	addi	r2,gp,-25772
}
1010e770:	e037883a 	mov	sp,fp
1010e774:	dfc00117 	ldw	ra,4(sp)
1010e778:	df000017 	ldw	fp,0(sp)
1010e77c:	dec00204 	addi	sp,sp,8
1010e780:	f800283a 	ret

1010e784 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1010e784:	defffa04 	addi	sp,sp,-24
1010e788:	dfc00515 	stw	ra,20(sp)
1010e78c:	df000415 	stw	fp,16(sp)
1010e790:	df000404 	addi	fp,sp,16
1010e794:	e13ffe15 	stw	r4,-8(fp)
1010e798:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1010e79c:	e0bffe17 	ldw	r2,-8(fp)
1010e7a0:	10000326 	beq	r2,zero,1010e7b0 <alt_dev_llist_insert+0x2c>
1010e7a4:	e0bffe17 	ldw	r2,-8(fp)
1010e7a8:	10800217 	ldw	r2,8(r2)
1010e7ac:	1000061e 	bne	r2,zero,1010e7c8 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1010e7b0:	010e7480 	call	1010e748 <alt_get_errno>
1010e7b4:	1007883a 	mov	r3,r2
1010e7b8:	00800584 	movi	r2,22
1010e7bc:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1010e7c0:	00bffa84 	movi	r2,-22
1010e7c4:	00001306 	br	1010e814 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1010e7c8:	e0bffe17 	ldw	r2,-8(fp)
1010e7cc:	e0ffff17 	ldw	r3,-4(fp)
1010e7d0:	e0fffc15 	stw	r3,-16(fp)
1010e7d4:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010e7d8:	e0bffd17 	ldw	r2,-12(fp)
1010e7dc:	e0fffc17 	ldw	r3,-16(fp)
1010e7e0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010e7e4:	e0bffc17 	ldw	r2,-16(fp)
1010e7e8:	10c00017 	ldw	r3,0(r2)
1010e7ec:	e0bffd17 	ldw	r2,-12(fp)
1010e7f0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010e7f4:	e0bffc17 	ldw	r2,-16(fp)
1010e7f8:	10800017 	ldw	r2,0(r2)
1010e7fc:	e0fffd17 	ldw	r3,-12(fp)
1010e800:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010e804:	e0bffc17 	ldw	r2,-16(fp)
1010e808:	e0fffd17 	ldw	r3,-12(fp)
1010e80c:	10c00015 	stw	r3,0(r2)

  return 0;  
1010e810:	0005883a 	mov	r2,zero
}
1010e814:	e037883a 	mov	sp,fp
1010e818:	dfc00117 	ldw	ra,4(sp)
1010e81c:	df000017 	ldw	fp,0(sp)
1010e820:	dec00204 	addi	sp,sp,8
1010e824:	f800283a 	ret

1010e828 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1010e828:	defffd04 	addi	sp,sp,-12
1010e82c:	dfc00215 	stw	ra,8(sp)
1010e830:	df000115 	stw	fp,4(sp)
1010e834:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010e838:	00840474 	movhi	r2,4113
1010e83c:	10bdf704 	addi	r2,r2,-2084
1010e840:	e0bfff15 	stw	r2,-4(fp)
1010e844:	00000606 	br	1010e860 <_do_ctors+0x38>
        (*ctor) (); 
1010e848:	e0bfff17 	ldw	r2,-4(fp)
1010e84c:	10800017 	ldw	r2,0(r2)
1010e850:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010e854:	e0bfff17 	ldw	r2,-4(fp)
1010e858:	10bfff04 	addi	r2,r2,-4
1010e85c:	e0bfff15 	stw	r2,-4(fp)
1010e860:	e0ffff17 	ldw	r3,-4(fp)
1010e864:	00840474 	movhi	r2,4113
1010e868:	10bdf804 	addi	r2,r2,-2080
1010e86c:	18bff62e 	bgeu	r3,r2,1010e848 <__alt_data_end+0xfffee848>
        (*ctor) (); 
}
1010e870:	0001883a 	nop
1010e874:	e037883a 	mov	sp,fp
1010e878:	dfc00117 	ldw	ra,4(sp)
1010e87c:	df000017 	ldw	fp,0(sp)
1010e880:	dec00204 	addi	sp,sp,8
1010e884:	f800283a 	ret

1010e888 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1010e888:	defffd04 	addi	sp,sp,-12
1010e88c:	dfc00215 	stw	ra,8(sp)
1010e890:	df000115 	stw	fp,4(sp)
1010e894:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010e898:	00840474 	movhi	r2,4113
1010e89c:	10bdf704 	addi	r2,r2,-2084
1010e8a0:	e0bfff15 	stw	r2,-4(fp)
1010e8a4:	00000606 	br	1010e8c0 <_do_dtors+0x38>
        (*dtor) (); 
1010e8a8:	e0bfff17 	ldw	r2,-4(fp)
1010e8ac:	10800017 	ldw	r2,0(r2)
1010e8b0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010e8b4:	e0bfff17 	ldw	r2,-4(fp)
1010e8b8:	10bfff04 	addi	r2,r2,-4
1010e8bc:	e0bfff15 	stw	r2,-4(fp)
1010e8c0:	e0ffff17 	ldw	r3,-4(fp)
1010e8c4:	00840474 	movhi	r2,4113
1010e8c8:	10bdf804 	addi	r2,r2,-2080
1010e8cc:	18bff62e 	bgeu	r3,r2,1010e8a8 <__alt_data_end+0xfffee8a8>
        (*dtor) (); 
}
1010e8d0:	0001883a 	nop
1010e8d4:	e037883a 	mov	sp,fp
1010e8d8:	dfc00117 	ldw	ra,4(sp)
1010e8dc:	df000017 	ldw	fp,0(sp)
1010e8e0:	dec00204 	addi	sp,sp,8
1010e8e4:	f800283a 	ret

1010e8e8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1010e8e8:	defffe04 	addi	sp,sp,-8
1010e8ec:	dfc00115 	stw	ra,4(sp)
1010e8f0:	df000015 	stw	fp,0(sp)
1010e8f4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
1010e8f8:	01440004 	movi	r5,4096
1010e8fc:	0009883a 	mov	r4,zero
1010e900:	010f3540 	call	1010f354 <alt_icache_flush>
#endif
}
1010e904:	0001883a 	nop
1010e908:	e037883a 	mov	sp,fp
1010e90c:	dfc00117 	ldw	ra,4(sp)
1010e910:	df000017 	ldw	fp,0(sp)
1010e914:	dec00204 	addi	sp,sp,8
1010e918:	f800283a 	ret

1010e91c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010e91c:	defff904 	addi	sp,sp,-28
1010e920:	dfc00615 	stw	ra,24(sp)
1010e924:	df000515 	stw	fp,20(sp)
1010e928:	df000504 	addi	fp,sp,20
1010e92c:	e13ffc15 	stw	r4,-16(fp)
1010e930:	e17ffd15 	stw	r5,-12(fp)
1010e934:	e1bffe15 	stw	r6,-8(fp)
1010e938:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1010e93c:	e0800217 	ldw	r2,8(fp)
1010e940:	d8800015 	stw	r2,0(sp)
1010e944:	e1ffff17 	ldw	r7,-4(fp)
1010e948:	e1bffe17 	ldw	r6,-8(fp)
1010e94c:	e17ffd17 	ldw	r5,-12(fp)
1010e950:	e13ffc17 	ldw	r4,-16(fp)
1010e954:	010eacc0 	call	1010eacc <alt_iic_isr_register>
}  
1010e958:	e037883a 	mov	sp,fp
1010e95c:	dfc00117 	ldw	ra,4(sp)
1010e960:	df000017 	ldw	fp,0(sp)
1010e964:	dec00204 	addi	sp,sp,8
1010e968:	f800283a 	ret

1010e96c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1010e96c:	defff904 	addi	sp,sp,-28
1010e970:	df000615 	stw	fp,24(sp)
1010e974:	df000604 	addi	fp,sp,24
1010e978:	e13ffe15 	stw	r4,-8(fp)
1010e97c:	e17fff15 	stw	r5,-4(fp)
1010e980:	e0bfff17 	ldw	r2,-4(fp)
1010e984:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e988:	0005303a 	rdctl	r2,status
1010e98c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e990:	e0fffb17 	ldw	r3,-20(fp)
1010e994:	00bfff84 	movi	r2,-2
1010e998:	1884703a 	and	r2,r3,r2
1010e99c:	1001703a 	wrctl	status,r2
  
  return context;
1010e9a0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010e9a4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1010e9a8:	00c00044 	movi	r3,1
1010e9ac:	e0bffa17 	ldw	r2,-24(fp)
1010e9b0:	1884983a 	sll	r2,r3,r2
1010e9b4:	1007883a 	mov	r3,r2
1010e9b8:	d0a6d917 	ldw	r2,-25756(gp)
1010e9bc:	1884b03a 	or	r2,r3,r2
1010e9c0:	d0a6d915 	stw	r2,-25756(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010e9c4:	d0a6d917 	ldw	r2,-25756(gp)
1010e9c8:	100170fa 	wrctl	ienable,r2
1010e9cc:	e0bffc17 	ldw	r2,-16(fp)
1010e9d0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e9d4:	e0bffd17 	ldw	r2,-12(fp)
1010e9d8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010e9dc:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1010e9e0:	0001883a 	nop
}
1010e9e4:	e037883a 	mov	sp,fp
1010e9e8:	df000017 	ldw	fp,0(sp)
1010e9ec:	dec00104 	addi	sp,sp,4
1010e9f0:	f800283a 	ret

1010e9f4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1010e9f4:	defff904 	addi	sp,sp,-28
1010e9f8:	df000615 	stw	fp,24(sp)
1010e9fc:	df000604 	addi	fp,sp,24
1010ea00:	e13ffe15 	stw	r4,-8(fp)
1010ea04:	e17fff15 	stw	r5,-4(fp)
1010ea08:	e0bfff17 	ldw	r2,-4(fp)
1010ea0c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010ea10:	0005303a 	rdctl	r2,status
1010ea14:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ea18:	e0fffb17 	ldw	r3,-20(fp)
1010ea1c:	00bfff84 	movi	r2,-2
1010ea20:	1884703a 	and	r2,r3,r2
1010ea24:	1001703a 	wrctl	status,r2
  
  return context;
1010ea28:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010ea2c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1010ea30:	00c00044 	movi	r3,1
1010ea34:	e0bffa17 	ldw	r2,-24(fp)
1010ea38:	1884983a 	sll	r2,r3,r2
1010ea3c:	0084303a 	nor	r2,zero,r2
1010ea40:	1007883a 	mov	r3,r2
1010ea44:	d0a6d917 	ldw	r2,-25756(gp)
1010ea48:	1884703a 	and	r2,r3,r2
1010ea4c:	d0a6d915 	stw	r2,-25756(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010ea50:	d0a6d917 	ldw	r2,-25756(gp)
1010ea54:	100170fa 	wrctl	ienable,r2
1010ea58:	e0bffc17 	ldw	r2,-16(fp)
1010ea5c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ea60:	e0bffd17 	ldw	r2,-12(fp)
1010ea64:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010ea68:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1010ea6c:	0001883a 	nop
}
1010ea70:	e037883a 	mov	sp,fp
1010ea74:	df000017 	ldw	fp,0(sp)
1010ea78:	dec00104 	addi	sp,sp,4
1010ea7c:	f800283a 	ret

1010ea80 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1010ea80:	defffc04 	addi	sp,sp,-16
1010ea84:	df000315 	stw	fp,12(sp)
1010ea88:	df000304 	addi	fp,sp,12
1010ea8c:	e13ffe15 	stw	r4,-8(fp)
1010ea90:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1010ea94:	000530fa 	rdctl	r2,ienable
1010ea98:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1010ea9c:	00c00044 	movi	r3,1
1010eaa0:	e0bfff17 	ldw	r2,-4(fp)
1010eaa4:	1884983a 	sll	r2,r3,r2
1010eaa8:	1007883a 	mov	r3,r2
1010eaac:	e0bffd17 	ldw	r2,-12(fp)
1010eab0:	1884703a 	and	r2,r3,r2
1010eab4:	1004c03a 	cmpne	r2,r2,zero
1010eab8:	10803fcc 	andi	r2,r2,255
}
1010eabc:	e037883a 	mov	sp,fp
1010eac0:	df000017 	ldw	fp,0(sp)
1010eac4:	dec00104 	addi	sp,sp,4
1010eac8:	f800283a 	ret

1010eacc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010eacc:	defff504 	addi	sp,sp,-44
1010ead0:	dfc00a15 	stw	ra,40(sp)
1010ead4:	df000915 	stw	fp,36(sp)
1010ead8:	df000904 	addi	fp,sp,36
1010eadc:	e13ffc15 	stw	r4,-16(fp)
1010eae0:	e17ffd15 	stw	r5,-12(fp)
1010eae4:	e1bffe15 	stw	r6,-8(fp)
1010eae8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1010eaec:	00bffa84 	movi	r2,-22
1010eaf0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1010eaf4:	e0bffd17 	ldw	r2,-12(fp)
1010eaf8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1010eafc:	e0bff817 	ldw	r2,-32(fp)
1010eb00:	10800808 	cmpgei	r2,r2,32
1010eb04:	1000271e 	bne	r2,zero,1010eba4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010eb08:	0005303a 	rdctl	r2,status
1010eb0c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010eb10:	e0fffb17 	ldw	r3,-20(fp)
1010eb14:	00bfff84 	movi	r2,-2
1010eb18:	1884703a 	and	r2,r3,r2
1010eb1c:	1001703a 	wrctl	status,r2
  
  return context;
1010eb20:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1010eb24:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1010eb28:	00840474 	movhi	r2,4113
1010eb2c:	108c6c04 	addi	r2,r2,12720
1010eb30:	e0fff817 	ldw	r3,-32(fp)
1010eb34:	180690fa 	slli	r3,r3,3
1010eb38:	10c5883a 	add	r2,r2,r3
1010eb3c:	e0fffe17 	ldw	r3,-8(fp)
1010eb40:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1010eb44:	00840474 	movhi	r2,4113
1010eb48:	108c6c04 	addi	r2,r2,12720
1010eb4c:	e0fff817 	ldw	r3,-32(fp)
1010eb50:	180690fa 	slli	r3,r3,3
1010eb54:	10c5883a 	add	r2,r2,r3
1010eb58:	10800104 	addi	r2,r2,4
1010eb5c:	e0ffff17 	ldw	r3,-4(fp)
1010eb60:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1010eb64:	e0bffe17 	ldw	r2,-8(fp)
1010eb68:	10000526 	beq	r2,zero,1010eb80 <alt_iic_isr_register+0xb4>
1010eb6c:	e0bff817 	ldw	r2,-32(fp)
1010eb70:	100b883a 	mov	r5,r2
1010eb74:	e13ffc17 	ldw	r4,-16(fp)
1010eb78:	010e96c0 	call	1010e96c <alt_ic_irq_enable>
1010eb7c:	00000406 	br	1010eb90 <alt_iic_isr_register+0xc4>
1010eb80:	e0bff817 	ldw	r2,-32(fp)
1010eb84:	100b883a 	mov	r5,r2
1010eb88:	e13ffc17 	ldw	r4,-16(fp)
1010eb8c:	010e9f40 	call	1010e9f4 <alt_ic_irq_disable>
1010eb90:	e0bff715 	stw	r2,-36(fp)
1010eb94:	e0bffa17 	ldw	r2,-24(fp)
1010eb98:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010eb9c:	e0bff917 	ldw	r2,-28(fp)
1010eba0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1010eba4:	e0bff717 	ldw	r2,-36(fp)
}
1010eba8:	e037883a 	mov	sp,fp
1010ebac:	dfc00117 	ldw	ra,4(sp)
1010ebb0:	df000017 	ldw	fp,0(sp)
1010ebb4:	dec00204 	addi	sp,sp,8
1010ebb8:	f800283a 	ret

1010ebbc <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1010ebbc:	defff904 	addi	sp,sp,-28
1010ebc0:	dfc00615 	stw	ra,24(sp)
1010ebc4:	df000515 	stw	fp,20(sp)
1010ebc8:	df000504 	addi	fp,sp,20
1010ebcc:	e13ffc15 	stw	r4,-16(fp)
1010ebd0:	e17ffd15 	stw	r5,-12(fp)
1010ebd4:	e1bffe15 	stw	r6,-8(fp)
1010ebd8:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
1010ebdc:	e1bfff17 	ldw	r6,-4(fp)
1010ebe0:	e17ffe17 	ldw	r5,-8(fp)
1010ebe4:	e13ffd17 	ldw	r4,-12(fp)
1010ebe8:	010edfc0 	call	1010edfc <open>
1010ebec:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
1010ebf0:	e0bffb17 	ldw	r2,-20(fp)
1010ebf4:	10001c16 	blt	r2,zero,1010ec68 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
1010ebf8:	00840474 	movhi	r2,4113
1010ebfc:	10810d04 	addi	r2,r2,1076
1010ec00:	e0fffb17 	ldw	r3,-20(fp)
1010ec04:	18c00324 	muli	r3,r3,12
1010ec08:	10c5883a 	add	r2,r2,r3
1010ec0c:	10c00017 	ldw	r3,0(r2)
1010ec10:	e0bffc17 	ldw	r2,-16(fp)
1010ec14:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1010ec18:	00840474 	movhi	r2,4113
1010ec1c:	10810d04 	addi	r2,r2,1076
1010ec20:	e0fffb17 	ldw	r3,-20(fp)
1010ec24:	18c00324 	muli	r3,r3,12
1010ec28:	10c5883a 	add	r2,r2,r3
1010ec2c:	10800104 	addi	r2,r2,4
1010ec30:	10c00017 	ldw	r3,0(r2)
1010ec34:	e0bffc17 	ldw	r2,-16(fp)
1010ec38:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1010ec3c:	00840474 	movhi	r2,4113
1010ec40:	10810d04 	addi	r2,r2,1076
1010ec44:	e0fffb17 	ldw	r3,-20(fp)
1010ec48:	18c00324 	muli	r3,r3,12
1010ec4c:	10c5883a 	add	r2,r2,r3
1010ec50:	10800204 	addi	r2,r2,8
1010ec54:	10c00017 	ldw	r3,0(r2)
1010ec58:	e0bffc17 	ldw	r2,-16(fp)
1010ec5c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1010ec60:	e13ffb17 	ldw	r4,-20(fp)
1010ec64:	010d8700 	call	1010d870 <alt_release_fd>
  }
} 
1010ec68:	0001883a 	nop
1010ec6c:	e037883a 	mov	sp,fp
1010ec70:	dfc00117 	ldw	ra,4(sp)
1010ec74:	df000017 	ldw	fp,0(sp)
1010ec78:	dec00204 	addi	sp,sp,8
1010ec7c:	f800283a 	ret

1010ec80 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1010ec80:	defffb04 	addi	sp,sp,-20
1010ec84:	dfc00415 	stw	ra,16(sp)
1010ec88:	df000315 	stw	fp,12(sp)
1010ec8c:	df000304 	addi	fp,sp,12
1010ec90:	e13ffd15 	stw	r4,-12(fp)
1010ec94:	e17ffe15 	stw	r5,-8(fp)
1010ec98:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1010ec9c:	01c07fc4 	movi	r7,511
1010eca0:	01800044 	movi	r6,1
1010eca4:	e17ffd17 	ldw	r5,-12(fp)
1010eca8:	01040474 	movhi	r4,4113
1010ecac:	21011004 	addi	r4,r4,1088
1010ecb0:	010ebbc0 	call	1010ebbc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1010ecb4:	01c07fc4 	movi	r7,511
1010ecb8:	000d883a 	mov	r6,zero
1010ecbc:	e17ffe17 	ldw	r5,-8(fp)
1010ecc0:	01040474 	movhi	r4,4113
1010ecc4:	21010d04 	addi	r4,r4,1076
1010ecc8:	010ebbc0 	call	1010ebbc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1010eccc:	01c07fc4 	movi	r7,511
1010ecd0:	01800044 	movi	r6,1
1010ecd4:	e17fff17 	ldw	r5,-4(fp)
1010ecd8:	01040474 	movhi	r4,4113
1010ecdc:	21011304 	addi	r4,r4,1100
1010ece0:	010ebbc0 	call	1010ebbc <alt_open_fd>
}  
1010ece4:	0001883a 	nop
1010ece8:	e037883a 	mov	sp,fp
1010ecec:	dfc00117 	ldw	ra,4(sp)
1010ecf0:	df000017 	ldw	fp,0(sp)
1010ecf4:	dec00204 	addi	sp,sp,8
1010ecf8:	f800283a 	ret

1010ecfc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010ecfc:	defffe04 	addi	sp,sp,-8
1010ed00:	dfc00115 	stw	ra,4(sp)
1010ed04:	df000015 	stw	fp,0(sp)
1010ed08:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010ed0c:	d0a00d17 	ldw	r2,-32716(gp)
1010ed10:	10000326 	beq	r2,zero,1010ed20 <alt_get_errno+0x24>
1010ed14:	d0a00d17 	ldw	r2,-32716(gp)
1010ed18:	103ee83a 	callr	r2
1010ed1c:	00000106 	br	1010ed24 <alt_get_errno+0x28>
1010ed20:	d0a6d504 	addi	r2,gp,-25772
}
1010ed24:	e037883a 	mov	sp,fp
1010ed28:	dfc00117 	ldw	ra,4(sp)
1010ed2c:	df000017 	ldw	fp,0(sp)
1010ed30:	dec00204 	addi	sp,sp,8
1010ed34:	f800283a 	ret

1010ed38 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1010ed38:	defffd04 	addi	sp,sp,-12
1010ed3c:	df000215 	stw	fp,8(sp)
1010ed40:	df000204 	addi	fp,sp,8
1010ed44:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1010ed48:	e0bfff17 	ldw	r2,-4(fp)
1010ed4c:	10800217 	ldw	r2,8(r2)
1010ed50:	10d00034 	orhi	r3,r2,16384
1010ed54:	e0bfff17 	ldw	r2,-4(fp)
1010ed58:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010ed5c:	e03ffe15 	stw	zero,-8(fp)
1010ed60:	00001d06 	br	1010edd8 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010ed64:	00840474 	movhi	r2,4113
1010ed68:	10810d04 	addi	r2,r2,1076
1010ed6c:	e0fffe17 	ldw	r3,-8(fp)
1010ed70:	18c00324 	muli	r3,r3,12
1010ed74:	10c5883a 	add	r2,r2,r3
1010ed78:	10c00017 	ldw	r3,0(r2)
1010ed7c:	e0bfff17 	ldw	r2,-4(fp)
1010ed80:	10800017 	ldw	r2,0(r2)
1010ed84:	1880111e 	bne	r3,r2,1010edcc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010ed88:	00840474 	movhi	r2,4113
1010ed8c:	10810d04 	addi	r2,r2,1076
1010ed90:	e0fffe17 	ldw	r3,-8(fp)
1010ed94:	18c00324 	muli	r3,r3,12
1010ed98:	10c5883a 	add	r2,r2,r3
1010ed9c:	10800204 	addi	r2,r2,8
1010eda0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010eda4:	1000090e 	bge	r2,zero,1010edcc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1010eda8:	e0bffe17 	ldw	r2,-8(fp)
1010edac:	10c00324 	muli	r3,r2,12
1010edb0:	00840474 	movhi	r2,4113
1010edb4:	10810d04 	addi	r2,r2,1076
1010edb8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010edbc:	e0bfff17 	ldw	r2,-4(fp)
1010edc0:	18800226 	beq	r3,r2,1010edcc <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1010edc4:	00bffcc4 	movi	r2,-13
1010edc8:	00000806 	br	1010edec <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010edcc:	e0bffe17 	ldw	r2,-8(fp)
1010edd0:	10800044 	addi	r2,r2,1
1010edd4:	e0bffe15 	stw	r2,-8(fp)
1010edd8:	d0a00c17 	ldw	r2,-32720(gp)
1010eddc:	1007883a 	mov	r3,r2
1010ede0:	e0bffe17 	ldw	r2,-8(fp)
1010ede4:	18bfdf2e 	bgeu	r3,r2,1010ed64 <__alt_data_end+0xfffeed64>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1010ede8:	0005883a 	mov	r2,zero
}
1010edec:	e037883a 	mov	sp,fp
1010edf0:	df000017 	ldw	fp,0(sp)
1010edf4:	dec00104 	addi	sp,sp,4
1010edf8:	f800283a 	ret

1010edfc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1010edfc:	defff604 	addi	sp,sp,-40
1010ee00:	dfc00915 	stw	ra,36(sp)
1010ee04:	df000815 	stw	fp,32(sp)
1010ee08:	df000804 	addi	fp,sp,32
1010ee0c:	e13ffd15 	stw	r4,-12(fp)
1010ee10:	e17ffe15 	stw	r5,-8(fp)
1010ee14:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1010ee18:	00bfffc4 	movi	r2,-1
1010ee1c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1010ee20:	00bffb44 	movi	r2,-19
1010ee24:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1010ee28:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1010ee2c:	d1600a04 	addi	r5,gp,-32728
1010ee30:	e13ffd17 	ldw	r4,-12(fp)
1010ee34:	010f1180 	call	1010f118 <alt_find_dev>
1010ee38:	e0bff815 	stw	r2,-32(fp)
1010ee3c:	e0bff817 	ldw	r2,-32(fp)
1010ee40:	1000051e 	bne	r2,zero,1010ee58 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1010ee44:	e13ffd17 	ldw	r4,-12(fp)
1010ee48:	010f1a80 	call	1010f1a8 <alt_find_file>
1010ee4c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1010ee50:	00800044 	movi	r2,1
1010ee54:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1010ee58:	e0bff817 	ldw	r2,-32(fp)
1010ee5c:	10002926 	beq	r2,zero,1010ef04 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
1010ee60:	e13ff817 	ldw	r4,-32(fp)
1010ee64:	010f2b00 	call	1010f2b0 <alt_get_fd>
1010ee68:	e0bff915 	stw	r2,-28(fp)
1010ee6c:	e0bff917 	ldw	r2,-28(fp)
1010ee70:	1000030e 	bge	r2,zero,1010ee80 <open+0x84>
    {
      status = index;
1010ee74:	e0bff917 	ldw	r2,-28(fp)
1010ee78:	e0bffa15 	stw	r2,-24(fp)
1010ee7c:	00002306 	br	1010ef0c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
1010ee80:	e0bff917 	ldw	r2,-28(fp)
1010ee84:	10c00324 	muli	r3,r2,12
1010ee88:	00840474 	movhi	r2,4113
1010ee8c:	10810d04 	addi	r2,r2,1076
1010ee90:	1885883a 	add	r2,r3,r2
1010ee94:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1010ee98:	e0fffe17 	ldw	r3,-8(fp)
1010ee9c:	00900034 	movhi	r2,16384
1010eea0:	10bfffc4 	addi	r2,r2,-1
1010eea4:	1886703a 	and	r3,r3,r2
1010eea8:	e0bffc17 	ldw	r2,-16(fp)
1010eeac:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1010eeb0:	e0bffb17 	ldw	r2,-20(fp)
1010eeb4:	1000051e 	bne	r2,zero,1010eecc <open+0xd0>
1010eeb8:	e13ffc17 	ldw	r4,-16(fp)
1010eebc:	010ed380 	call	1010ed38 <alt_file_locked>
1010eec0:	e0bffa15 	stw	r2,-24(fp)
1010eec4:	e0bffa17 	ldw	r2,-24(fp)
1010eec8:	10001016 	blt	r2,zero,1010ef0c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1010eecc:	e0bff817 	ldw	r2,-32(fp)
1010eed0:	10800317 	ldw	r2,12(r2)
1010eed4:	10000826 	beq	r2,zero,1010eef8 <open+0xfc>
1010eed8:	e0bff817 	ldw	r2,-32(fp)
1010eedc:	10800317 	ldw	r2,12(r2)
1010eee0:	e1ffff17 	ldw	r7,-4(fp)
1010eee4:	e1bffe17 	ldw	r6,-8(fp)
1010eee8:	e17ffd17 	ldw	r5,-12(fp)
1010eeec:	e13ffc17 	ldw	r4,-16(fp)
1010eef0:	103ee83a 	callr	r2
1010eef4:	00000106 	br	1010eefc <open+0x100>
1010eef8:	0005883a 	mov	r2,zero
1010eefc:	e0bffa15 	stw	r2,-24(fp)
1010ef00:	00000206 	br	1010ef0c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
1010ef04:	00bffb44 	movi	r2,-19
1010ef08:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1010ef0c:	e0bffa17 	ldw	r2,-24(fp)
1010ef10:	1000090e 	bge	r2,zero,1010ef38 <open+0x13c>
  {
    alt_release_fd (index);  
1010ef14:	e13ff917 	ldw	r4,-28(fp)
1010ef18:	010d8700 	call	1010d870 <alt_release_fd>
    ALT_ERRNO = -status;
1010ef1c:	010ecfc0 	call	1010ecfc <alt_get_errno>
1010ef20:	1007883a 	mov	r3,r2
1010ef24:	e0bffa17 	ldw	r2,-24(fp)
1010ef28:	0085c83a 	sub	r2,zero,r2
1010ef2c:	18800015 	stw	r2,0(r3)
    return -1;
1010ef30:	00bfffc4 	movi	r2,-1
1010ef34:	00000106 	br	1010ef3c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
1010ef38:	e0bff917 	ldw	r2,-28(fp)
}
1010ef3c:	e037883a 	mov	sp,fp
1010ef40:	dfc00117 	ldw	ra,4(sp)
1010ef44:	df000017 	ldw	fp,0(sp)
1010ef48:	dec00204 	addi	sp,sp,8
1010ef4c:	f800283a 	ret

1010ef50 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1010ef50:	defffa04 	addi	sp,sp,-24
1010ef54:	df000515 	stw	fp,20(sp)
1010ef58:	df000504 	addi	fp,sp,20
1010ef5c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010ef60:	0005303a 	rdctl	r2,status
1010ef64:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ef68:	e0fffc17 	ldw	r3,-16(fp)
1010ef6c:	00bfff84 	movi	r2,-2
1010ef70:	1884703a 	and	r2,r3,r2
1010ef74:	1001703a 	wrctl	status,r2
  
  return context;
1010ef78:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1010ef7c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1010ef80:	e0bfff17 	ldw	r2,-4(fp)
1010ef84:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1010ef88:	e0bffd17 	ldw	r2,-12(fp)
1010ef8c:	10800017 	ldw	r2,0(r2)
1010ef90:	e0fffd17 	ldw	r3,-12(fp)
1010ef94:	18c00117 	ldw	r3,4(r3)
1010ef98:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1010ef9c:	e0bffd17 	ldw	r2,-12(fp)
1010efa0:	10800117 	ldw	r2,4(r2)
1010efa4:	e0fffd17 	ldw	r3,-12(fp)
1010efa8:	18c00017 	ldw	r3,0(r3)
1010efac:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1010efb0:	e0bffd17 	ldw	r2,-12(fp)
1010efb4:	e0fffd17 	ldw	r3,-12(fp)
1010efb8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1010efbc:	e0bffd17 	ldw	r2,-12(fp)
1010efc0:	e0fffd17 	ldw	r3,-12(fp)
1010efc4:	10c00015 	stw	r3,0(r2)
1010efc8:	e0bffb17 	ldw	r2,-20(fp)
1010efcc:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010efd0:	e0bffe17 	ldw	r2,-8(fp)
1010efd4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1010efd8:	0001883a 	nop
1010efdc:	e037883a 	mov	sp,fp
1010efe0:	df000017 	ldw	fp,0(sp)
1010efe4:	dec00104 	addi	sp,sp,4
1010efe8:	f800283a 	ret

1010efec <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1010efec:	defffb04 	addi	sp,sp,-20
1010eff0:	dfc00415 	stw	ra,16(sp)
1010eff4:	df000315 	stw	fp,12(sp)
1010eff8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1010effc:	d0a01017 	ldw	r2,-32704(gp)
1010f000:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1010f004:	d0a6db17 	ldw	r2,-25748(gp)
1010f008:	10800044 	addi	r2,r2,1
1010f00c:	d0a6db15 	stw	r2,-25748(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010f010:	00002e06 	br	1010f0cc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1010f014:	e0bffd17 	ldw	r2,-12(fp)
1010f018:	10800017 	ldw	r2,0(r2)
1010f01c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1010f020:	e0bffd17 	ldw	r2,-12(fp)
1010f024:	10800403 	ldbu	r2,16(r2)
1010f028:	10803fcc 	andi	r2,r2,255
1010f02c:	10000426 	beq	r2,zero,1010f040 <alt_tick+0x54>
1010f030:	d0a6db17 	ldw	r2,-25748(gp)
1010f034:	1000021e 	bne	r2,zero,1010f040 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1010f038:	e0bffd17 	ldw	r2,-12(fp)
1010f03c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1010f040:	e0bffd17 	ldw	r2,-12(fp)
1010f044:	10800217 	ldw	r2,8(r2)
1010f048:	d0e6db17 	ldw	r3,-25748(gp)
1010f04c:	18801d36 	bltu	r3,r2,1010f0c4 <alt_tick+0xd8>
1010f050:	e0bffd17 	ldw	r2,-12(fp)
1010f054:	10800403 	ldbu	r2,16(r2)
1010f058:	10803fcc 	andi	r2,r2,255
1010f05c:	1000191e 	bne	r2,zero,1010f0c4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1010f060:	e0bffd17 	ldw	r2,-12(fp)
1010f064:	10800317 	ldw	r2,12(r2)
1010f068:	e0fffd17 	ldw	r3,-12(fp)
1010f06c:	18c00517 	ldw	r3,20(r3)
1010f070:	1809883a 	mov	r4,r3
1010f074:	103ee83a 	callr	r2
1010f078:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1010f07c:	e0bfff17 	ldw	r2,-4(fp)
1010f080:	1000031e 	bne	r2,zero,1010f090 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1010f084:	e13ffd17 	ldw	r4,-12(fp)
1010f088:	010ef500 	call	1010ef50 <alt_alarm_stop>
1010f08c:	00000d06 	br	1010f0c4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1010f090:	e0bffd17 	ldw	r2,-12(fp)
1010f094:	10c00217 	ldw	r3,8(r2)
1010f098:	e0bfff17 	ldw	r2,-4(fp)
1010f09c:	1887883a 	add	r3,r3,r2
1010f0a0:	e0bffd17 	ldw	r2,-12(fp)
1010f0a4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1010f0a8:	e0bffd17 	ldw	r2,-12(fp)
1010f0ac:	10c00217 	ldw	r3,8(r2)
1010f0b0:	d0a6db17 	ldw	r2,-25748(gp)
1010f0b4:	1880032e 	bgeu	r3,r2,1010f0c4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1010f0b8:	e0bffd17 	ldw	r2,-12(fp)
1010f0bc:	00c00044 	movi	r3,1
1010f0c0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1010f0c4:	e0bffe17 	ldw	r2,-8(fp)
1010f0c8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010f0cc:	e0fffd17 	ldw	r3,-12(fp)
1010f0d0:	d0a01004 	addi	r2,gp,-32704
1010f0d4:	18bfcf1e 	bne	r3,r2,1010f014 <__alt_data_end+0xfffef014>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1010f0d8:	0001883a 	nop
}
1010f0dc:	0001883a 	nop
1010f0e0:	e037883a 	mov	sp,fp
1010f0e4:	dfc00117 	ldw	ra,4(sp)
1010f0e8:	df000017 	ldw	fp,0(sp)
1010f0ec:	dec00204 	addi	sp,sp,8
1010f0f0:	f800283a 	ret

1010f0f4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1010f0f4:	deffff04 	addi	sp,sp,-4
1010f0f8:	df000015 	stw	fp,0(sp)
1010f0fc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1010f100:	000170fa 	wrctl	ienable,zero
}
1010f104:	0001883a 	nop
1010f108:	e037883a 	mov	sp,fp
1010f10c:	df000017 	ldw	fp,0(sp)
1010f110:	dec00104 	addi	sp,sp,4
1010f114:	f800283a 	ret

1010f118 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1010f118:	defffa04 	addi	sp,sp,-24
1010f11c:	dfc00515 	stw	ra,20(sp)
1010f120:	df000415 	stw	fp,16(sp)
1010f124:	df000404 	addi	fp,sp,16
1010f128:	e13ffe15 	stw	r4,-8(fp)
1010f12c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1010f130:	e0bfff17 	ldw	r2,-4(fp)
1010f134:	10800017 	ldw	r2,0(r2)
1010f138:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1010f13c:	e13ffe17 	ldw	r4,-8(fp)
1010f140:	01071580 	call	10107158 <strlen>
1010f144:	10800044 	addi	r2,r2,1
1010f148:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010f14c:	00000d06 	br	1010f184 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1010f150:	e0bffc17 	ldw	r2,-16(fp)
1010f154:	10800217 	ldw	r2,8(r2)
1010f158:	e0fffd17 	ldw	r3,-12(fp)
1010f15c:	180d883a 	mov	r6,r3
1010f160:	e17ffe17 	ldw	r5,-8(fp)
1010f164:	1009883a 	mov	r4,r2
1010f168:	010f4cc0 	call	1010f4cc <memcmp>
1010f16c:	1000021e 	bne	r2,zero,1010f178 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1010f170:	e0bffc17 	ldw	r2,-16(fp)
1010f174:	00000706 	br	1010f194 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1010f178:	e0bffc17 	ldw	r2,-16(fp)
1010f17c:	10800017 	ldw	r2,0(r2)
1010f180:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010f184:	e0fffc17 	ldw	r3,-16(fp)
1010f188:	e0bfff17 	ldw	r2,-4(fp)
1010f18c:	18bff01e 	bne	r3,r2,1010f150 <__alt_data_end+0xfffef150>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1010f190:	0005883a 	mov	r2,zero
}
1010f194:	e037883a 	mov	sp,fp
1010f198:	dfc00117 	ldw	ra,4(sp)
1010f19c:	df000017 	ldw	fp,0(sp)
1010f1a0:	dec00204 	addi	sp,sp,8
1010f1a4:	f800283a 	ret

1010f1a8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1010f1a8:	defffb04 	addi	sp,sp,-20
1010f1ac:	dfc00415 	stw	ra,16(sp)
1010f1b0:	df000315 	stw	fp,12(sp)
1010f1b4:	df000304 	addi	fp,sp,12
1010f1b8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1010f1bc:	d0a00817 	ldw	r2,-32736(gp)
1010f1c0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010f1c4:	00003106 	br	1010f28c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
1010f1c8:	e0bffd17 	ldw	r2,-12(fp)
1010f1cc:	10800217 	ldw	r2,8(r2)
1010f1d0:	1009883a 	mov	r4,r2
1010f1d4:	01071580 	call	10107158 <strlen>
1010f1d8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1010f1dc:	e0bffd17 	ldw	r2,-12(fp)
1010f1e0:	10c00217 	ldw	r3,8(r2)
1010f1e4:	e0bffe17 	ldw	r2,-8(fp)
1010f1e8:	10bfffc4 	addi	r2,r2,-1
1010f1ec:	1885883a 	add	r2,r3,r2
1010f1f0:	10800003 	ldbu	r2,0(r2)
1010f1f4:	10803fcc 	andi	r2,r2,255
1010f1f8:	1080201c 	xori	r2,r2,128
1010f1fc:	10bfe004 	addi	r2,r2,-128
1010f200:	10800bd8 	cmpnei	r2,r2,47
1010f204:	1000031e 	bne	r2,zero,1010f214 <alt_find_file+0x6c>
    {
      len -= 1;
1010f208:	e0bffe17 	ldw	r2,-8(fp)
1010f20c:	10bfffc4 	addi	r2,r2,-1
1010f210:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010f214:	e0bffe17 	ldw	r2,-8(fp)
1010f218:	e0ffff17 	ldw	r3,-4(fp)
1010f21c:	1885883a 	add	r2,r3,r2
1010f220:	10800003 	ldbu	r2,0(r2)
1010f224:	10803fcc 	andi	r2,r2,255
1010f228:	1080201c 	xori	r2,r2,128
1010f22c:	10bfe004 	addi	r2,r2,-128
1010f230:	10800be0 	cmpeqi	r2,r2,47
1010f234:	1000081e 	bne	r2,zero,1010f258 <alt_find_file+0xb0>
1010f238:	e0bffe17 	ldw	r2,-8(fp)
1010f23c:	e0ffff17 	ldw	r3,-4(fp)
1010f240:	1885883a 	add	r2,r3,r2
1010f244:	10800003 	ldbu	r2,0(r2)
1010f248:	10803fcc 	andi	r2,r2,255
1010f24c:	1080201c 	xori	r2,r2,128
1010f250:	10bfe004 	addi	r2,r2,-128
1010f254:	10000a1e 	bne	r2,zero,1010f280 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
1010f258:	e0bffd17 	ldw	r2,-12(fp)
1010f25c:	10800217 	ldw	r2,8(r2)
1010f260:	e0fffe17 	ldw	r3,-8(fp)
1010f264:	180d883a 	mov	r6,r3
1010f268:	e17fff17 	ldw	r5,-4(fp)
1010f26c:	1009883a 	mov	r4,r2
1010f270:	010f4cc0 	call	1010f4cc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010f274:	1000021e 	bne	r2,zero,1010f280 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1010f278:	e0bffd17 	ldw	r2,-12(fp)
1010f27c:	00000706 	br	1010f29c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
1010f280:	e0bffd17 	ldw	r2,-12(fp)
1010f284:	10800017 	ldw	r2,0(r2)
1010f288:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010f28c:	e0fffd17 	ldw	r3,-12(fp)
1010f290:	d0a00804 	addi	r2,gp,-32736
1010f294:	18bfcc1e 	bne	r3,r2,1010f1c8 <__alt_data_end+0xfffef1c8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
1010f298:	0005883a 	mov	r2,zero
}
1010f29c:	e037883a 	mov	sp,fp
1010f2a0:	dfc00117 	ldw	ra,4(sp)
1010f2a4:	df000017 	ldw	fp,0(sp)
1010f2a8:	dec00204 	addi	sp,sp,8
1010f2ac:	f800283a 	ret

1010f2b0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
1010f2b0:	defffc04 	addi	sp,sp,-16
1010f2b4:	df000315 	stw	fp,12(sp)
1010f2b8:	df000304 	addi	fp,sp,12
1010f2bc:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
1010f2c0:	00bffa04 	movi	r2,-24
1010f2c4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010f2c8:	e03ffd15 	stw	zero,-12(fp)
1010f2cc:	00001906 	br	1010f334 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
1010f2d0:	00840474 	movhi	r2,4113
1010f2d4:	10810d04 	addi	r2,r2,1076
1010f2d8:	e0fffd17 	ldw	r3,-12(fp)
1010f2dc:	18c00324 	muli	r3,r3,12
1010f2e0:	10c5883a 	add	r2,r2,r3
1010f2e4:	10800017 	ldw	r2,0(r2)
1010f2e8:	10000f1e 	bne	r2,zero,1010f328 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
1010f2ec:	00840474 	movhi	r2,4113
1010f2f0:	10810d04 	addi	r2,r2,1076
1010f2f4:	e0fffd17 	ldw	r3,-12(fp)
1010f2f8:	18c00324 	muli	r3,r3,12
1010f2fc:	10c5883a 	add	r2,r2,r3
1010f300:	e0ffff17 	ldw	r3,-4(fp)
1010f304:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
1010f308:	d0e00c17 	ldw	r3,-32720(gp)
1010f30c:	e0bffd17 	ldw	r2,-12(fp)
1010f310:	1880020e 	bge	r3,r2,1010f31c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
1010f314:	e0bffd17 	ldw	r2,-12(fp)
1010f318:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
1010f31c:	e0bffd17 	ldw	r2,-12(fp)
1010f320:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
1010f324:	00000606 	br	1010f340 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010f328:	e0bffd17 	ldw	r2,-12(fp)
1010f32c:	10800044 	addi	r2,r2,1
1010f330:	e0bffd15 	stw	r2,-12(fp)
1010f334:	e0bffd17 	ldw	r2,-12(fp)
1010f338:	10800810 	cmplti	r2,r2,32
1010f33c:	103fe41e 	bne	r2,zero,1010f2d0 <__alt_data_end+0xfffef2d0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1010f340:	e0bffe17 	ldw	r2,-8(fp)
}
1010f344:	e037883a 	mov	sp,fp
1010f348:	df000017 	ldw	fp,0(sp)
1010f34c:	dec00104 	addi	sp,sp,4
1010f350:	f800283a 	ret

1010f354 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
1010f354:	defffb04 	addi	sp,sp,-20
1010f358:	df000415 	stw	fp,16(sp)
1010f35c:	df000404 	addi	fp,sp,16
1010f360:	e13ffe15 	stw	r4,-8(fp)
1010f364:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
1010f368:	e0bfff17 	ldw	r2,-4(fp)
1010f36c:	10840070 	cmpltui	r2,r2,4097
1010f370:	1000021e 	bne	r2,zero,1010f37c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
1010f374:	00840004 	movi	r2,4096
1010f378:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
1010f37c:	e0fffe17 	ldw	r3,-8(fp)
1010f380:	e0bfff17 	ldw	r2,-4(fp)
1010f384:	1885883a 	add	r2,r3,r2
1010f388:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010f38c:	e0bffe17 	ldw	r2,-8(fp)
1010f390:	e0bffc15 	stw	r2,-16(fp)
1010f394:	00000506 	br	1010f3ac <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
1010f398:	e0bffc17 	ldw	r2,-16(fp)
1010f39c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010f3a0:	e0bffc17 	ldw	r2,-16(fp)
1010f3a4:	10800804 	addi	r2,r2,32
1010f3a8:	e0bffc15 	stw	r2,-16(fp)
1010f3ac:	e0fffc17 	ldw	r3,-16(fp)
1010f3b0:	e0bffd17 	ldw	r2,-12(fp)
1010f3b4:	18bff836 	bltu	r3,r2,1010f398 <__alt_data_end+0xfffef398>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
1010f3b8:	e0bffe17 	ldw	r2,-8(fp)
1010f3bc:	108007cc 	andi	r2,r2,31
1010f3c0:	10000226 	beq	r2,zero,1010f3cc <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
1010f3c4:	e0bffc17 	ldw	r2,-16(fp)
1010f3c8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
1010f3cc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
1010f3d0:	0001883a 	nop
1010f3d4:	e037883a 	mov	sp,fp
1010f3d8:	df000017 	ldw	fp,0(sp)
1010f3dc:	dec00104 	addi	sp,sp,4
1010f3e0:	f800283a 	ret

1010f3e4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1010f3e4:	defffe04 	addi	sp,sp,-8
1010f3e8:	df000115 	stw	fp,4(sp)
1010f3ec:	df000104 	addi	fp,sp,4
1010f3f0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1010f3f4:	e0bfff17 	ldw	r2,-4(fp)
1010f3f8:	10bffe84 	addi	r2,r2,-6
1010f3fc:	10c00428 	cmpgeui	r3,r2,16
1010f400:	18001a1e 	bne	r3,zero,1010f46c <alt_exception_cause_generated_bad_addr+0x88>
1010f404:	100690ba 	slli	r3,r2,2
1010f408:	00840474 	movhi	r2,4113
1010f40c:	10bd0704 	addi	r2,r2,-3044
1010f410:	1885883a 	add	r2,r3,r2
1010f414:	10800017 	ldw	r2,0(r2)
1010f418:	1000683a 	jmp	r2
1010f41c:	1010f45c 	xori	zero,r2,17361
1010f420:	1010f45c 	xori	zero,r2,17361
1010f424:	1010f46c 	andhi	zero,r2,17361
1010f428:	1010f46c 	andhi	zero,r2,17361
1010f42c:	1010f46c 	andhi	zero,r2,17361
1010f430:	1010f45c 	xori	zero,r2,17361
1010f434:	1010f464 	muli	zero,r2,17361
1010f438:	1010f46c 	andhi	zero,r2,17361
1010f43c:	1010f45c 	xori	zero,r2,17361
1010f440:	1010f45c 	xori	zero,r2,17361
1010f444:	1010f46c 	andhi	zero,r2,17361
1010f448:	1010f45c 	xori	zero,r2,17361
1010f44c:	1010f464 	muli	zero,r2,17361
1010f450:	1010f46c 	andhi	zero,r2,17361
1010f454:	1010f46c 	andhi	zero,r2,17361
1010f458:	1010f45c 	xori	zero,r2,17361
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1010f45c:	00800044 	movi	r2,1
1010f460:	00000306 	br	1010f470 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1010f464:	0005883a 	mov	r2,zero
1010f468:	00000106 	br	1010f470 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1010f46c:	0005883a 	mov	r2,zero
  }
}
1010f470:	e037883a 	mov	sp,fp
1010f474:	df000017 	ldw	fp,0(sp)
1010f478:	dec00104 	addi	sp,sp,4
1010f47c:	f800283a 	ret

1010f480 <atexit>:
1010f480:	200b883a 	mov	r5,r4
1010f484:	000f883a 	mov	r7,zero
1010f488:	000d883a 	mov	r6,zero
1010f48c:	0009883a 	mov	r4,zero
1010f490:	010f5481 	jmpi	1010f548 <__register_exitproc>

1010f494 <exit>:
1010f494:	defffe04 	addi	sp,sp,-8
1010f498:	000b883a 	mov	r5,zero
1010f49c:	dc000015 	stw	r16,0(sp)
1010f4a0:	dfc00115 	stw	ra,4(sp)
1010f4a4:	2021883a 	mov	r16,r4
1010f4a8:	010f6600 	call	1010f660 <__call_exitprocs>
1010f4ac:	00840474 	movhi	r2,4113
1010f4b0:	10858704 	addi	r2,r2,5660
1010f4b4:	11000017 	ldw	r4,0(r2)
1010f4b8:	20800f17 	ldw	r2,60(r4)
1010f4bc:	10000126 	beq	r2,zero,1010f4c4 <exit+0x30>
1010f4c0:	103ee83a 	callr	r2
1010f4c4:	8009883a 	mov	r4,r16
1010f4c8:	010d0ec0 	call	1010d0ec <_exit>

1010f4cc <memcmp>:
1010f4cc:	01c000c4 	movi	r7,3
1010f4d0:	3980192e 	bgeu	r7,r6,1010f538 <memcmp+0x6c>
1010f4d4:	2144b03a 	or	r2,r4,r5
1010f4d8:	11c4703a 	and	r2,r2,r7
1010f4dc:	10000f26 	beq	r2,zero,1010f51c <memcmp+0x50>
1010f4e0:	20800003 	ldbu	r2,0(r4)
1010f4e4:	28c00003 	ldbu	r3,0(r5)
1010f4e8:	10c0151e 	bne	r2,r3,1010f540 <memcmp+0x74>
1010f4ec:	31bfff84 	addi	r6,r6,-2
1010f4f0:	01ffffc4 	movi	r7,-1
1010f4f4:	00000406 	br	1010f508 <memcmp+0x3c>
1010f4f8:	20800003 	ldbu	r2,0(r4)
1010f4fc:	28c00003 	ldbu	r3,0(r5)
1010f500:	31bfffc4 	addi	r6,r6,-1
1010f504:	10c00e1e 	bne	r2,r3,1010f540 <memcmp+0x74>
1010f508:	21000044 	addi	r4,r4,1
1010f50c:	29400044 	addi	r5,r5,1
1010f510:	31fff91e 	bne	r6,r7,1010f4f8 <__alt_data_end+0xfffef4f8>
1010f514:	0005883a 	mov	r2,zero
1010f518:	f800283a 	ret
1010f51c:	20c00017 	ldw	r3,0(r4)
1010f520:	28800017 	ldw	r2,0(r5)
1010f524:	18bfee1e 	bne	r3,r2,1010f4e0 <__alt_data_end+0xfffef4e0>
1010f528:	31bfff04 	addi	r6,r6,-4
1010f52c:	21000104 	addi	r4,r4,4
1010f530:	29400104 	addi	r5,r5,4
1010f534:	39bff936 	bltu	r7,r6,1010f51c <__alt_data_end+0xfffef51c>
1010f538:	303fe91e 	bne	r6,zero,1010f4e0 <__alt_data_end+0xfffef4e0>
1010f53c:	003ff506 	br	1010f514 <__alt_data_end+0xfffef514>
1010f540:	10c5c83a 	sub	r2,r2,r3
1010f544:	f800283a 	ret

1010f548 <__register_exitproc>:
1010f548:	defffa04 	addi	sp,sp,-24
1010f54c:	dc000315 	stw	r16,12(sp)
1010f550:	04040474 	movhi	r16,4113
1010f554:	84058704 	addi	r16,r16,5660
1010f558:	80c00017 	ldw	r3,0(r16)
1010f55c:	dc400415 	stw	r17,16(sp)
1010f560:	dfc00515 	stw	ra,20(sp)
1010f564:	18805217 	ldw	r2,328(r3)
1010f568:	2023883a 	mov	r17,r4
1010f56c:	10003726 	beq	r2,zero,1010f64c <__register_exitproc+0x104>
1010f570:	10c00117 	ldw	r3,4(r2)
1010f574:	010007c4 	movi	r4,31
1010f578:	20c00e16 	blt	r4,r3,1010f5b4 <__register_exitproc+0x6c>
1010f57c:	1a000044 	addi	r8,r3,1
1010f580:	8800221e 	bne	r17,zero,1010f60c <__register_exitproc+0xc4>
1010f584:	18c00084 	addi	r3,r3,2
1010f588:	18c7883a 	add	r3,r3,r3
1010f58c:	18c7883a 	add	r3,r3,r3
1010f590:	12000115 	stw	r8,4(r2)
1010f594:	10c7883a 	add	r3,r2,r3
1010f598:	19400015 	stw	r5,0(r3)
1010f59c:	0005883a 	mov	r2,zero
1010f5a0:	dfc00517 	ldw	ra,20(sp)
1010f5a4:	dc400417 	ldw	r17,16(sp)
1010f5a8:	dc000317 	ldw	r16,12(sp)
1010f5ac:	dec00604 	addi	sp,sp,24
1010f5b0:	f800283a 	ret
1010f5b4:	00800034 	movhi	r2,0
1010f5b8:	10800004 	addi	r2,r2,0
1010f5bc:	10002626 	beq	r2,zero,1010f658 <__register_exitproc+0x110>
1010f5c0:	01006404 	movi	r4,400
1010f5c4:	d9400015 	stw	r5,0(sp)
1010f5c8:	d9800115 	stw	r6,4(sp)
1010f5cc:	d9c00215 	stw	r7,8(sp)
1010f5d0:	00000000 	call	10000000 <__reset-0x100000>
1010f5d4:	d9400017 	ldw	r5,0(sp)
1010f5d8:	d9800117 	ldw	r6,4(sp)
1010f5dc:	d9c00217 	ldw	r7,8(sp)
1010f5e0:	10001d26 	beq	r2,zero,1010f658 <__register_exitproc+0x110>
1010f5e4:	81000017 	ldw	r4,0(r16)
1010f5e8:	10000115 	stw	zero,4(r2)
1010f5ec:	02000044 	movi	r8,1
1010f5f0:	22405217 	ldw	r9,328(r4)
1010f5f4:	0007883a 	mov	r3,zero
1010f5f8:	12400015 	stw	r9,0(r2)
1010f5fc:	20805215 	stw	r2,328(r4)
1010f600:	10006215 	stw	zero,392(r2)
1010f604:	10006315 	stw	zero,396(r2)
1010f608:	883fde26 	beq	r17,zero,1010f584 <__alt_data_end+0xfffef584>
1010f60c:	18c9883a 	add	r4,r3,r3
1010f610:	2109883a 	add	r4,r4,r4
1010f614:	1109883a 	add	r4,r2,r4
1010f618:	21802215 	stw	r6,136(r4)
1010f61c:	01800044 	movi	r6,1
1010f620:	12406217 	ldw	r9,392(r2)
1010f624:	30cc983a 	sll	r6,r6,r3
1010f628:	4992b03a 	or	r9,r9,r6
1010f62c:	12406215 	stw	r9,392(r2)
1010f630:	21c04215 	stw	r7,264(r4)
1010f634:	01000084 	movi	r4,2
1010f638:	893fd21e 	bne	r17,r4,1010f584 <__alt_data_end+0xfffef584>
1010f63c:	11006317 	ldw	r4,396(r2)
1010f640:	218cb03a 	or	r6,r4,r6
1010f644:	11806315 	stw	r6,396(r2)
1010f648:	003fce06 	br	1010f584 <__alt_data_end+0xfffef584>
1010f64c:	18805304 	addi	r2,r3,332
1010f650:	18805215 	stw	r2,328(r3)
1010f654:	003fc606 	br	1010f570 <__alt_data_end+0xfffef570>
1010f658:	00bfffc4 	movi	r2,-1
1010f65c:	003fd006 	br	1010f5a0 <__alt_data_end+0xfffef5a0>

1010f660 <__call_exitprocs>:
1010f660:	defff504 	addi	sp,sp,-44
1010f664:	df000915 	stw	fp,36(sp)
1010f668:	dd400615 	stw	r21,24(sp)
1010f66c:	dc800315 	stw	r18,12(sp)
1010f670:	dfc00a15 	stw	ra,40(sp)
1010f674:	ddc00815 	stw	r23,32(sp)
1010f678:	dd800715 	stw	r22,28(sp)
1010f67c:	dd000515 	stw	r20,20(sp)
1010f680:	dcc00415 	stw	r19,16(sp)
1010f684:	dc400215 	stw	r17,8(sp)
1010f688:	dc000115 	stw	r16,4(sp)
1010f68c:	d9000015 	stw	r4,0(sp)
1010f690:	2839883a 	mov	fp,r5
1010f694:	04800044 	movi	r18,1
1010f698:	057fffc4 	movi	r21,-1
1010f69c:	00840474 	movhi	r2,4113
1010f6a0:	10858704 	addi	r2,r2,5660
1010f6a4:	12000017 	ldw	r8,0(r2)
1010f6a8:	45005217 	ldw	r20,328(r8)
1010f6ac:	44c05204 	addi	r19,r8,328
1010f6b0:	a0001c26 	beq	r20,zero,1010f724 <__call_exitprocs+0xc4>
1010f6b4:	a0800117 	ldw	r2,4(r20)
1010f6b8:	15ffffc4 	addi	r23,r2,-1
1010f6bc:	b8000d16 	blt	r23,zero,1010f6f4 <__call_exitprocs+0x94>
1010f6c0:	14000044 	addi	r16,r2,1
1010f6c4:	8421883a 	add	r16,r16,r16
1010f6c8:	8421883a 	add	r16,r16,r16
1010f6cc:	84402004 	addi	r17,r16,128
1010f6d0:	a463883a 	add	r17,r20,r17
1010f6d4:	a421883a 	add	r16,r20,r16
1010f6d8:	e0001e26 	beq	fp,zero,1010f754 <__call_exitprocs+0xf4>
1010f6dc:	80804017 	ldw	r2,256(r16)
1010f6e0:	e0801c26 	beq	fp,r2,1010f754 <__call_exitprocs+0xf4>
1010f6e4:	bdffffc4 	addi	r23,r23,-1
1010f6e8:	843fff04 	addi	r16,r16,-4
1010f6ec:	8c7fff04 	addi	r17,r17,-4
1010f6f0:	bd7ff91e 	bne	r23,r21,1010f6d8 <__alt_data_end+0xfffef6d8>
1010f6f4:	00800034 	movhi	r2,0
1010f6f8:	10800004 	addi	r2,r2,0
1010f6fc:	10000926 	beq	r2,zero,1010f724 <__call_exitprocs+0xc4>
1010f700:	a0800117 	ldw	r2,4(r20)
1010f704:	1000301e 	bne	r2,zero,1010f7c8 <__call_exitprocs+0x168>
1010f708:	a0800017 	ldw	r2,0(r20)
1010f70c:	10003226 	beq	r2,zero,1010f7d8 <__call_exitprocs+0x178>
1010f710:	a009883a 	mov	r4,r20
1010f714:	98800015 	stw	r2,0(r19)
1010f718:	00000000 	call	10000000 <__reset-0x100000>
1010f71c:	9d000017 	ldw	r20,0(r19)
1010f720:	a03fe41e 	bne	r20,zero,1010f6b4 <__alt_data_end+0xfffef6b4>
1010f724:	dfc00a17 	ldw	ra,40(sp)
1010f728:	df000917 	ldw	fp,36(sp)
1010f72c:	ddc00817 	ldw	r23,32(sp)
1010f730:	dd800717 	ldw	r22,28(sp)
1010f734:	dd400617 	ldw	r21,24(sp)
1010f738:	dd000517 	ldw	r20,20(sp)
1010f73c:	dcc00417 	ldw	r19,16(sp)
1010f740:	dc800317 	ldw	r18,12(sp)
1010f744:	dc400217 	ldw	r17,8(sp)
1010f748:	dc000117 	ldw	r16,4(sp)
1010f74c:	dec00b04 	addi	sp,sp,44
1010f750:	f800283a 	ret
1010f754:	a0800117 	ldw	r2,4(r20)
1010f758:	80c00017 	ldw	r3,0(r16)
1010f75c:	10bfffc4 	addi	r2,r2,-1
1010f760:	15c01426 	beq	r2,r23,1010f7b4 <__call_exitprocs+0x154>
1010f764:	80000015 	stw	zero,0(r16)
1010f768:	183fde26 	beq	r3,zero,1010f6e4 <__alt_data_end+0xfffef6e4>
1010f76c:	95c8983a 	sll	r4,r18,r23
1010f770:	a0806217 	ldw	r2,392(r20)
1010f774:	a5800117 	ldw	r22,4(r20)
1010f778:	2084703a 	and	r2,r4,r2
1010f77c:	10000b26 	beq	r2,zero,1010f7ac <__call_exitprocs+0x14c>
1010f780:	a0806317 	ldw	r2,396(r20)
1010f784:	2088703a 	and	r4,r4,r2
1010f788:	20000c1e 	bne	r4,zero,1010f7bc <__call_exitprocs+0x15c>
1010f78c:	89400017 	ldw	r5,0(r17)
1010f790:	d9000017 	ldw	r4,0(sp)
1010f794:	183ee83a 	callr	r3
1010f798:	a0800117 	ldw	r2,4(r20)
1010f79c:	15bfbf1e 	bne	r2,r22,1010f69c <__alt_data_end+0xfffef69c>
1010f7a0:	98800017 	ldw	r2,0(r19)
1010f7a4:	153fcf26 	beq	r2,r20,1010f6e4 <__alt_data_end+0xfffef6e4>
1010f7a8:	003fbc06 	br	1010f69c <__alt_data_end+0xfffef69c>
1010f7ac:	183ee83a 	callr	r3
1010f7b0:	003ff906 	br	1010f798 <__alt_data_end+0xfffef798>
1010f7b4:	a5c00115 	stw	r23,4(r20)
1010f7b8:	003feb06 	br	1010f768 <__alt_data_end+0xfffef768>
1010f7bc:	89000017 	ldw	r4,0(r17)
1010f7c0:	183ee83a 	callr	r3
1010f7c4:	003ff406 	br	1010f798 <__alt_data_end+0xfffef798>
1010f7c8:	a0800017 	ldw	r2,0(r20)
1010f7cc:	a027883a 	mov	r19,r20
1010f7d0:	1029883a 	mov	r20,r2
1010f7d4:	003fb606 	br	1010f6b0 <__alt_data_end+0xfffef6b0>
1010f7d8:	0005883a 	mov	r2,zero
1010f7dc:	003ffb06 	br	1010f7cc <__alt_data_end+0xfffef7cc>
